% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathway_enrichment.R
\name{cluster_pathway_enrichment}
\alias{cluster_pathway_enrichment}
\title{Pathway enrichment for graphical clusters}
\usage{
cluster_pathway_enrichment(
  cluster_res,
  databases = c("REAC", "KEGG"),
  feature_to_gene = MotrpacRatTraining6moData::FEATURE_TO_GENE,
  gene_identifier_type = "ensembl_gene",
  universe = MotrpacRatTraining6moData::GENE_UNIVERSES$ensembl_gene,
  kegg_db_destination = NULL,
  fella_method = "hypergeom",
  min_input_set_size = 1,
  min_pw_set_size = 10,
  max_pw_set_size = 200,
  adjust_p = TRUE,
  num_cores = NULL,
  logfile = "/dev/null",
  maxattempt = 50
)
}
\arguments{
\item{cluster_res}{Either a data frame or a list of lists.
If a data frame, it needs at least two columns: "feature" and "cluster".
The "feature" column should be in the format
'\link[MotrpacRatTraining6moData:ASSAY_ABBREV]{MotrpacRatTraining6moData::ASSAY_ABBREV};\link[MotrpacRatTraining6moData:TISSUE_ABBREV]{MotrpacRatTraining6moData::TISSUE_ABBREV};feature_ID'.
If a list of lists, each sublist must be named with the cluster name (character string),
and the values must be features in the format
'\link[MotrpacRatTraining6moData:ASSAY_ABBREV]{MotrpacRatTraining6moData::ASSAY_ABBREV};\link[MotrpacRatTraining6moData:TISSUE_ABBREV]{MotrpacRatTraining6moData::TISSUE_ABBREV};feature_ID'.}

\item{databases}{character vector of g:Profiler pathway databases to query.
"KEGG" and "REAC" (REACTOME) by default.
Current options include: GO (GO:BP, GO:MF, GO:CC to select a particular GO branch),
KEGG, REAC, TF, MIRNA, CORUM, HP, HPA, WP.
See \href{https://rdrr.io/cran/gprofiler2/man/gost.html}{gprofiler2 documentation} for an up-to-date list.}

\item{feature_to_gene}{data frame, map between \code{intersection_id_type} and gene symbols.
Columns must include "feature_ID", "gene_symbol", "ensembl_gene", and "kegg_id".
\link[MotrpacRatTraining6moData:FEATURE_TO_GENE]{MotrpacRatTraining6moData::FEATURE_TO_GENE} by default.}

\item{gene_identifier_type}{character, column in \code{feature_to_gene} that
matches the gene identifier type in \code{universe}.
"ensembl_gene" by default.}

\item{universe}{list of lists of character vectors,
named first by assay (i.e., \link[MotrpacRatTraining6moData:ASSAY_ABBREV]{MotrpacRatTraining6moData::ASSAY_ABBREV})
and then by tissue (i.e., \link[MotrpacRatTraining6moData:TISSUE_ABBREV]{MotrpacRatTraining6moData::TISSUE_ABBREV}).
Vectors provide the full set of gene symbols associated with features tested
during differential analysis. For example, \code{universe$TRNSCRPT$LUNG}
should be a character vector of expressed genes in the lung, where the type
of gene identifier matches \code{gene_identifier_type}.
\code{[MotrpacRatTraining6moData::GENE_UNIVERSES]$ensembl_gene} by default.}

\item{kegg_db_destination}{character, target directory for KEGG
database used for \code{FELLA} pathway enrichment with metabolites.
Creates database if it doesn't exist yet.}

\item{fella_method}{character, enrichment method for \code{\link[FELLA:enrich-funs]{FELLA::enrich()}},
one of "hypergeom" or "diffusion", passed to \code{\link[=run_fella]{run_fella()}}}

\item{min_input_set_size}{integer, input must have this minimum number of
unique mappable gene IDs to attempt enrichment with \code{\link[gprofiler2:gost]{gprofiler2::gost()}}}

\item{min_pw_set_size}{integer, pathway must have at least this many members
to attempt enrichment with \code{\link[gprofiler2:gost]{gprofiler2::gost()}}}

\item{max_pw_set_size}{integer, pathway must have no more than this many members
to attempt enrichment with \code{\link[gprofiler2:gost]{gprofiler2::gost()}}}

\item{adjust_p}{boolean, whether to adjust nominal p-values for multiple testing (IHW by tissue)}

\item{num_cores}{optional integer, number of cores to register if parallel computing is desired}

\item{logfile}{optional character, path to log of failed iterations}

\item{maxattempt}{integer, max number of consecutive null results from \code{\link[gprofiler2:gost]{gprofiler2::gost()}}
before giving up}
}
\value{
data frame with enrichment results, or NULL if no enrichment results were returned:
\describe{
\item{\code{query}}{character, the name of the input query which by default is the order of query with the prefix "query_" (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{term_size}}{integer, number of genes that are annotated to the term (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{query_size}}{integer, number of genes that were included in the query (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{intersection_size}}{integer, the number of genes in the input query that are annotated to the corresponding term (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{precision}}{double, the proportion of genes in the input list that are annotated to the function, defined as \code{intersection_size/query_size} (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{recall}}{double, the proportion of functionally annotated genes that the query recovers, defined as \code{intersection_size/term_size} (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{term_id}}{character, unique term/pathway identifier (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{source}}{character, the abbreviation of the data source for the term/pathway (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{term_name}}{character, term/pathway name (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{effective_domain_size}}{integer, the total number of genes in the universe used for the hypergeometric test (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{source_order}}{integer, numeric order for the term within its data source (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{parents}}{list of term IDs that are hierarchically directly above the term.
For non-hierarchical data sources this points to an artificial root node (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}}).}
\item{\code{evidence_codes}}{character, comma-separated evidence codes (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{intersection}}{character, input gene IDs that intersect with the term/pathway (from \code{\link[gprofiler2:gost]{gprofiler2::gost()}})}
\item{\code{gost_adj_p_value}}{double, improperly adjusted hypergeometric p-value
from \code{\link[gprofiler2:gost]{gprofiler2::gost()}}. For reference only; should not be used to filter results
unless there was only a single ome/tissue/cluster combination in the input.}
\item{\code{computed_p_value}}{double, nominal hypergeometric p-value,
computed from the \code{\link[gprofiler2:gost]{gprofiler2::gost()}} output}
\item{\code{cluster}}{character, cluster label}
\item{\code{tissue}}{character, tissue abbreviation, one of \link[MotrpacRatTraining6moData:TISSUE_ABBREV]{MotrpacRatTraining6moData::TISSUE_ABBREV}}
\item{\code{ome}}{character, assay abbreviation, one of \link[MotrpacRatTraining6moData:ASSAY_ABBREV]{MotrpacRatTraining6moData::ASSAY_ABBREV}}
\item{\code{adj_p_value}}{double, adjusted nominal p-value
\code{computed_p_value} using IHW with tissue as a covariate}
}
}
\description{
Wrapper for multi-tissue, multi-omic pathway enrichment of clustering or
graphical results.
Pathway enrichment is performed using \code{\link[gprofiler2:gost]{gprofiler2::gost()}} separately for
each unique combination of tissue, assay/ome, and cluster.
}
\details{
\code{\link[FELLA:enrich-funs]{FELLA::enrich()}} is used for pathway enrichment of metabolites; \code{\link[gprofiler2:gost]{gprofiler2::gost()}} is used for
all other omes assuming features have been mapped to genes.

This function was used to generate \link[MotrpacRatTraining6moData:GRAPH_PW_ENRICH]{MotrpacRatTraining6moData::GRAPH_PW_ENRICH}.
}
\examples{
# Use graphical clusters as an example
cluster_res = extract_main_clusters()
# Pick a single graphical cluster
# Gastrocnemius features up-regulated in both males and females at 8 weeks of training
cluster_res = cluster_res[cluster_res$cluster == "SKM-GN:8w_F1_M1",]

# Example 1: Run pathway enrichment for this cluster on a single core
pw_enrich = cluster_pathway_enrichment(cluster_res)

\dontrun{
# Example 2: Run pathway enrichment for this cluster on 4 cores
pw_enrich = cluster_pathway_enrichment(cluster_res, num_cores = 4)

# Example 3: Same as above, but include metabolites. 
# Use FELLA's hypergeometric method for enrichment. 
pw_enrich = cluster_pathway_enrichment(cluster_res, 
                                       num_cores = 4,
                                       kegg_db_destination = "~/KEGGdb/test",
                                       fella_method = "hypergeom")
}
}
