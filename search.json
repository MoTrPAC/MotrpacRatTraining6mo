[{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial for MotrpacRatTraining6mo R package","text":"vignette construction. something unclear obviously missing, please submit issue .","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"about-this-package","dir":"Articles","previous_headings":"Introduction","what":"About this package","title":"Tutorial for MotrpacRatTraining6mo R package","text":"package provides functions fetch, explore, reproduce processed data downstream analysis results presented main paper first large-scale multi-omic multi-tissue endurance exercise training study conducted young adult rats Molecular Transducers Physical Activity Consortium (MoTrPAC). Find preprint bioRxiv. highly recommend skimming preprint using package provides important context much greater detail can provide . functions package can used , primarily written analyze data MotrpacRatTraining6moData R package. See examples data can analyzed without package MotrpacRatTraining6moData vignette.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"about-motrpac","dir":"Articles","previous_headings":"Introduction","what":"About MoTrPAC","title":"Tutorial for MotrpacRatTraining6mo R package","text":"MoTrPAC national research consortium designed discover perform preliminary characterization range molecular transducers (“molecular map”) underlie effects physical activity humans. program’s goal study molecular changes occur exercise ultimately advance understanding physical activity improves preserves health. six-year program largest targeted NIH investment funds mechanisms physical activity improves health prevents disease. See motrpac.org motrpac-data.org details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"setup","dir":"Articles","previous_headings":"Introduction","what":"Setup","title":"Tutorial for MotrpacRatTraining6mo R package","text":"yet installed R package, follow instructions . load library. v1.5.0, attaching MotrpacRatTraining6mo also attaches MotrpacRatTraining6moData, additional library(MotrpacRatTraining6moData) command necessary. older versions MotrpacRatTraining6mo, attach MotrpacRatTraining6moData directly. Attaching MotrpacRatTraining6moData makes easier load look documentation data objects data package. also load several suggested packages, required run examples vignette. Note: Data objects MotrpacRatTraining6moData package indicated variable names caps, e.g. PHENO, TRNSCRPT_LIVER_RAW_COUNTS. Tip: learn data object function, use ? retrieve documentation, e.g., ?METAB_FEATURE_ID_MAP, ?load_sample_data. Note MotrpacRatTraining6mo must installed loaded library() work.","code":"library(MotrpacRatTraining6mo) #> Loading required package: MotrpacRatTraining6moData library(MotrpacRatTraining6moData) suggests = c(\"gprofiler2\",\"IHW\",\"FELLA\",\"foreach\",\"KEGGREST\",\"repfdr\") need_to_install = c() for (p in suggests){   if (!requireNamespace(p, quietly = TRUE)){     need_to_install = c(need_to_install,p)   } } if(length(need_to_install)>0){   stop(sprintf(\"The following packages must be installed to run examples in this vignette:\\n %s\",                paste(need_to_install, collapse=\", \"))) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"study-design","dir":"Articles","previous_headings":"","what":"Study design","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Details experimental design can found supplementary methods bioRxiv preprint. Briefly, 6-month-old young adult rats subjected progressive endurance exercise training 1, 2, 4, 8 weeks, tissues collected 48 hours last training bout. Sex-matched sedentary, untrained rats used controls. Whole blood, plasma, 18 solid tissues analyzed using genomics, proteomics, metabolomics, protein immunoassay technologies, assays performed subset tissues. Depending assay, 3 6 replicates per sex per time point analyzed.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"tissue-and-assay-abbreviations","dir":"Articles","previous_headings":"","what":"Tissue and assay abbreviations","title":"Tutorial for MotrpacRatTraining6mo R package","text":"important aware tissue assay abbreviations used name data objects define arguments many functions. vectors abbreviations also available TISSUE_ABBREV ASSAY_ABBREV.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"tissues","dir":"Articles","previous_headings":"Tissue and assay abbreviations","what":"Tissues","title":"Tutorial for MotrpacRatTraining6mo R package","text":"ADRNL: adrenal gland BAT: brown adipose tissue BLOOD: whole blood COLON: colon CORTEX: cerebral cortex HEART: heart HIPPOC: hippocampus HYPOTH: hypothalamus KIDNEY: kidney LIVER: liver LUNG: lung OVARY: ovaries (female gonads) PLASMA: plasma blood SKM-GN: gastrocnemius (leg skeletal muscle) SKM-VL: vastus lateralis (leg skeletal muscle) SMLINT: small intestine SPLEEN: spleen TESTES: testes (male gonads) VENACV: vena cava WAT-SC: subcutaneous white adipose tissue","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"assaysomes","dir":"Articles","previous_headings":"Tissue and assay abbreviations","what":"Assays/omes","title":"Tutorial for MotrpacRatTraining6mo R package","text":"ACETYL: acetylproteomics; protein site acetylation ATAC: chromatin accessibility, ATAC-seq data IMMUNO: multiplexed immunoassays (cytokines hormones) METAB: metabolomics lipidomics METHYL: DNA methylation, RRBS data PHOSPHO: phosphoproteomics; protein site phosphorylation PROT: global proteomics; protein abundance TRNSCRPT: transcriptomics, RNA-Seq data UBIQ: ubiquitylome; protein site ubiquitination","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"data-in-motrpacrattraining6modata","dir":"Articles","previous_headings":"","what":"Data in MotrpacRatTraining6moData","title":"Tutorial for MotrpacRatTraining6mo R package","text":"functions package can used , primarily written analyze data MotrpacRatTraining6moData R package. brief summary kinds data included MotrpacRatTraining6moData: Assay, tissue, sex, training group abbreviations, codes, colors, order used plots Phenotypic data, PHENO Mapping various feature identifiers, .e., FEATURE_TO_GENE, RAT_TO_HUMAN_GENE Ome-specific feature annotation, .e., METAB_FEATURE_ID_MAP, METHYL_FEATURE_ANNOT (GCP ), ATAC_FEATURE_ANNOT (GCP ) Ome-specific sample-level metadata, .e., TRNSCRPT_META, ATAC_META, METHYL_META, IMMUNO_META, PHOSPHO_META, PROT_META, ACETYL_META, UBIQ_META Raw counts RNA-Seq (TRNSCRPT), ATAC-Seq (ATAC), RRBS (METHYL) data, e.g., TRNSCRPT_LIVER_RAW_COUNTS. Note epigenetic data (ATAC METHYL) must downloaded Google Cloud Storage. Normalized sample-level data, e.g., TRNSCRPT_SKMGN_NORM_DATA Differential analysis results, e.g., HEART_PROT_DA (see details ) Sample outliers excluded differential analysis, OUTLIERS Table training-regulated features 5% FDR, TRAINING_REGULATED_FEATURES Bayesian graphical analysis inputs results (see details ) Pathway enrichment main graphical clusters, GRAPH_PW_ENRICH details MotrpacRatTraining6moData R package, see vignette. remainder vignette focus functions available MotrpacRatTraining6mo. MotrpacRatTraining6mo includes several functions easily fetch compile data MotrpacRatTraining6moData. Use load_sample_data() load sample-level data specific ome tissue. fetch various forms sample-level RNA-Seq (TRNSCRPT) data brown adipose tissue (BAT) example. load_sample_data() tell specified dataset doesn’t exist. load_sample_data() also download epigenetic data Google Cloud Storage. Note: Epigenetic data require substantially memory omes. can plot normalized sample-level data single feature using plot_feature_normalized_data(). following examples different ways plot feature.    combine_normalized_data() wrapper load_sample_data() returns combined sample-level normalized data multiple datasets. Note sample-specific vial labels used column names sample-level data replaced rat-specific participant IDs (PIDs) allow measurements multiple datasets animal concatenated. Similarly, combine_da_results() concatenates differential analysis results multiple datasets. transcript_prep_data() atac_prep_data() functions used within differential analysis functions TRNSCRPT ATAC data. collect filtered raw counts, normalized sample-level data, phenotypic data, ome-specific sample metadata, covariates, outliers associated given tissue. additional functions provided fetch epigenetic data Google Cloud Storage: load_methyl_raw_data(): Return unfiltered raw counts given tissue. load_methyl_feature_annotation(): Return METHYL feature annotation file. load_atac_feature_annotation(): Return ATAC feature annotation file. get_rdata_from_url(): know URL specific RData file GCS, can use function return object using url argument. Full URLs epigenetic data available README MotrpacRatTraining6moData package. Finally, list_available_data() returns list available data objects specified package. MotrpacRatTraining6moData library attached, can learn data objects ?, e.g., ?TISSUE_COLORS, can load data objects environment using data(), e.g., data(TRAINING_REGULATED_FEATURES).","code":"# Load RNA-seq raw counts for brown adipose tissue  data = load_sample_data(\"BAT\", \"TRNSCRPT\", normalized = FALSE)  # Load the normalized RNA-seq data for brown adipose tissue instead data = load_sample_data(\"BAT\", \"TRNSCRPT\")  # Load the normalized RNA-seq data for brown adipose tissue, but exclude sample outliers  data = load_sample_data(\"BAT\", \"TRNSCRPT\", exclude_outliers = TRUE)  # Load the normalized RNA-seq data for brown adipose tissue for training-regulated features only data = load_sample_data(\"BAT\", \"TRNSCRPT\", training_regulated_only = TRUE) data = load_sample_data(\"VENACV\", \"PROT\") #> Warning in load_sample_data(\"VENACV\", \"PROT\"): No data returned for tissue #> VENACV and assay PROT with current arguments. # Load ATAC-seq raw counts for hippocampus, excluding outliers  data = load_sample_data(\"HIPPOC\",                          \"ATAC\",                          exclude_outliers = TRUE,                          normalized = FALSE,                          scratchdir = \"/tmp\") plot_feature_normalized_data(feature = \"PROT;SKM-GN;NP_786937.1\",                              add_gene_symbol = TRUE) plot_feature_normalized_data(assay = \"PROT\",                              tissue = \"SKM-GN\",                              feature_ID = \"NP_786937.1\",                              exclude_outliers = TRUE,                              scale_x_by_time = FALSE) plot_feature_normalized_data(assay = \"PROT\",                              tissue = \"SKM-GN\",                              feature_ID = \"NP_786937.1\",                              facet_by_sex = TRUE) # Return all normalized RNA-seq data data = combine_normalized_data(assays = \"TRNSCRPT\")  # Return all normalized proteomics data. Exclude outliers  data = combine_normalized_data(assays = c(\"PROT\",\"UBIQ\",\"PHOSPHO\",\"ACETYL\"),                                exclude_outliers = TRUE)  # Return normalized ATAC-seq data for training-regulated features  data = combine_normalized_data(assays = \"ATAC\",                                 training_regulated_only = TRUE)  # Return all non-epigenetic data # Note that the \"include_epigen\" argument is FALSE by default data = combine_normalized_data() # Return all non-epigenetic differential analysis results,  # including meta-regression results for metabolomics res = combine_da_results()  # Return METHYL and ATAC differential analysis results for gastrocnemius  res = combine_da_results(tissues=\"SKM-GN\",                           assays=c(\"ATAC\",\"METHYL\"),                          include_epigen=TRUE) list_available_data(\"MotrpacRatTraining6moData},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential analysis","title":"Tutorial for MotrpacRatTraining6mo R package","text":"details differential analysis methods available supplementary methods bioRxiv preprint. Simply put, training differential analysis considers training groups sex (sedentary controls 4 training time points) determine analyte significantly changes either sex point training time course. adjusted p-values analysis used determine set analytes regulated endurance exercise training 5% FDR, referred training-regulated features. timewise differential analysis performs pairwise contrasts trained animals time point (1, 2, 4, 8 weeks) sex-matched sedentary control animals. gives us sex- time- specific p-values effect sizes, referred timewise summary statistics. provide following functions replicate timewise training differential analysis results dataset. Look corresponding documentation function details, e.g. ?transcript_timewise_da. proteomics_timewise_da() proteomics_training_da() atac_training_da() atac_timewise_da() immuno_timewise_da() immuno_training_da() metab_timewise_da() metab_training_da() metab_meta_regression() rrbs_differential_analysis() transcript_timewise_da() transcript_training_da() , replicate protein acetylation timewise differential analysis results provided MotrpacRatTraining6moData.  can plot differential analysis results single feature using plot_feature_logfc(). following examples different ways plot results feature.","code":"timewiseList = list() for (tissue in c(\"HEART\",\"LIVER\")){   timewiseList[[tissue]] = proteomics_timewise_da(\"ACETYL\", tissue) } #> ACETYL_HEART_NORM_DATA #> Warning: Partial NA coefficients for 157 probe(s) #> ACETYL_LIVER_NORM_DATA #> Warning: Partial NA coefficients for 355 probe(s) timewise = do.call(\"rbind\", timewiseList)  # merge with version of results in MotrpacRatTraining6moData original = combine_da_results(assays=\"ACETYL\") #> ACETYL_HEART_DA #> ACETYL_LIVER_DA merged = merge(original, timewise,                 by=c(\"feature_ID\",\"assay\",\"assay_code\",\"tissue\",\"tissue_code\",\"sex\",\"comparison_group\"),                suffixes=c(\"_orginal\",\"_reproduced\"))  # plot  plot(-log10(merged$p_value_orginal),       -log10(merged$p_value_reproduced),       type=\"p\", cex=0.5,      xlab=\"Original timewise p-value (-log10)\",      ylab=\"Reproduced timewise p-value (-log10)\",      main=\"Timewise DA results for ACETYL data\") plot_feature_logfc(feature = \"PROT;SKM-GN;NP_786937.1\",                    add_gene_symbol = TRUE) plot_feature_logfc(assay = \"PROT\",                    tissue = \"SKM-GN\",                    feature_ID = \"NP_786937.1\",                    scale_x_by_time = FALSE) plot_feature_logfc(assay = \"PROT\",                    tissue = \"SKM-GN\",                    feature_ID = \"NP_786937.1\",                    facet_by_sex = TRUE,                    add_adj_p = FALSE)"},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"summary","dir":"Articles","previous_headings":"Bayesian graphical clustering","what":"Summary","title":"Tutorial for MotrpacRatTraining6mo R package","text":"performing differential analysis trained animals sedentary control animals identify training-regulated features across datasets, wanted characterize groups features similar trajectories training time course compare within tissues. , clustered 34,244 training-regulated features complete timewise summary statistics (, four training time points sexes) using timewise z-scores expectation-maximization (EM) clustering algorithm repfdr. algorithm assumes timewise z-score can take one three latent states: -1 -regulation, 1 -regulation, 0 null (.e., unchanged relative sedentary control group). algorithm computes posterior probabilities combination states (-1/, 1/, 0/null) experimental groups (8 groups: 1-, 2-, 4-, 8-week time points females males). used posterior probabilities effectively assign continuous z-scores simplified states. example, feature following z-scores assigned corresponding states high probability: combine male female states given time point using following notation: Descriptively, feature null sexes (F0_M0) 1 week (1w) 2 weeks (2w) training -regulated males (F0_M1) 4 8 weeks training. One major advantage approach can use time points discrete states construct graph, point (“node”) graph represents state given time point (e.g., 1w_F-1_M0). feature interest, can draw path graph represent trajectory training time course. can use paths nodes graph define clusters features similar temporal behavior characterize underlying biology. example, can represent complete path feature training time course follows: 1w_F0_M0->2w_F0_M0->4w_F0_M1->8w_F0_M1. path made connecting 1w_F0_M0 node 2w_F0_M0 node 4w_F0_M1 node 8w_F0_M1 node. connection single pair consecutive nodes called edge. example, 2w_F0_M0---4w_F0_M1 edge represents features null sexes 2 weeks training -regulated males 4 weeks training. 1w_F0_M0->2w_F0_M0->4w_F0_M1->8w_F0_M1 path constructed 3 edges, represented -> notation. figure provides toy examples four features demonstrate graphical representation. Feature f2 (green) trajectory described . . schematic example graphical representation differential analysis results. Top left: z-scores four features. positive score corresponds -regulation (red), negative score corresponds regulation (blue). Bottom left: assignment features node sets full path sets (edge sets shown conciseness can easily inferred full paths). Node labels follow [time]_F[x]_M[y] format [time] shows animal sacrifice week can take one (1w, 2w, 4w, 8w), [x] [y] one (-1,0,1), corresponding -regulation, effect, -regulation, respectively. Right: graphical representation feature sets. Columns training time points, rows differential abundance states. Node edge sizes proportional number features assigned set. herein refer approach using repfdr construct graph dynamic multi-omic responses endurance exercise training across tissues graphical clustering. following sections describe reproduce graphical clustering analysis, run repfdr data, explore visualize nodes, edges, paths (collectively referred clusters) resulting graph. additional details advantages approach traditional clustering methods, see supplementary methods bioRxiv preprint. interested exploring existing pathway enrichment results, skip Visualization pathway enrichment results.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"re-run-repfdr-to-determine-states","dir":"Articles","previous_headings":"Bayesian graphical clustering","what":"(Re-)run repfdr to determine states","title":"Tutorial for MotrpacRatTraining6mo R package","text":"REPFDR_INPUTS provides inputs analysis repfdr, can replicated bayesian_graphical_clustering() shown . raw repfdr results provided REPFDR_RES. bayesian_graphical_clustering() study-specific wrapper repfdr_wrapper(). repfdr_wrapper() can used analyze set z-scores. show example simulated data.","code":"data(REPFDR_INPUTS) zscores = REPFDR_INPUTS$zs_smoothed res = bayesian_graphical_clustering(zscores) # load required library for this function library(repfdr)  # Simulate data with a single null cluster # Toy experiment with 8 groups  zcolnames = paste(\"Exp\", 1:8) zscores = matrix(rnorm(80000),ncol=8,dimnames = list(1:10000,zcolnames)) # Add a cluster with a strong signal, # i.e. assign a z-score of ~5 to the first 4 groups for the first 500 features zscores[1:500,1:4] = zscores[1:500,1:4] + 5 # Run the repfdr wrapper repfdr_results = repfdr_wrapper(zscores, df=10) #> EM iteration 2 #> EM iteration 3 #> EM iteration 4 #> EM iteration 5 #> EM iteration 6 #> EM iteration 7 #> EM iteration 8 #> EM iteration 9 #> EM iteration 10 #> EM iteration 11 #> EM iteration 12 #> EM iteration 13 #> EM iteration 14 #> EM iteration 15 #> EM iteration 16 #> EM iteration 17 #> EM iteration 18 #> EM iteration 19 #> EM iteration 20 #> EM iteration 21 #> EM iteration 22 #> EM iteration 23 #> EM iteration 24 #> EM iteration 25 #> EM iteration 26 #> EM iteration 27 #> EM iteration 28 #> EM iteration 29 #> EM iteration 30 #> EM iteration 31 #> EM iteration 32 #> EM iteration 33 #> EM iteration 34 #> EM iteration 35 #> EM iteration 36 #> EM iteration 37 #> EM iteration 38 #> EM iteration 39 #> EM iteration 40 #> EM iteration 41 #> EM iteration 42 #> EM iteration 43 #> EM iteration 44 #> EM iteration 45 #> EM iteration 46 #> EM iteration 47 #> EM iteration 48 #> EM iteration 49 #> EM iteration 50 #> EM iteration 51 #> EM iteration 52 #> EM iteration 53 #> EM iteration 54 #> EM iteration 55 #> EM iteration 56 #> EM iteration 57 #> EM iteration 58 #> EM iteration 59 #> EM iteration 60 #> EM iteration 61 #> EM iteration 62 #> EM iteration 63 #> EM iteration 64 #> EM iteration 65 #> EM iteration 66 #> EM iteration 67 #> EM iteration 68 #> EM iteration 69 #> EM iteration 70 #> EM iteration 71 #> EM iteration 72 #> EM iteration 73 #> EM iteration 74 #> EM iteration 75 #> EM iteration 76 #> EM iteration 77 #> EM iteration 78 #> EM iteration 79 #> EM iteration 80 #> EM iteration 81 #> EM iteration 82 #> EM iteration 83 #> EM iteration 84 #> EM iteration 85 #> EM iteration 86 #> EM iteration 87 #> EM iteration 88 #> EM iteration 89 #> EM iteration 90 #> EM iteration 91 #> EM iteration 92 #> EM iteration 93 #> EM iteration 94 #> EM iteration 95 #> EM iteration 96 #> EM iteration 97 #> EM iteration 98 #> EM iteration 99 #> EM iteration 100 #> EM iteration 101 #> EM iteration 102 #> EM iteration 103 #> EM iteration 104 #> EM iteration 105 #> EM iteration 106 #> EM iteration 107 #> EM iteration 108 #> EM iteration 109 #> EM iteration 110 #> EM iteration 111 #> EM iteration 112 #> EM iteration 113 #> EM iteration 114 #> EM iteration 115 #> EM iteration 116 #> EM iteration 117 #> EM iteration 118 #> EM iteration 119 #> EM iteration 120 #> EM iteration 121 #> EM iteration 122 #> EM iteration 123 #> EM iteration 124 #> EM iteration 125 #> EM iteration 126 #> EM iteration 127 #> EM iteration 128 #> EM iteration 129 #> EM iteration 130 #> EM iteration 131 #> EM iteration 132 #> EM iteration 133 #> EM iteration 134 #> EM iteration 135 #> EM iteration 136 #> EM iteration 137 #> EM iteration 138 #> EM iteration 139 #> EM iteration 140 #> EM iteration 141 #> EM iteration 142 #> EM iteration 143 #> EM iteration 144 #> EM iteration 145 #> EM iteration 146 #> EM iteration 147 #> EM iteration 148 #> EM iteration 149 #> EM iteration 150 #> EM iteration 151 #> EM iteration 152 #> EM iteration 153 #> EM iteration 154 #> EM iteration 155 #> EM iteration 156 #> EM iteration 157 #> EM iteration 158 #> EM iteration 159 #> EM iteration 160 #> EM iteration 161 #> EM iteration 162 #> EM iteration 163 #> EM iteration 164 #> EM iteration 165 #> EM iteration 166 #> EM iteration 167 #> EM iteration 168 #> EM iteration 169 #> EM iteration 170 #> EM iteration 171 #> EM iteration 172 #> EM iteration 173 #> EM iteration 174 #> EM iteration 175 #> EM iteration 176 #> EM iteration 177 #> EM iteration 178 #> EM iteration 179 #> EM iteration 180 #> EM iteration 181 #> EM iteration 182 #> EM iteration 183 #> EM iteration 184 #> Converged after 183 EM iterations.  # Now we expect the first 500 features to belong to cluster 11110000 (up-regulated in the first 4 groups) # and the remaining 9500 to belong to cluster 00000000 (null in all groups) hist(repfdr_results$repfdr_cluster_posteriors[,\"00000000\"],       breaks=20,       main=\"Posterior probability of null cluster for all features\") hist(repfdr_results$repfdr_cluster_posteriors[1:500,\"11110000\"],       breaks=20,       main=\"Posterior probability of 11110000 cluster for first 500 features\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"explore-graphical-clustering-results","dir":"Articles","previous_headings":"Bayesian graphical clustering","what":"Explore graphical clustering results","title":"Tutorial for MotrpacRatTraining6mo R package","text":"graph representation repfdr results provided GRAPH_COMPONENTS (node edge lists) GRAPH_STATES (data frame representation). Note: Features specified format “[ASSAY_ABBREV];[TISSUE_ABBREV];[feature_ID]”, e.g. “PHOSPHO;SKM-GN;NP_001006973.1_S34s”, “METAB;SKM-GN;1-methylnicotinamide” can extract node, edge, path feature sets given tissue using extract_tissue_sets(). extract training-regulated features three (k=3) largest nodes, edges, paths gastrocnemius (tissues=\"SKM-GN\") least 20 features (min_size=20). also add feature lists 8-week nodes (add_week8=TRUE), generally interest 8-week time point represents final trained state. get_all_trajectories() returns non-empty paths results.  extract_main_clusters() returns subset graphical clusters pathway enrichment performed preprint, namely 2 largest nodes, 2 largest edges, 10 largest non-null paths, 8-week nodes graphical representation training-regulated features tissue. extract training-regulated features associated specific graphical cluster, tissue, ome, etc., can subset GRAPH_STATES.","code":"data(GRAPH_STATES) head(GRAPH_STATES) #>                                                             feature    ome #> ACETYL;HEART;NP_001003673.1_K477k ACETYL;HEART;NP_001003673.1_K477k ACETYL #> ACETYL;HEART;NP_001004072.2_K77k   ACETYL;HEART;NP_001004072.2_K77k ACETYL #> ACETYL;HEART;NP_001004072.2_K83k   ACETYL;HEART;NP_001004072.2_K83k ACETYL #> ACETYL;HEART;NP_001004085.1_K186k ACETYL;HEART;NP_001004085.1_K186k ACETYL #> ACETYL;HEART;NP_001004085.1_K261k ACETYL;HEART;NP_001004085.1_K261k ACETYL #> ACETYL;HEART;NP_001004085.1_K268k ACETYL;HEART;NP_001004085.1_K268k ACETYL #>                                   tissue           feature_ID state_1w state_2w #> ACETYL;HEART;NP_001003673.1_K477k  HEART NP_001003673.1_K477k    F0_M0    F0_M0 #> ACETYL;HEART;NP_001004072.2_K77k   HEART  NP_001004072.2_K77k    F0_M0    F0_M0 #> ACETYL;HEART;NP_001004072.2_K83k   HEART  NP_001004072.2_K83k  F-1_M-1  F-1_M-1 #> ACETYL;HEART;NP_001004085.1_K186k  HEART NP_001004085.1_K186k    F0_M1    F0_M1 #> ACETYL;HEART;NP_001004085.1_K261k  HEART NP_001004085.1_K261k    F0_M1    F0_M1 #> ACETYL;HEART;NP_001004085.1_K268k  HEART NP_001004085.1_K268k    F0_M1    F0_M1 #>                                   state_4w state_8w #> ACETYL;HEART;NP_001003673.1_K477k    F0_M0  F-1_M-1 #> ACETYL;HEART;NP_001004072.2_K77k     F1_M0    F1_M0 #> ACETYL;HEART;NP_001004072.2_K83k    F0_M-1    F0_M0 #> ACETYL;HEART;NP_001004085.1_K186k    F0_M0   F0_M-1 #> ACETYL;HEART;NP_001004085.1_K261k    F0_M0   F0_M-1 #> ACETYL;HEART;NP_001004085.1_K268k    F0_M0   F0_M-1 #>                                                                          path #> ACETYL;HEART;NP_001003673.1_K477k    1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1 #> ACETYL;HEART;NP_001004072.2_K77k       1w_F0_M0->2w_F0_M0->4w_F1_M0->8w_F1_M0 #> ACETYL;HEART;NP_001004072.2_K83k  1w_F-1_M-1->2w_F-1_M-1->4w_F0_M-1->8w_F0_M0 #> ACETYL;HEART;NP_001004085.1_K186k     1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 #> ACETYL;HEART;NP_001004085.1_K261k     1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 #> ACETYL;HEART;NP_001004085.1_K268k     1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 #>                                                                         tissue_path #> ACETYL;HEART;NP_001003673.1_K477k    HEART:1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1 #> ACETYL;HEART;NP_001004072.2_K77k       HEART:1w_F0_M0->2w_F0_M0->4w_F1_M0->8w_F1_M0 #> ACETYL;HEART;NP_001004072.2_K83k  HEART:1w_F-1_M-1->2w_F-1_M-1->4w_F0_M-1->8w_F0_M0 #> ACETYL;HEART;NP_001004085.1_K186k     HEART:1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 #> ACETYL;HEART;NP_001004085.1_K261k     HEART:1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 #> ACETYL;HEART;NP_001004085.1_K268k     HEART:1w_F0_M1->2w_F0_M1->4w_F0_M0->8w_F0_M-1 gastroc_sets = extract_tissue_sets(tissues=\"SKM-GN\",                                    k=3,                                    min_size=20,                                    add_week8=TRUE) names(gastroc_sets) #>  [1] \"8w_F1_M1\"                                       #>  [2] \"8w_F-1_M-1\"                                     #>  [3] \"4w_F1_M1\"                                       #>  [4] \"8w_F-1_M0\"                                      #>  [5] \"8w_F0_M-1\"                                      #>  [6] \"8w_F0_M0\"                                       #>  [7] \"8w_F0_M1\"                                       #>  [8] \"8w_F1_M0\"                                       #>  [9] \"4w_F1_M1---8w_F1_M1\"                            #> [10] \"1w_F0_M0---2w_F0_M0\"                            #> [11] \"4w_F-1_M-1---8w_F-1_M-1\"                        #> [12] \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\"         #> [13] \"1w_F-1_M-1->2w_F-1_M-1->4w_F-1_M-1->8w_F-1_M-1\" #> [14] \"1w_F0_M1->2w_F0_M1->4w_F1_M1->8w_F1_M1\"  # look at the list of features in the \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\" path head(gastroc_sets$`1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1`) #> [1] \"ATAC;SKM-GN;chr15:101579022-101579761\" #> [2] \"ATAC;SKM-GN;chr1:221194280-221195125\"  #> [3] \"ATAC;SKM-GN;chr1:221199295-221200124\"  #> [4] \"ATAC;SKM-GN;chr20:34579127-34579734\"   #> [5] \"ATAC;SKM-GN;chr5:114013062-114014681\"  #> [6] \"ATAC;SKM-GN;chrX:119151643-119154560\" paths = get_all_trajectories() head(names(paths)) #> [1] \"1w_F-1_M1->2w_F-1_M0->4w_F-1_M0->8w_F-1_M0\" #> [2] \"1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1\"     #> [3] \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\"     #> [4] \"1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F1_M1\"     #> [5] \"1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1\"   #> [6] \"1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F0_M1\" hist(unlist(lapply(paths, length)), breaks=100) clusters = extract_main_clusters() data(GRAPH_STATES)  # if you want features in this path in LUNG: clust = \"LUNG:1w_F1_M-1->2w_F1_M-1->4w_F0_M-1->8w_F-1_M-1\" features_of_interest = stats::na.omit(GRAPH_STATES$feature[GRAPH_STATES$tissue_path == clust]) as.vector(features_of_interest) #>  [1] \"PHOSPHO;LUNG;NP_001012023.1_S447s\"      #>  [2] \"PHOSPHO;LUNG;NP_001013238.2_S1594s\"     #>  [3] \"PHOSPHO;LUNG;NP_001020859.1_S486sS489s\" #>  [4] \"PHOSPHO;LUNG;NP_001028859.1_S133s\"      #>  [5] \"PHOSPHO;LUNG;NP_001099225.2_S621s\"      #>  [6] \"PHOSPHO;LUNG;NP_001099344.2_S1816s\"     #>  [7] \"PHOSPHO;LUNG;NP_001164067.1_T456t\"      #>  [8] \"PHOSPHO;LUNG;NP_001178760.1_S542s\"      #>  [9] \"PHOSPHO;LUNG;NP_001178775.1_S270s\"      #> [10] \"PHOSPHO;LUNG;NP_001178880.1_S5423s\"     #> [11] \"PHOSPHO;LUNG;NP_036849.1_T422t\"         #> [12] \"PHOSPHO;LUNG;NP_037349.1_S512s\"         #> [13] \"PHOSPHO;LUNG;NP_058862.1_S63s\"          #> [14] \"PHOSPHO;LUNG;NP_647546.1_S288s\"         #> [15] \"PHOSPHO;LUNG;NP_665709.2_S702s\"         #> [16] \"PHOSPHO;LUNG;XP_001058477.1_S2558s\"     #> [17] \"PHOSPHO;LUNG;XP_002726994.2_S307s\"      #> [18] \"PHOSPHO;LUNG;XP_003752547.1_S411s\"      #> [19] \"PHOSPHO;LUNG;XP_003752548.1_S411s\"      #> [20] \"PHOSPHO;LUNG;XP_003754609.1_S1206s\"     #> [21] \"PHOSPHO;LUNG;XP_006226323.1_Y618y\"      #> [22] \"PHOSPHO;LUNG;XP_006235089.1_S434s\"      #> [23] \"PHOSPHO;LUNG;XP_008766933.1_S1807s\"     #> [24] \"PHOSPHO;LUNG;XP_017443701.1_S938s\"      #> [25] \"PHOSPHO;LUNG;XP_017444244.1_S5362s\"     #> [26] \"PHOSPHO;LUNG;XP_017454714.1_S1250s\"     #> [27] \"PHOSPHO;LUNG;XP_017454716.1_S1225s\"     #> [28] \"PHOSPHO;LUNG;XP_017457486.1_S406s\"      #> [29] \"PHOSPHO;LUNG;XP_017457774.1_S758s\"      #> [30] \"PROT;LUNG;XP_003750594.1\"  # if you want features in this path in multiple tissues: clust = \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\" tissues = c(\"HEART\",\"SKM-GN\",\"SKM-VL\") features_of_interest = stats::na.omit(GRAPH_STATES$feature[GRAPH_STATES$path == clust & GRAPH_STATES$tissue %in% tissues]) length(features_of_interest) #> [1] 685 # look at a table of omes and tissues represented  tissues = sapply(features_of_interest, function(x){   unname(unlist(strsplit(x, \";\")))[2] }) omes = sapply(features_of_interest, function(x){   unname(unlist(strsplit(x, \";\")))[1] }) table(tissues, omes) #>         omes #> tissues  ACETYL ATAC METAB PHOSPHO PROT TRNSCRPT UBIQ #>   HEART      50    0    35      52  108      110    2 #>   SKM-GN      0    6    14      55  130       44    0 #>   SKM-VL      0    0     2       0    0       77    0"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"plot-graph-of-differential-features","dir":"Articles","previous_headings":"Bayesian graphical clustering","what":"Plot graph of differential features","title":"Tutorial for MotrpacRatTraining6mo R package","text":"can use get_tree_plot_for_tissue() draw graphical representation given set training-regulated features. First, let’s look graph differential features liver. sizes edges nodes proportional number training-regulated features assigned corresponding states. Nodes arranged rows states (e.g., “F ”) columns training time points. node intersection “F ” “week 1” represents features null males -regulated females one week endurance exercise training (.e., 1w_F1_M0 notation ).  messy, let’s look just 5 largest paths instead.  , let’s split edges data type (assay/ome) see features represented. can change curvature alpha range make edges easier see.  busy edges split ome. Let’s look just largest path RNA-Seq proteomics assays.  plot, can see differential features follow path liver protein acetlysites. path represents features -regulated males (“M ”) first four weeks training males females eight weeks training (“”). can also look multi-tissue graphs. example, let’s look three largest paths training-regulated transcripts three muscle tissues. Now instead splitting edges ome, can split tissue.  plot, can see large number training-regulated transcripts -regulated sexes four training time points three muscle tissues. Perhaps interesting shared biology represented muscle features follow path. visualize representation features different tissues /omes given set clusters, can also use plot_features_per_cluster(). , ’ll consider 10 largest paths training-regulated features gastrocnemius (lower leg skeletal muscle).  plot, see majority training-regulated features gastrocnemius -regulated sexes training time points (1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1, top row) proteins, followed protein phosphosites. can plot sample-level trajectories features cluster plot_feature_trajectories().  also see cluster comprised mostly protein phosphosites, features -regulated females training time points also -regulated males 8 weeks training (1w_F-1_M0->2w_F-1_M0->4w_F-1_M0->8w_F-1_M-1).  next section, show pathway enrichment can used begin interpreting biology underlying graphical cluster (node, edge, path) interest.","code":"get_tree_plot_for_tissue(   tissues=c(\"LIVER\"),   min_size = 1 ) #> Using \"sugiyama\" as default layout get_tree_plot_for_tissue(   tissues=c(\"LIVER\"),   max_trajectories = 5 ) #> Using \"sugiyama\" as default layout get_tree_plot_for_tissue(   tissues=c(\"LIVER\"),   max_trajectories = 5,   parallel_edges_by_ome = TRUE,   curvature = 0.5,   edge_alpha_range = c(0.5,1) ) #> Using \"sugiyama\" as default layout get_tree_plot_for_tissue(   omes=c(\"PROT\",\"ACETYL\",\"UBIQ\",\"PHOSPHO\",\"TRNSCRPT\"),   tissues=c(\"LIVER\"),   max_trajectories = 1,   parallel_edges_by_ome = TRUE,   curvature = 0.8,   edge_alpha_range = c(0.5,1) ) #> Using \"sugiyama\" as default layout get_tree_plot_for_tissue(   tissues=c(\"SKM-GN\",\"HEART\",\"SKM-VL\"),   omes=\"TRNSCRPT\",   parallel_edges_by_tissue = TRUE,   max_trajectories = 3,   edge_alpha_range = c(0.5,1),   curvature = 0.6 ) #> Using \"sugiyama\" as default layout # Get top 10 largest paths, nodes, edges in gastrocnemius # Exclude additional 8-week nodes clusters = extract_tissue_sets(\"SKM-GN\", k=10, add_week8=FALSE) # Select paths only clusters = clusters[grepl(\"->\", names(clusters))] # Plot distribution of features plot_features_per_cluster(clusters) plot_feature_trajectories(clusters$`1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1`,                            title=\"Features consistently up-regulated in gastroc\") plot_feature_trajectories(clusters$`1w_F-1_M0->2w_F-1_M0->4w_F-1_M0->8w_F-1_M-1`,                            title=\"Cluster of mostly PHOSPHO in gastroc\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"pathway-enrichment-of-clusters","dir":"Articles","previous_headings":"","what":"Pathway enrichment of clusters","title":"Tutorial for MotrpacRatTraining6mo R package","text":"One important tool used interpret biology underlying graphical clusters pathway enrichment. section, describe functions provided package reproduce pathway enrichment analysis run . interested exploring existing pathway enrichment results, skip Visualization pathway enrichment results.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"approach","dir":"Articles","previous_headings":"Pathway enrichment of clusters","what":"Approach","title":"Tutorial for MotrpacRatTraining6mo R package","text":"performed pathway enrichment 2 largest nodes, 2 largest edges, 10 largest non-null paths, 8-week nodes graphical representation training-regulated features tissue. set graphical clusters can extracted using extract_main_clusters(). tissue-specific cluster, performed pathway enrichment separately features corresponding ome. gene-centric omes, .e., metabolomics, mapped features genes queried KEGG REACTOME pathways using gprofiler2. metabolomics, mapped metabolites KEGG IDs used FELLA query KEGG pathways. feature--gene metabolite--KEGG ID mappings provided FEATURE_TO_GENE. enrichment test, specified background/universe set genes metabolite IDs tested differential analysis tissue. backgrounds provided GENE_UNIVERSES. performing pathway enrichment analyses, important specify appropriate background avoid artificially small p-values. Pathway enrichment results adjusted tests using IHW tissue covariate. Pathway enrichment results graphical clusters interest presented preprint provided GRAPH_PW_ENRICH.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"enrichment-with-standard-pws","dir":"Articles","previous_headings":"Pathway enrichment of clusters","what":"Enrichment with standard PWs","title":"Tutorial for MotrpacRatTraining6mo R package","text":"cluster_pathway_enrichment() wrapper gprofiler2::gost() FELLA::enrich(), metabolomics pathway enrichment performed KEGG pathways, gene-centric pathway enrichment can performed set pathway databases accepted g:Profiler. show example performing pathway enrichment two clusters training-regulated features, one two tissues. case, clusters determined using graphical clustering approach described , practice clusters identified using approach (e.g., k-means, fuzzy C-means). First, extract clusters interest. paths named list, names names cluster values vectors corresponding training-regulated features. Now perform pathway enrichment. First, run function without specifying kegg_db_destination, force ignore metabolites. default, KEGG REACTOME pathways queried. get warnings messages. First, get warning pathway enrichment performed metabolites kegg_db_destination=NULL (default parameter). Second, told analysis run single core. performing pathway enrichment clusters, runtime dramatically reduced parallelize analysis one core. can specifying num_cores argument. cluster_pathway_enrichment() internally uses doParallel::registerDoParallel(num_cores) register one core. Third, told one gastrocnemius ATAC-seq features specified background (GENE_UNIVERSES$ensembl_gene default) therefore excluded analysis. decided define ATAC-seq (ATAC) RRBS (METHYL) universes according expressed genes tissue, .e., using RNA-seq (TRNSCRPT) data. Therefore, differential ATAC/METHYL features corresponding gene regulated training. one case. Finally, get message IHW::ihw(): “recommend supply (many) 1000 p-values meaningful data-driven hypothesis weighting results.” tests, one reasonably perform BH-adjustment across tests instead using IHW consider distributions p-values tissue. Let’s look many significantly enriched pathways get 5% FDR. Now let’s perform pathway enrichment clusters, time including metabolites analysis specifying kegg_db_destination. case, cluster_pathway_enrichment() calls run_fella() helper function, convenient FELLA wrapper perform KEGG pathway enrichment metabolites. yet installed KEGG database, e.g., make_kegg_db(), kegg_db_destination must point directory yet exist KEGG database needed run FELLA installed. necessary, make_kegg_db() called within cluster_pathway_enrichment() install KEGG database. already installed KEGG database, kegg_db_destination point parent directory. example, assume KEGG database already installed ~/kegg/20220919.","code":"# extract the top path from gastrocnemius and heart  paths = list() for (tissue in c(\"SKM-GN\",\"HEART\")){   # extract top node, edge, path   clusters = extract_tissue_sets(tissue, k=1, add_week8=FALSE)   # select the path only, which contains \"->\"   top_path = clusters[grepl(\"->\", names(clusters))]   # add to list    paths[[paste0(tissue, \":\", names(top_path)[1])]] = top_path[[1]] } names(paths) #> [1] \"SKM-GN:1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\" #> [2] \"HEART:1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\" lapply(paths, head) #> $`SKM-GN:1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1` #> [1] \"ATAC;SKM-GN;chr15:101579022-101579761\" #> [2] \"ATAC;SKM-GN;chr1:221194280-221195125\"  #> [3] \"ATAC;SKM-GN;chr1:221199295-221200124\"  #> [4] \"ATAC;SKM-GN;chr20:34579127-34579734\"   #> [5] \"ATAC;SKM-GN;chr5:114013062-114014681\"  #> [6] \"ATAC;SKM-GN;chrX:119151643-119154560\"  #>  #> $`HEART:1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1` #> [1] \"ACETYL;HEART;NP_001004220.1_K116k\" \"ACETYL;HEART;NP_001006973.1_K401k\" #> [3] \"ACETYL;HEART;NP_001007621.1_K354k\" \"ACETYL;HEART;NP_001014183.1_K193k\" #> [5] \"ACETYL;HEART;NP_001014183.1_K199k\" \"ACETYL;HEART;NP_001030123.1_K581k\" # load required libraries for this function library(gprofiler2) library(foreach) # to learn more about the arguments and default parameters, look at `?cluster_pathway_enrichment` res1 = cluster_pathway_enrichment(paths) #> Warning in cluster_pathway_enrichment(paths): It looks like you have metabolites in your clustering result, but you did not provide a path for the KEGG database ('kegg_db_destination'). Pathway enrichment will be skipped for metabolites. #> Number of cores not defined with 'num_cores' argument. Setting the number of cores to 1. Explicity define 'num_cores' to take advantage of parallelization. If you aren't sure how many cores are available to you, try 'length(parallel::mcaffinity()).' #> Running enrichments for 11 gene sets on 1 core(s). This may take a while... #>  #> 1 out of 6 identifiers in SKM-GN:1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1 ATAC SKM-GN are not in the current universe. Removing these features. #> [1] \"ENSRNOG00000052048\" #> Done. #> We recommend that you supply (many) more than 1000 p-values for meaningful data-driven hypothesis weighting results. nrow(res1[res1$adj_p_value < 0.05,]) #> [1] 173 # split by tissue and ome significant = res1[res1$adj_p_value < 0.05,] table(significant$tissue, significant$ome) #>          #>          ACETYL PHOSPHO PROT TRNSCRPT #>   HEART      18      28   37       21 #>   SKM-GN      0       7   37       25 # load required libraries for pathway enrichment with metabolites library(FELLA) library(KEGGREST) # to learn more about the arguments and default parameters, look at `?cluster_pathway_enrichment` res2 = cluster_pathway_enrichment(paths,                                   kegg_db_destination = \"~/kegg/20220919\",                                   fella_method = \"hypergeom\") # \"hypergeom\" or \"diffusion\""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"enrichment-with-custom-pws","dir":"Articles","previous_headings":"Pathway enrichment of clusters","what":"Enrichment with custom PWs","title":"Tutorial for MotrpacRatTraining6mo R package","text":"want query pathways available gProfiler, custom_cluster_pathway_enrichment() can used perform pathway enrichment custom pathway annotations. show example single cluster features single annotated pathway. Note features input must still format “[ASSAY_ABBREV];[TISSUE_ABBREV];[feature_ID]”, e.g. “PHOSPHO;SKM-GN;NP_001006973.1_S34s”, “METAB;SKM-GN;1-methylnicotinamide”, feature IDs included supplied feature_to_gene map (FEATURE_TO_GENE default). universe/background must also specified using kind gene identifier pathway annotation (rat gene symbols case). Note get one result per tissue ome combination.","code":"# Use graphical clusters as an example cluster_res = extract_main_clusters() # Pick a single graphical cluster # Gastrocnemius features up-regulated in both males and females at 8 weeks of training cluster_res = cluster_res[cluster_res$cluster == \"SKM-GN:8w_F1_M1\",]  # Make a toy pathway member list with human gene symbols pathways = list(\"TCA cycle\" = c('ACO2','CS','FH','MDH1','OGDH','PDHA1','PDHA2','SDHC','SUCLG1'))  # Convert human gene symbols to rat gene symbols data(RAT_TO_HUMAN_GENE) for (pw in names(pathways)){   newmembers = c()   for (m in pathways[[pw]]){     # get rat symbol     rat = RAT_TO_HUMAN_GENE$RAT_SYMBOL[RAT_TO_HUMAN_GENE$HUMAN_ORTHOLOG_SYMBOL == m][1]     if(!is.na(rat)){       newmembers = c(newmembers, rat)     }   }   pathways[[pw]] = newmembers }  # Perform pathway enrichment # Note that the type of gene identifier used to specify the background # must match the type of gene identifier used in the custom pathway annotation  res = custom_cluster_pathway_enrichment(cluster_res,                                         pathway_member_list = pathways,                                         gene_identifier_type = \"gene_symbol\",                                          universe = GENE_UNIVERSES$gene_symbol,                                         min_pw_set_size = 5) #> Number of cores not defined with 'num_cores' argument. Setting the number of cores to 1. Explicity define 'num_cores' to take advantage of parallelization. If you aren't sure how many cores are available to you, try 'length(parallel::mcaffinity()).' #> Running enrichments for 6 gene sets on 1 core(s). This may take a while... #>  #> 6 out of 38 identifiers in SKM-GN:8w_F1_M1 ATAC SKM-GN are not in the current universe. Removing these features. #> [1] \"Edn2\"           \"AABR07030921.1\" \"U6\"             \"AABR07004761.1\" #> [5] \"AABR07062157.1\" \"Y_RNA\" #>  #> 2 out of 5 identifiers in SKM-GN:8w_F1_M1 METHYL SKM-GN are not in the current universe. Removing these features. #> [1] \"Mir196a\"        \"AABR07002473.1\" #> Done. res[,c(\"term_name\",\"intersection\",\"tissue\",\"ome\",\"computed_p_value\",\"adj_p_value\")] #>   term_name                 intersection tissue     ome computed_p_value #> 1 TCA cycle                      Cs,Mdh1 SKM-GN PHOSPHO     1.306742e-02 #> 2 TCA cycle Cs,Fh,Mdh1,Ogdh,Pdha1,Suclg1 SKM-GN    PROT     2.885974e-06 #>    adj_p_value #> 1 1.306742e-02 #> 2 5.771947e-06"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"simple-enrichment-with-single-gene-set","dir":"Articles","previous_headings":"Pathway enrichment of clusters","what":"Simple enrichment with single gene set","title":"Tutorial for MotrpacRatTraining6mo R package","text":"also provide gene_pathway_enrichment() function pathway enrichment single list genes. simple wrapper gprofiler2::gost().","code":"# Perform pathway enrichment for differential transcripts in the liver  # get all differential TRNSCRPT feature IDs in the liver diff = MotrpacRatTraining6moData::TRAINING_REGULATED_FEATURES input_feat = diff$feature_ID[diff$tissue == \"LIVER\" & diff$assay == \"TRNSCRPT\"] # get corresponding gene symbols map = MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT input = unique(map$gene_symbol[map$feature_ID %in% input_feat]) # define background - all expressed genes in the liver, defined as gene symbols background = MotrpacRatTraining6moData::GENE_UNIVERSES$gene_symbol$TRNSCRPT$LIVER # perform pathway enrichment  res = gene_pathway_enrichment(input, background) head(res) #>     query significant term_size query_size intersection_size  precision #> 1 query_1        TRUE        18        266                 8 0.03007519 #> 2 query_1        TRUE        17        266                 8 0.03007519 #> 3 query_1        TRUE       126        266                15 0.05639098 #> 4 query_1        TRUE        18        266                 6 0.02255639 #> 5 query_1        TRUE        70        266                10 0.03759398 #> 6 query_1        TRUE        44        266                 8 0.03007519 #>      recall            term_id source #> 1 0.4444444         KEGG:00100   KEGG #> 2 0.4705882           WP:WP632     WP #> 3 0.1190476  REAC:R-RNO-211859   REAC #> 4 0.3333333  REAC:R-RNO-191273   REAC #> 5 0.1428571 REAC:R-RNO-8957322   REAC #> 6 0.1818182          WP:WP2562     WP #>                                    term_name effective_domain_size source_order #> 1                       Steroid biosynthesis                 13653           13 #> 2                     Cholesterol metabolism                 13653           60 #> 3                      Biological oxidations                 13653          169 #> 4                   Cholesterol biosynthesis                 13653          272 #> 5                     Metabolism of steroids                 13653          816 #> 6 Relationship between glutathione and NADPH                 13653          128 #>              parents #> 1         KEGG:00000 #> 2          WP:000000 #> 3 REAC:R-RNO-1430728 #> 4 REAC:R-RNO-8957322 #> 5  REAC:R-RNO-556833 #> 6          WP:000000 #>                                                               evidence_codesintersection #> 1                                                         Hsd17b7,Cyp51,Sqle,Dhcr7,Tm7sf2,Fdft1,Msmo1,Lss #> 2                                                               Idi1,Apoc2,Dhcr7,Fdft1,Msmo1,Fdps,Mvk,Lss #> 3 Tpst1,Ugt2a3,Nnmt,Cyp51,Ugp2,Cyb5r3,Cyp7b1,Glyat,Gclm,Slc26a2,Hsp90ab1,Cyp2a1,Cyp2a2,Cyp4f39,AC123346.1 #> 4                                                                     Cyp51,Sqle,Dhcr7,Tm7sf2,Fdft1,Msmo1 #> 5                                      Cyp51,Serpina6,Sqle,Cyp7b1,Slc27a5,Stard4,Dhcr7,Tm7sf2,Fdft1,Msmo1 #> 6                                                                Ltc4s,Ugp2,Txn1,Gclm,Ptgr1,Fas,Ftl1,G6pd #>   gost_adj_p_value computed_p_value BH_adj_p_value #> 1     8.913588e-08     6.909758e-10   2.152390e-07 #> 2     2.576828e-08     3.904285e-10   2.152390e-07 #> 3     4.970778e-06     2.224062e-08   4.618635e-06 #> 4     1.054690e-04     7.883838e-07   1.175967e-04 #> 5     1.054690e-04     9.437938e-07   1.175967e-04 #> 6     3.968764e-05     1.803984e-06   1.873137e-04"},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"approach-1","dir":"Articles","previous_headings":"Visualization of PW enrichments","what":"Approach","title":"Tutorial for MotrpacRatTraining6mo R package","text":"performing pathway enrichment graphical clusters interest, observed many clusters many dozens significantly enriched pathways. order make results digestible, leveraged visNetwork construct interactive networks pathway enrichments. networks conceptually similar made EnrichmentMap Cytoscape module, ’s easier generate explore underlying data. Briefly, node network pathway, edges connect highly similar pathways, .e., whose enrichments driven highly similar sets genes across omes (see infographic). groups together highly similar pathway enrichments, makes easier digest large numbers results.  implementation, groups similar pathway enrichments color-coded, group labels inferred term names parents pathways group. Larger nodes indicate pathway significantly enriched multiple datasets; thicker edges indicate higher similarity pathways. Best , networks interactive! Use cursor zoom drag, hover nodes edges see information underlying data, namely genes datasets driving pathway enrichment.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"minimal-example-single-tissue","dir":"Articles","previous_headings":"Visualization of PW enrichments","what":"Minimal example: single tissue","title":"Tutorial for MotrpacRatTraining6mo R package","text":"show interactive network pathway enrichments corresponding training-regulated features -regulated gastrocnemius sexes 8-week time point, .e. SKM-GN:8w_F1_M1. Note run function pathway enrichment results, long columns pw_enrich_res include “adj_p_value”, “ome”, “tissue”, “intersection”, “computed_p_value”, “term_name”, “term_id” columns feature_to_gene include “gene_symbol”, “ensembl_gene”. feature$ensembl_gene can dummy column intersection_id_type = \"gene_symbol\".","code":"enrichment_network_vis(tissues=\"SKM-GN\",                        cluster=\"8w_F1_M1\") #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 2.977s # # Equivalently: # data(GRAPH_PW_ENRICH) # pw = GRAPH_PW_ENRICH[GRAPH_PW_ENRICH$cluster == \"SKM-GN:8w_F1_M1\",] # enrichment_network_vis(pw)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"example-with-multiple-tissues","dir":"Articles","previous_headings":"Visualization of PW enrichments","what":"Example with multiple tissues","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Now let’s examine pathways enriched graphical cluster multiple tissues. example, ’ll consider features -regulated males females 8-week training time point (8w_F1_M1) three muscle tissues (heart, gastrocnemius, vastus lateralis). specifically interested pathways significantly enriched multiple tissues, can set multitissue_pathways_only TRUE. removes pathways enriched one tissue (least one ome).","code":"enrichment_network_vis(tissues=c(\"HEART\",\"SKM-GN\",\"SKM-VL\"),                        cluster=\"8w_F1_M1\",                         multitissue_pathways_only = TRUE) #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 1.519s # # Equivalently: # pw = GRAPH_PW_ENRICH[grepl(\":8w_F1_M1\", GRAPH_PW_ENRICH$cluster) &  #                        GRAPH_PW_ENRICH$tissue %in% c(\"HEART\",\"SKM-GN\",\"SKM-VL\"),] # enrichment_network_vis(pw, multitissue_pathways_only = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"examples-with-other-parameters","dir":"Articles","previous_headings":"Visualization of PW enrichments","what":"Examples with other parameters","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Let’s go back simple example input pathway enrichment results.","code":"pw = GRAPH_PW_ENRICH[GRAPH_PW_ENRICH$cluster == \"SKM-GN:8w_F1_M1\",]"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"move-or-remove-group-labels","dir":"Articles","previous_headings":"Visualization of PW enrichments > Examples with other parameters","what":"Move or remove group labels","title":"Tutorial for MotrpacRatTraining6mo R package","text":"default, color-coded node group labels shown left side plot. make easier match labels groups pathways, can set add_group_label_nodes argument TRUE. ’re zoomed , hover label display larger font. can also remove group labels entirely label_nodes = FALSE.","code":"enrichment_network_vis(pw, add_group_label_nodes = TRUE) #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 0.54s # # Equivalently: # enrichment_network_vis(tissues=\"SKM-GN\", #                        cluster=\"8w_F1_M1\", #                        add_group_label_nodes = TRUE) enrichment_network_vis(pw, label_nodes = FALSE) #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 0.472s # # Equivalently: # enrichment_network_vis(tissues=\"SKM-GN\", #                        cluster=\"8w_F1_M1\", #                        label_nodes = FALSE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"save-similarity-scores","dir":"Articles","previous_headings":"Visualization of PW enrichments > Examples with other parameters","what":"Save similarity scores","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Notice time run function, takes 10 seconds execute. want play parameters enrichment_network_vis() pathway enrichment results, can save pathway similarity scores file avoid re-computing time, computationally expensive step function. similarity_scores_file must specify RDS file (suffix .rds .RDS). first time function run non-null similarity_scores_file argument, scores computed saved given RDS file. future calls function similarity_scores_file set existing file load scores file instead re-computing . Notice dramatic difference elapsed time two function calls.","code":"system.time(   enrichment_network_vis(pw, similarity_scores_file = \"/tmp/SKM-GN_8w_F1_M1_scores.RDS\", verbose=FALSE) ) #>    user  system elapsed  #>   0.454   0.000   0.454 system.time(   enrichment_network_vis(pw, similarity_scores_file = \"/tmp/SKM-GN_8w_F1_M1_scores.RDS\", verbose=FALSE) ) #>    user  system elapsed  #>   0.287   0.000   0.287"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"remove-metab-only-enrichments","dir":"Articles","previous_headings":"Visualization of PW enrichments > Examples with other parameters","what":"Remove METAB-only enrichments","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Since metabolites readily mapped genes, easily incorporated network pathway similarity calculated using overlap gene symbols. Therefore, pathway enrichments driven exclusively metabolites treated differently. two pathways driven exclusively metabolites, artificial edge drawn least one non-stopword overlaps pathway names parent pathway names. Otherwise, pathways represented singleton nodes. exclude pathways enriched differential metabolites set include_metab_singletons FALSE.","code":"enrichment_network_vis(pw, include_metab_singletons=FALSE) #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 0.425s"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"export-a-network-to-cytoscape","dir":"Articles","previous_headings":"Visualization of PW enrichments > Examples with other parameters","what":"Export a network to Cytoscape","title":"Tutorial for MotrpacRatTraining6mo R package","text":"output enrichment_network_vis() nice exploration, comes short publication-ready figures. can export network Cytoscape manually polish . code work, need install RCy3 R package Cytoscape running locally. ’ve imported network Cytoscape, can import style sheet found follow instructions quickly make beautiful network nodes colored either tissue ome. example:","code":"library(RCy3) vn = enrichment_network_vis(pw,                             title = \"SKM-GN:8w_F1_M1\",                             return_graph_for_cytoscape = TRUE)  cytoscapePing() createNetworkFromIgraph(vn, new.title='gastroc-8w-both-up')"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"printing-networks-within-a-loop","dir":"Articles","previous_headings":"Visualization of PW enrichments","what":"Printing networks within a loop","title":"Tutorial for MotrpacRatTraining6mo R package","text":"Rendering visNetwork objects within loop known challenges. See solutions .","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting help","title":"Tutorial for MotrpacRatTraining6mo R package","text":"questions, bug reporting, feature requests package, please submit new issue include many details possible. concern related data provided MotrpacRatTraining6moData package, please submit issue instead.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Tutorial for MotrpacRatTraining6mo R package","text":"MoTrPAC supported National Institutes Health (NIH) Common Fund cooperative agreements managed National Institute Diabetes Digestive Kidney Diseases (NIDDK), National Institute Arthritis Musculoskeletal Diseases (NIAMS), National Institute Aging (NIA).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/MotrpacRatTraining6mo.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Tutorial for MotrpacRatTraining6mo R package","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] foreach_1.5.2                   gprofiler2_0.2.2                #> [3] repfdr_1.2.3                    MotrpacRatTraining6mo_1.6.4     #> [5] MotrpacRatTraining6moData_1.9.1 #>  #> loaded via a namespace (and not attached): #>   [1] mathjaxr_1.6-0          RColorBrewer_1.1-3      jsonlite_1.8.7          #>   [4] magrittr_2.0.3          TH.data_1.1-2           farver_2.1.1            #>   [7] rmarkdown_2.24          fs_1.6.3                zlibbioc_1.46.0         #>  [10] ragg_1.2.5              vctrs_0.6.3             multtest_2.56.0         #>  [13] memoise_2.0.1           RCurl_1.98-1.12         htmltools_0.5.6         #>  [16] plotrix_3.8-2           FELLA_1.20.0            sass_0.4.7              #>  [19] bslib_0.5.1             htmlwidgets_1.6.2       desc_1.4.2              #>  [22] plyr_1.8.8              sandwich_3.0-2          plotly_4.10.2           #>  [25] zoo_1.8-12              cachem_1.0.8            igraph_1.5.1            #>  [28] lifecycle_1.0.3         iterators_1.0.14        pkgconfig_2.0.3         #>  [31] Matrix_1.6-1            R6_2.5.1                fastmap_1.1.1           #>  [34] GenomeInfoDbData_1.2.10 rbibutils_2.2.15        digest_0.6.33           #>  [37] numDeriv_2016.8-1.1     fdrtool_1.2.17          colorspace_2.1-0        #>  [40] S4Vectors_0.38.1        rprojroot_2.0.3         textshaping_0.3.6       #>  [43] lpsymphony_1.28.1       labeling_0.4.3          fansi_1.0.4             #>  [46] httr_1.4.7              TFisher_0.2.0           polyclip_1.10-4         #>  [49] compiler_4.3.1          withr_2.5.0             mutoss_0.1-13           #>  [52] viridis_0.6.4           highr_0.10              ggforce_0.4.1           #>  [55] MASS_7.3-60             tools_4.3.1             metap_1.8               #>  [58] qqconf_1.3.2            glue_1.6.2              grid_4.3.1              #>  [61] generics_0.1.3          gtable_0.3.4            tidyr_1.3.0             #>  [64] sn_2.1.1                data.table_1.14.8       tidygraph_1.2.3         #>  [67] utf8_1.2.3              XVector_0.40.0          BiocGenerics_0.46.0     #>  [70] ggrepel_0.9.3           pillar_1.9.0            stringr_1.5.0           #>  [73] limma_3.56.2            splines_4.3.1           dplyr_1.1.3             #>  [76] tweenr_2.0.2            r2r_0.1.1               lattice_0.21-8          #>  [79] survival_3.5-5          tidyselect_1.2.0        locfit_1.5-9.8          #>  [82] Biostrings_2.68.1       knitr_1.43              gridExtra_2.3           #>  [85] IRanges_2.34.1          edgeR_3.42.4            IHW_1.28.0              #>  [88] stats4_4.3.1            xfun_0.40               graphlayouts_1.0.0      #>  [91] Biobase_2.60.0          visNetwork_2.1.2        stringi_1.7.12          #>  [94] lazyeval_0.2.2          yaml_2.3.7              evaluate_0.21           #>  [97] codetools_0.2-19        ggraph_2.1.0            tibble_3.2.1            #> [100] cli_3.6.1               systemfonts_1.0.4       Rdpack_2.5              #> [103] munsell_0.5.0           jquerylib_0.1.4         Rcpp_1.0.11             #> [106] GenomeInfoDb_1.36.3     png_0.1-8               ellipsis_0.3.2          #> [109] pkgdown_2.0.7           ggplot2_3.4.3           bitops_1.0-7            #> [112] viridisLite_0.4.2       mvtnorm_1.2-3           slam_0.1-50             #> [115] scales_1.2.1            purrr_1.0.2             crayon_1.5.2            #> [118] rlang_1.1.1             KEGGREST_1.40.0         multcomp_1.4-25         #> [121] mnormt_2.1.1"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Key metabolites","text":"report motivated reviewer comment regarding preprint: Reviewer 1: Given extensive collection metabolomics data (targeted untargeted) many tissues temporal timepoints (Figure 1C) interesting explore changes several key cellular metabolites addition KEGG pathways. example, interesting see sex- time-specific changes plasma, muscles, heart metabolites glucose, pyruvate, lactate, acetate, perhaps key intermediates glycolysis TCA cycle. data available, also interesting characterize changes energy redox ratios, .e. ATP/ADP, NADH/NAD+ (individual concentrations, ATP). Given central roles metabolites cellular physiology/health multiple changes corresponding metabolic pathways (Figure 7), good present discuss observed metabolic changes.","code":"library(MotrpacRatTraining6mo) library(data.table) library(ggplot2)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"metabolites-manually-selected-for-biological-relevance","dir":"Articles","previous_headings":"","what":"Metabolites manually selected for biological relevance","title":"Key metabolites","text":"First, let’s look metabolites selected physiological relevance plasma, liver, skeletal muscle. Heart excluded focus companion paper. Just section, plot metabolites whether training-regulated. metabolite, trajectory normalized sample-level data shown left, log fold-changes timewise differential analysis shown right. Multiple traces shown multiple platforms measured metabolite.","code":"meta = data.table(METAB_FEATURE_ID_MAP) features = c() for(m in c(\"AMP\",\"ADP\",\"ATP\",\"NAD+\",\"NADH\",\"Glucose\",\"Pyruvic acid\",\"Lactic acid\",\"Oxaloacetic acid\",\"Citric acid\",\"Succinic acid\",\"acetate\")){   # message(m)   sub = meta[grepl(sprintf(\"^%s$\",gsub(\"\\\\+\",\"\\\\\\\\+\",m)), metabolite_name, ignore.case = TRUE) |                       grepl(sprintf(\"^%s$\",gsub(\"\\\\+\",\"\\\\\\\\+\",m)), metabolite_refmet, ignore.case = TRUE)]   # sub = meta[grepl(m, metabolite_name) | grepl(m, metabolite_refmet)]   # print(sub[,metabolite_refmet])   if(nrow(sub) == 0){     warning(sprintf(\"%s not found\", m))     next   }   features = c(features, m) } #> Warning: acetate not found for(f in features){      for(TISSUE in c(\"LIVER\",\"SKM-GN\",\"SKM-VL\",\"PLASMA\")){      # sample-level data     p = plot_feature_normalized_data(feature_ID=f,                                       assay=\"METAB\",                                      tissue=TISSUE,                                      add_adj_p=TRUE,                                       facet_by_sex=TRUE)     if(!is.null(p)){       print(p)     }else{       next     }          # log fold-changes     p = plot_feature_logfc(feature_ID=f,                             assay=\"METAB\",                            tissue=TISSUE,                            facet_by_sex=TRUE)     if(!is.null(p)){       print(p)     }   } } #> Multiple features correspond to 'METAB;LIVER;AMP'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;SKM-GN;AMP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;SKM-GN;AMP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;AMP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'AMP' not found in the METAB SKM-VL sample-level data. #> Multiple features correspond to 'METAB;PLASMA;AMP'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;LIVER;ADP' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;LIVER;ADP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;ADP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;SKM-GN;ADP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;ADP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'ADP' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;ADP' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'ADP' not found in the METAB PLASMA sample-level data. #> 'METAB;LIVER;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;LIVER;ATP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;SKM-GN;ATP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'ATP' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'ATP' not found in the METAB PLASMA sample-level data. #> 'METAB;LIVER;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;LIVER;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> Multiple features correspond to 'METAB;SKM-GN;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;SKM-VL;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'NAD+' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'NAD+' not found in the METAB PLASMA sample-level data. #> 'METAB;LIVER;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;LIVER;NADH'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;SKM-GN;NADH'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'NADH' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'NADH' not found in the METAB PLASMA sample-level data. #> 'METAB;LIVER;glucose' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;LIVER;glucose'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;glucose' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Multiple features correspond to 'METAB;SKM-GN;glucose'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;glucose' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'glucose' not found in the METAB SKM-VL sample-level data. #> Multiple features correspond to 'METAB;PLASMA;glucose'. Plotting them together. #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> METAB_PLASMA_DA_METAREG #> 'METAB;LIVER;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'pyruvate' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> METAB_PLASMA_DA_METAREG #> Multiple features correspond to 'METAB;LIVER;Lactate'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Lactate' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> METAB_PLASMA_DA_METAREG #> 'METAB;LIVER;Oxaloacetate' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Oxaloacetate' not found in the METAB LIVER sample-level data. #> 'METAB;SKM-GN;Oxaloacetate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Oxaloacetate' not found in the METAB SKM-GN sample-level data. #> 'METAB;SKM-VL;Oxaloacetate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Oxaloacetate' not found in the METAB SKM-VL sample-level data. #> Adding differential analysis p-value... #> 'METAB;LIVER;Citrate' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> Multiple features correspond to 'METAB;SKM-GN;Citrate'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;Citrate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Citrate' not found in the METAB SKM-VL sample-level data. #> Multiple features correspond to 'METAB;PLASMA;Citrate'. Plotting them together. #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> METAB_PLASMA_DA_METAREG #> 'METAB;LIVER;Succinate' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;Succinate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;Succinate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in plot_feature_normalized_data(feature_ID = f, assay = \"METAB\", : #> 'Succinate' not found in the METAB SKM-VL sample-level data. #> Multiple features correspond to 'METAB;PLASMA;Succinate'. Plotting them together. #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> METAB_PLASMA_DA_METAREG"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"meaningful-ratios","dir":"Articles","previous_headings":"Metabolites manually selected for biological relevance","what":"Meaningful ratios","title":"Key metabolites","text":"Let’s also plot meaningful ratios. , calculate ratio normalized sample-level data two metabolites matched tissue samples. y-axis presents average ratio across samples within given sex training time point, error bars standard deviation.","code":"my_plot_feature_normalized_data = function(assay = NULL,                                             tissue = NULL,                                             feature_ID = NULL,                                             feature = NULL,                                             title = NULL,                                             add_gene_symbol = FALSE,                                             facet_by_sex = FALSE,                                             scale_x_by_time = TRUE,                                             return_data = FALSE,                                             exclude_outliers = TRUE,                                             add_adj_p = FALSE){     curr_feature = feature      if(is.null(curr_feature) & any(is.null(c(assay, tissue, feature_ID)))){       stop(\"If 'feature' is not specified, 'assay', 'tissue', and 'feature_ID' must all be specified.\")     }     # for metabolites, accommodate RefMet IDs     if(is.null(curr_feature)){       original_feature_ID = feature_ID       if(assay == \"METAB\"){         # check if feature_ID is valid          m = data.table(MotrpacRatTraining6moData::METAB_FEATURE_ID_MAP)         if(!feature_ID %in% m[,feature_ID_sample_data]){           # is it a RefMet ID?           if(feature_ID %in% m[,metabolite_refmet]){             # get feature_ID used in data             feature_ID = unique(m[metabolite_refmet == feature_ID, feature_ID_sample_data])[1]           }else{             stop(sprintf(\"Feature ID '%s' not found in METAB data. See METAB_FEATURE_ID_MAP for measured metabolites.\", feature_ID))           }         }       }       curr_feature = sprintf(\"%s;%s;%s\", assay, tissue, feature_ID)     }        if(is.null(tissue)){       splits = unname(unlist(strsplit(curr_feature, \";\")))       assay = splits[1]       tissue = splits[2]       feature_ID = splits[3]       original_feature_ID = feature_ID     }     FEATURE_ID = feature_ID     ASSAY = assay     TISSUE = tissue     FEATURE = curr_feature     redundant_feature = FEATURE     differential = TRUE     training_reg = data.table::as.data.table(MotrpacRatTraining6moData::TRAINING_REGULATED_FEATURES)     keep_looking = TRUE     while (keep_looking) {         if (FEATURE %in% training_reg[, feature])              break         differential = FALSE         if (!ASSAY %in% c(\"METAB\", \"IMMUNO\"))              break         if (FEATURE %in% MotrpacRatTraining6moData::REPEATED_FEATURES$feature) {             FEATURE = MotrpacRatTraining6moData::REPEATED_FEATURES$new_feature[MotrpacRatTraining6moData::REPEATED_FEATURES$feature ==                  FEATURE]             differential = TRUE             FEATURE_ID = MotrpacRatTraining6moData::REPEATED_FEATURES$feature_ID[MotrpacRatTraining6moData::REPEATED_FEATURES$new_feature ==                  FEATURE[1]]             break         }         if (!ASSAY == \"METAB\")              break         new_feature_id = unique(MotrpacRatTraining6moData::METAB_FEATURE_ID_MAP$feature_ID_metareg[MotrpacRatTraining6moData::METAB_FEATURE_ID_MAP$metabolite_name ==              FEATURE_ID])         new_feature_id = unique(new_feature_id[new_feature_id %in%              training_reg[assay == ASSAY & tissue == TISSUE, feature_ID]])         if (length(new_feature_id) == 0)              break         FEATURE = unique(training_reg[feature_ID == new_feature_id &              tissue == TISSUE & assay == ASSAY, feature])         if (length(FEATURE) == 0)              break         differential = TRUE         keep_looking = FALSE     }     if (differential) {         if (exclude_outliers) {             all_sample_level_data = data.table::as.data.table(MotrpacRatTraining6moData::TRAINING_REGULATED_NORM_DATA_NO_OUTLIERS)         }         else {             all_sample_level_data = data.table::as.data.table(MotrpacRatTraining6moData::TRAINING_REGULATED_NORM_DATA)         }         sample_level_data = all_sample_level_data[feature %in%              FEATURE]     } else {         message(sprintf(\"'%s' is not a training-regulated feature. Looking in all sample-level data.\",              FEATURE))         all_sample_level_data = data.table::as.data.table(load_sample_data(TISSUE,              ASSAY, exclude_outliers = exclude_outliers))         if (nrow(all_sample_level_data) == 0) {             warning(sprintf(\"Sample-level data for %s %s not found.\",                  ASSAY, TISSUE))             return()         }         if (!FEATURE_ID %in% all_sample_level_data[, feature_ID]) {             warning(sprintf(\"'%s' not found in the %s %s sample-level data.\",                  FEATURE_ID, ASSAY, TISSUE))             return()         }         sample_level_data = all_sample_level_data[feature_ID ==              FEATURE_ID]         sample_level_data[is.na(feature), `:=`(feature, FEATURE)]     }     multiple_measurements = FALSE     if (nrow(sample_level_data) > 1) {         warning(sprintf(\"Multiple features correspond to '%s'. Plotting them together.\",              redundant_feature))         sample_level_data[, `:=`(feature, dataset)]         multiple_measurements = TRUE     }     if (add_gene_symbol) {         if (ASSAY %in% c(\"METHYL\", \"ATAC\") & !differential) {             feature_to_gene = data.table::data.table(MotrpacRatTraining6moData::FEATURE_TO_GENE)         }         else {             feature_to_gene = data.table::data.table(MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT)         }         gene_symbol = feature_to_gene[feature_ID == FEATURE_ID,              gene_symbol][1]     }     if (is.null(title)) {         if (add_gene_symbol) {             title = sprintf(\"%s (%s)\", redundant_feature, gene_symbol)         }         else {             title = redundant_feature         }     } else {         if (add_gene_symbol) {             title = sprintf(\"%s (%s)\", title, gene_symbol)         }     }     value_cols = colnames(sample_level_data)[grepl(\"^[0-9]\",          colnames(sample_level_data))]     melted_subset = data.table::melt(sample_level_data, id.vars = c(\"feature\"),          measure.vars = value_cols, variable.name = \"sample\")     melted_subset = melted_subset[!is.na(value)]     melted_subset[, `:=`(sample, as.character(sample))]     meta = unique(data.table::as.data.table(MotrpacRatTraining6moData::PHENO[,          c(\"group\", \"sex\", \"pid\", \"viallabel\")]))     meta[, `:=`(pid, as.character(pid))]     if (all(melted_subset[, sample] %in% meta[, viallabel])) {         col = \"viallabel\"     } else if (all(melted_subset[, sample] %in% meta[, pid])) {         col = \"pid\"         meta[, `:=`(viallabel, NULL)]         meta = unique(meta)     } else {         stop(sprintf(\"Sample names in sample-level data do not correspond to vial labels or PIDs: %s...\",              paste(utils::head(melted_subset[, sample]), collapse = \", \")))     }     subset_meta = merge(melted_subset, meta, by.x = \"sample\",          by.y = col)     bygroup = subset_meta[, list(expr = mean(value, na.rm = T),          sd = sd(value, na.rm = T)), by = .(sex, group, feature)]          if (add_adj_p) {       adj_p_value = NULL       message(\"Adding differential analysis p-value...\")       da = plot_feature_logfc(assay = ASSAY, tissue = TISSUE,            feature_ID = feature_ID, add_adj_p = TRUE, return_data = TRUE)       if (!is.null(da)) {           adj_p_value = min(unique(da$selection_fdr), na.rm = TRUE)       }     }          if (return_data) {         subset_meta[,selection_fdr := adj_p_value]         bygroup[,selection_fdr := adj_p_value]         return(list(by_sample = as.data.frame(subset_meta),                     by_group = as.data.frame(bygroup)))     }     bygroup[, `:=`(plot_group, sprintf(\"%s_%s\", feature, sex))]     if (multiple_measurements) {         if (!facet_by_sex) {             g = ggplot2::ggplot(bygroup, ggplot2::aes(x = group,                  y = expr, group = plot_group, colour = sex)) +                  ggplot2::geom_line(position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::geom_point(size = 2, aes(shape = feature),                    position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::geom_errorbar(ggplot2::aes(ymin = expr -                    sd, ymax = expr + sd), width = 0.2, position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::theme_classic() + ggplot2::scale_colour_manual(values = c(female = MotrpacRatTraining6moData::SEX_COLORS[[\"F\"]],                  male = MotrpacRatTraining6moData::SEX_COLORS[[\"M\"]])) +                  ggplot2::labs(x = \"Time trained (weeks)\", y = \"Normalized value\",                    title = title) + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5,                  size = 11), legend.title = ggplot2::element_blank(),                  plot.subtitle = ggplot2::element_text(hjust = 0.5),                  legend.position = \"top\", panel.grid.major = ggplot2::element_blank(),                  panel.grid.minor = ggplot2::element_blank(),                  legend.margin = ggplot2::margin(t = -5, b = -5,                    unit = \"pt\"), legend.spacing.y = ggplot2::unit(0,                    \"pt\"))         } else {             g = ggplot2::ggplot(bygroup, ggplot2::aes(x = group,                  y = expr, group = plot_group)) + ggplot2::geom_line(colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]],                  position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::geom_point(colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]],                    aes(shape = feature), position = ggplot2::position_dodge(width = 0.3),                    size = 2) + ggplot2::geom_errorbar(aes(ymin = expr -                  sd, ymax = expr + sd), width = 0.2, colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]],                  position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::theme_classic() + ggplot2::labs(x = \"Time trained (weeks)\",                  y = \"Normalized value\", title = title) + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5,                  size = 11), legend.title = ggplot2::element_blank(),                  plot.subtitle = ggplot2::element_text(hjust = 0.5),                  legend.position = \"top\", panel.grid.major = ggplot2::element_blank(),                  panel.grid.minor = ggplot2::element_blank(),                  legend.margin = ggplot2::margin(t = -5, b = -5,                    unit = \"pt\")) + ggplot2::facet_wrap(~sex)         }     }     else {         if (!facet_by_sex) {             g = ggplot2::ggplot(bygroup, ggplot2::aes(x = group,                  y = expr, group = plot_group, colour = sex)) +                  ggplot2::geom_line(position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::geom_point(position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::geom_errorbar(ggplot2::aes(ymin = expr -                    sd, ymax = expr + sd), width = 0.2, position = ggplot2::position_dodge(width = 0.3)) +                  ggplot2::theme_classic() + ggplot2::scale_colour_manual(values = c(female = MotrpacRatTraining6moData::SEX_COLORS[[\"F\"]],                  male = MotrpacRatTraining6moData::SEX_COLORS[[\"M\"]])) +                  ggplot2::labs(x = \"Time trained (weeks)\", y = \"Normalized value\",                    title = title) + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5,                  size = 11), legend.title = ggplot2::element_blank(),                  plot.subtitle = ggplot2::element_text(hjust = 0.5),                  legend.position = \"top\", panel.grid.major = ggplot2::element_blank(),                  panel.grid.minor = ggplot2::element_blank(),                  legend.margin = ggplot2::margin(t = -5, b = -5,                    unit = \"pt\"), legend.spacing.y = ggplot2::unit(0,                    \"pt\"))         }         else {             g = ggplot2::ggplot(bygroup, ggplot2::aes(x = group,                  y = expr, group = plot_group)) + ggplot2::geom_line(colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]]) +                  ggplot2::geom_point(colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]]) +                  ggplot2::geom_errorbar(aes(ymin = expr - sd,                    ymax = expr + sd), width = 0.2, colour = MotrpacRatTraining6moData::TISSUE_COLORS[[TISSUE]]) +                  ggplot2::theme_classic() + ggplot2::labs(x = \"Time trained (weeks)\",                  y = \"Normalized value\", title = title) + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5,                  size = 11), legend.title = ggplot2::element_blank(),                  plot.subtitle = ggplot2::element_text(hjust = 0.5),                  legend.position = \"none\", panel.grid.major = ggplot2::element_blank(),                  panel.grid.minor = ggplot2::element_blank()) +                  ggplot2::facet_wrap(~sex)         }     }     if (scale_x_by_time) {         g = g + scale_x_discrete(limits = c(\"control\", \"1w\",              \"2w\", \"fill\", \"4w\", rep(\"fill\", 3), \"8w\"), labels = c(\"0\",              \"1\", \"2\", \"4\", \"8\"), breaks = c(\"control\", \"1w\",              \"2w\", \"4w\", \"8w\"))     }     else {         g = g + scale_x_discrete(limits = c(\"control\", \"1w\",              \"2w\", \"4w\", \"8w\"), labels = c(\"0\", \"1\", \"2\", \"4\",              \"8\"), breaks = c(\"control\", \"1w\", \"2w\", \"4w\", \"8w\"))     }          if (add_adj_p & !is.null(adj_p_value)) {         subtitle = sprintf(\"adj. p-value: %s\", signif(adj_p_value, digits = 2))         g = g + labs(subtitle = subtitle)     }          return(g) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"nadnadh","dir":"Articles","previous_headings":"Metabolites manually selected for biological relevance > Meaningful ratios","what":"NAD+/NADH","title":"Key metabolites","text":"","code":"# get all sample-level data features = c(\"NADH\",\"NAD+\") for(tissue in c(\"LIVER\",\"SKM-GN\",\"SKM-VL\",\"PLASMA\")){   subdat = list()   for(feat in features){     dat = my_plot_feature_normalized_data(feature_ID=feat,                                           tissue=tissue,                                          assay=\"METAB\",                                          add_adj_p = TRUE,                                           return_data = TRUE)$by_sample     if(is.null(dat)) next     dat$feature_ID = feat     dat$tissue = tissue     subdat[[feat]] = dat   }   # add ratio   if(length(subdat) < 2) next   merged = merge(subdat[[1]], subdat[[2]], by=c(\"sex\",\"group\",\"sample\",\"tissue\",\"feature\"),                   suffixes = paste0(\"_\", names(subdat)))   merged$NAD_NADH = merged$`value_NAD+`/merged$value_NADH   merged = data.table(merged)    by_group = merged[,list(NAD_NADH = mean(NAD_NADH),                           NAD_NADH_sd = sd(NAD_NADH)),                   by=.(sex, group, feature, tissue)]   by_group[,plotting_group := feature]      for(platform in unique(by_group[,feature])){     data_df = data.frame(by_group[feature == platform])     g = ggplot2::ggplot(data_df, ggplot2::aes(y=NAD_NADH, x=group, group=plotting_group, color=tissue)) +       ggplot2::geom_point(size=2, position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_line(position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_errorbar(ggplot2::aes(ymin=NAD_NADH-NAD_NADH_sd, ymax=NAD_NADH+NAD_NADH_sd),                              width=0.2,                               position=ggplot2::position_dodge(width=0.3)) +       ggplot2::theme_classic() +       ggplot2::geom_hline(yintercept = 0,linetype=\"dotted\") +       ggplot2::facet_wrap(~sex) +       ggplot2::labs(title=sprintf(\"%s NAD+/NADH\", tissue), x=\"Time trained (weeks)\", y=\"Ratio\") +       ggplot2::theme(plot.title = ggplot2::element_text(hjust=0.5),                      plot.subtitle = ggplot2::element_text(hjust=0.5),                      panel.grid.major = ggplot2::element_blank(),                      panel.grid.minor = ggplot2::element_blank()) +       ggplot2::scale_colour_manual(values=TISSUE_COLORS[names(TISSUE_COLORS) %in% by_group[,tissue]],                                    name=\"Tissue\", guide=\"none\") +       scale_x_discrete(limits=c('control','1w','2w','fill','4w',rep('fill',3), '8w'),                        labels=c('0','1','2','4','8'),                        breaks=c('control','1w','2w','4w','8w'))     if(length(unique(by_group[,feature])) > 1){       g = g + labs(subtitle=sprintf(\"Measured by %s\",platform))     }     print(g)   } } #> 'METAB;LIVER;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;LIVER;NADH'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> 'METAB;LIVER;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;LIVER;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;SKM-GN;NADH'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;SKM-GN;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;SKM-VL;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'NADH' not found in the METAB SKM-VL sample-level data. #> 'METAB;SKM-VL;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'NAD+' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;NADH' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'NADH' not found in the METAB PLASMA sample-level data. #> 'METAB;PLASMA;NAD+' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'NAD+' not found in the METAB PLASMA sample-level data."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"lactatepyruvate","dir":"Articles","previous_headings":"Metabolites manually selected for biological relevance > Meaningful ratios","what":"Lactate/pyruvate","title":"Key metabolites","text":"","code":"# get all sample-level data features = c(\"Lactic acid\",\"Pyruvic acid\") for(tissue in c(\"LIVER\",\"SKM-GN\",\"SKM-VL\",\"PLASMA\")){   subdat = list()   for(feat in features){     dat = my_plot_feature_normalized_data(feature_ID=feat,                                            tissue=tissue,                                           assay=\"METAB\",                                           add_adj_p = TRUE,                                            return_data = TRUE)$by_sample     if(is.null(dat)) next     dat$feature_ID = feat     dat$tissue = tissue     subdat[[feat]] = dat   }   # add ratio   if(length(subdat) < 2) next   merged = merge(subdat[[1]], subdat[[2]], by=c(\"sex\",\"group\",\"sample\",\"tissue\"),                   suffixes = paste0(\"_\", names(subdat)))   merged$lactate_pyruvate = merged$`value_Lactic acid`/merged$`value_Pyruvic acid`   merged = data.table(merged)    # lactate is measured on a single platform, but pyruvate is only measured on one   by_group = merged[,list(lactate_pyruvate = mean(lactate_pyruvate),                           lactate_pyruvate_sd = sd(lactate_pyruvate)),                   by=.(sex, group, `feature_Lactic acid`, tissue)]   by_group[,plotting_group := `feature_Lactic acid`]      for(platform in unique(by_group[,plotting_group])){     data_df = data.frame(by_group[plotting_group == platform])     g = ggplot2::ggplot(data_df, ggplot2::aes(y=lactate_pyruvate, x=group, group=plotting_group, color=tissue)) +       ggplot2::geom_point(size=2, position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_line(position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_errorbar(ggplot2::aes(ymin=lactate_pyruvate-lactate_pyruvate_sd, ymax=lactate_pyruvate+lactate_pyruvate_sd),                              width=0.2,                               position=ggplot2::position_dodge(width=0.3)) +       ggplot2::theme_classic() +       ggplot2::geom_hline(yintercept = 0,linetype=\"dotted\") +       ggplot2::facet_wrap(~sex) +       ggplot2::labs(title=sprintf(\"%s lactate/pyruvate\", tissue),                      x=\"Time trained (weeks)\",                      y=\"Ratio\") +       ggplot2::theme(plot.title = ggplot2::element_text(hjust=0.5),                      plot.subtitle = ggplot2::element_text(hjust=0.5),                      panel.grid.major = ggplot2::element_blank(),                      panel.grid.minor = ggplot2::element_blank()) +       ggplot2::scale_colour_manual(values=TISSUE_COLORS[names(TISSUE_COLORS) %in% by_group[,tissue]],                                    name=\"Tissue\",                                    guide=\"none\") +       scale_x_discrete(limits=c('control','1w','2w','fill','4w',rep('fill',3), '8w'),                        labels=c('0','1','2','4','8'),                        breaks=c('control','1w','2w','4w','8w'))     if(length(unique(by_group[,plotting_group])) > 1){       g = g + labs(subtitle=sprintf(\"Lactate measured by %s\",platform))     }     print(g)   } } #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;LIVER;Lactate'. Plotting them #> together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> 'METAB;LIVER;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-GN;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'Lactate' not found in the METAB SKM-VL sample-level data. #> 'METAB;SKM-VL;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'pyruvate' not found in the METAB SKM-VL sample-level data. #> 'METAB;PLASMA;Lactate' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG #> 'METAB;PLASMA;pyruvate' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"ampatp","dir":"Articles","previous_headings":"Metabolites manually selected for biological relevance > Meaningful ratios","what":"AMP/ATP","title":"Key metabolites","text":"","code":"# get all sample-level data features = c(\"AMP\",\"ATP\") for(tissue in c(\"LIVER\",\"SKM-GN\",\"SKM-VL\",\"PLASMA\")){   subdat = list()   for(feat in features){     dat = my_plot_feature_normalized_data(feature_ID=feat,                                            tissue=tissue,                                           assay=\"METAB\",                                           add_adj_p = TRUE,                                            return_data = TRUE)$by_sample     if(is.null(dat)) next     dat$feature_ID = feat     dat$tissue = tissue     subdat[[feat]] = dat   }   # add ratio   if(length(subdat) < 2) next   merged = merge(subdat[[1]], subdat[[2]], by=c(\"sex\",\"group\",\"sample\",\"tissue\",\"feature\"),                   suffixes = paste0(\"_\", names(subdat)))   merged$amp_atp = merged$`value_AMP`/merged$`value_ATP`   merged = data.table(merged)    # AMP is measured on 3 platforms; ATP is measured on 2 platforms   # just use data from overlapping platforms   by_group = merged[,list(amp_atp = mean(amp_atp),                           amp_atp_sd = sd(amp_atp)),                   by=.(sex, group, tissue, feature)]      for(platform in unique(by_group[,feature])){     data_df = data.frame(by_group[feature == platform])     g = ggplot2::ggplot(data_df, ggplot2::aes(y=amp_atp, x=group, group=feature, color=tissue)) +       ggplot2::geom_point(size=2, position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_line(position=ggplot2::position_dodge(width=0.3)) +       ggplot2::geom_errorbar(ggplot2::aes(ymin=amp_atp-amp_atp_sd, ymax=amp_atp+amp_atp_sd),                              width=0.2,                               position=ggplot2::position_dodge(width=0.3)) +       ggplot2::theme_classic() +       ggplot2::geom_hline(yintercept = 0,linetype=\"dotted\") +       ggplot2::facet_wrap(~sex) +       ggplot2::labs(title=sprintf(\"%s AMP/ATP\", tissue),                      x=\"Time trained (weeks)\",                      y=\"Ratio\") +       ggplot2::theme(plot.title = ggplot2::element_text(hjust=0.5),                      plot.subtitle = ggplot2::element_text(hjust=0.5),                      panel.grid.major = ggplot2::element_blank(),                      panel.grid.minor = ggplot2::element_blank()) +       ggplot2::scale_colour_manual(values=TISSUE_COLORS[names(TISSUE_COLORS) %in% by_group[,tissue]],                                    name=\"Tissue\",                                    guide=\"none\") +       scale_x_discrete(limits=c('control','1w','2w','fill','4w',rep('fill',3), '8w'),                        labels=c('0','1','2','4','8'),                        breaks=c('control','1w','2w','4w','8w'))     g = g + labs(subtitle=sprintf(\"Measured by %s\",platform))     print(g)   } } #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;LIVER;AMP'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;LIVER;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;LIVER;ATP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_LIVER_DA_METAREG #> 'METAB;SKM-GN;AMP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;SKM-GN;AMP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-GN;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;SKM-GN;ATP'. Plotting them together. #> Adding differential analysis p-value... #> METAB_SKMGN_DA_METAREG #> 'METAB;SKM-VL;AMP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'AMP' not found in the METAB SKM-VL sample-level data. #> 'METAB;SKM-VL;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'ATP' not found in the METAB SKM-VL sample-level data. #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : Multiple features correspond to 'METAB;PLASMA;AMP'. Plotting them together. #> Adding differential analysis p-value... #> 'METAB;PLASMA;ATP' is not a training-regulated feature. Looking in all sample-level data. #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> Warning in my_plot_feature_normalized_data(feature_ID = feat, tissue = tissue, #> : 'ATP' not found in the METAB PLASMA sample-level data."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"metabolites-manually-selected-from-full-list-of-differential-metabolites","dir":"Articles","previous_headings":"","what":"Metabolites manually selected from full list of differential metabolites","title":"Key metabolites","text":"Now, let’s plot individual metabolites. metabolites significantly training-regulated 5% FDR. manually selected potentially interesting metabolites highlight full list differential metabolites. metabolite, trajectory normalized sample-level data shown left, log fold-changes timewise differential analysis shown right. Multiple traces shown multiple platforms measured metabolite.","code":"v1 = fread(\"differential_metabolites_1.txt\") v2 = fread(\"differential_metabolites_2.txt\") metabolites = v1[plot==\"X\", feature]  for(m in metabolites){        # sample-level data   p = plot_feature_normalized_data(feature=m, add_adj_p=TRUE, facet_by_sex=TRUE)   if(!is.null(p)){     print(p)   }else{     next   }      # log fold-changes   p = plot_feature_logfc(feature=m, facet_by_sex=TRUE)   if(!is.null(p)){     print(p)   } } #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;BAT;Aspartic acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;Aspartic acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;WAT-SC;Aspartic acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;CAR(12:1)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;BAT;CAR(14:1)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;CAR(18:1(OH))'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;CAR(4:0(OH))'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;CAR(4:0)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;CAR(8:0)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;WAT-SC;CAR(8:0)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;SKM-GN;CMP'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;KIDNEY;Cer(d18:1/16:0)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;KIDNEY;Cortisol'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;BAT;Cytidine'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HIPPOC;Eicosanoyl-EA'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;Fumaric acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;SKM-GN;meta-reg:GMP'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;Glucose'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;PLASMA;Glutamic acid'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;SKM-GN;Guanosine'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;Hypoxanthine'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;WAT-SC;Hypoxanthine'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;WAT-SC;Isoleucine'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;Kynurenic acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;BAT;LPC(16:1)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;LPC(16:1)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;LPC(18:1)'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;LPC(20:4)'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;SKM-GN;NAD+'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;WAT-SC;NADH'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;SKM-GN;NADP+'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;Oxoglutaric acid'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;PE(O-16:1/16:0)'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HEART;SM(d34:1)'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LUNG;Sphingosine 1-phosphate'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;HIPPOC;Succinic acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;PLASMA;Succinic acid'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;LIVER;Uric acid'. Plotting them together. #> Adding differential analysis p-value... #> Multiple features correspond to 'METAB;BAT;Xanthosine'. Plotting them together. #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value... #> Adding differential analysis p-value..."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/articles/key_metabolites.html","id":"metabolites-training-regulated-in-many-tissues","dir":"Articles","previous_headings":"","what":"Metabolites training-regulated in many tissues","title":"Key metabolites","text":"Finally, let’s plot metabolites differential many tissues. include metabolites training-regulated multiple tissues well metabolites training-regulated least 8 tissues. Trajectories log fold-changes timewise differential analysis shown, traces colored tissue. training adjusted p-values, used select differential features 5% FDR, indicated legend.","code":"featureIDs = unique(c(v1[plot==\"X\", feature_ID], v2[plot==\"X\", feature_ID])) for(f in featureIDs){   # get all training-regulated features   features = unique(TRAINING_REGULATED_FEATURES$feature[TRAINING_REGULATED_FEATURES$feature_ID==f])   if(length(features) <= 1){     next   }   # get all logFCs   data = list()   for(feat in features){     data[[feat]] = plot_feature_logfc(feature=feat, add_adj_p = TRUE, return_data = TRUE)   }   data = rbindlist(data)   data[,plotting_group := paste0(tissue,feature)]   # add adj p to legend   data[,tissue_p := sprintf(\"%s (%s)\", tissue, signif(selection_fdr, digits=3))]   labels = unique(data[,tissue_p])   names(labels) = gsub(\" .*\",\"\",labels)      data_df = data.frame(data)   g = ggplot2::ggplot(data_df, ggplot2::aes(y=logFC, x=comparison_group, group=plotting_group, color=tissue)) +     ggplot2::geom_point(size=2, position=ggplot2::position_dodge(width=0.3)) +     ggplot2::geom_line(position=ggplot2::position_dodge(width=0.3)) +     ggplot2::geom_errorbar(ggplot2::aes(ymin=logFC-logFC_se, ymax=logFC+logFC_se),                            width=0.2,                             position=ggplot2::position_dodge(width=0.3)) +     ggplot2::theme_classic() +     ggplot2::geom_hline(yintercept = 0,linetype=\"dotted\") +     ggplot2::facet_wrap(~sex) +     ggplot2::labs(title=f, x=\"Time trained (weeks)\", y=\"Log fold-change\") +     ggplot2::theme(plot.title = ggplot2::element_text(hjust=0.5),                    plot.subtitle = ggplot2::element_text(hjust=0.5),                    panel.grid.major = ggplot2::element_blank(),                    panel.grid.minor = ggplot2::element_blank()) +     ggplot2::scale_colour_manual(values=TISSUE_COLORS[names(TISSUE_COLORS) %in% data[,tissue]],                                   name=\"Tissue\",                                  labels=labels) +     scale_x_discrete(limits=c('control','1w','2w','fill','4w',rep('fill',3), '8w'),                      labels=c('0','1','2','4','8'),                      breaks=c('control','1w','2w','4w','8w'))   print(g) } sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.4.3                   data.table_1.14.8               #> [3] MotrpacRatTraining6mo_1.6.4     MotrpacRatTraining6moData_1.9.1 #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.0    viridisLite_0.4.2   dplyr_1.1.3         #>  [4] farver_2.1.1        viridis_0.6.4       ggraph_2.1.0        #>  [7] fastmap_1.1.1       TH.data_1.1-2       mathjaxr_1.6-0      #> [10] tweenr_2.0.2        digest_0.6.33       lifecycle_1.0.3     #> [13] survival_3.5-5      r2r_0.1.1           magrittr_2.0.3      #> [16] compiler_4.3.1      rlang_1.1.1         sass_0.4.7          #> [19] tools_4.3.1         plotrix_3.8-2       igraph_1.5.1        #> [22] utf8_1.2.3          yaml_2.3.7          knitr_1.43          #> [25] sn_2.1.1            labeling_0.4.3      htmlwidgets_1.6.2   #> [28] graphlayouts_1.0.0  mnormt_2.1.1        RColorBrewer_1.1-3  #> [31] multcomp_1.4-25     withr_2.5.0         purrr_1.0.2         #> [34] numDeriv_2016.8-1.1 BiocGenerics_0.46.0 desc_1.4.2          #> [37] grid_4.3.1          polyclip_1.10-4     stats4_4.3.1        #> [40] fansi_1.0.4         multtest_2.56.0     colorspace_2.1-0    #> [43] edgeR_3.42.4        scales_1.2.1        MASS_7.3-60         #> [46] cli_3.6.1           mvtnorm_1.2-3       rmarkdown_2.24      #> [49] ragg_1.2.5          generics_0.1.3      visNetwork_2.1.2    #> [52] metap_1.8           cachem_1.0.8        ggforce_0.4.1       #> [55] stringr_1.5.0       splines_4.3.1       vctrs_0.6.3         #> [58] Matrix_1.6-1        sandwich_3.0-2      jsonlite_1.8.7      #> [61] ggrepel_0.9.3       systemfonts_1.0.4   locfit_1.5-9.8      #> [64] limma_3.56.2        tidyr_1.3.0         jquerylib_0.1.4     #> [67] glue_1.6.2          pkgdown_2.0.7       codetools_0.2-19    #> [70] stringi_1.7.12      gtable_0.3.4        munsell_0.5.0       #> [73] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.6     #> [76] R6_2.5.1            textshaping_0.3.6   Rdpack_2.5          #> [79] tidygraph_1.2.3     rprojroot_2.0.3     Biobase_2.60.0      #> [82] evaluate_0.21       lattice_0.21-8      highr_0.10          #> [85] rbibutils_2.2.15    memoise_2.0.1       qqconf_1.3.2        #> [88] TFisher_0.2.0       bslib_0.5.1         mutoss_0.1-13       #> [91] Rcpp_1.0.11         gridExtra_2.3       xfun_0.40           #> [94] fs_1.6.3            zoo_1.8-12          pkgconfig_2.0.3"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicole Gay. Maintainer, author. David Amar. Author. Pierre Jean Beltran. Author. MoTrPAC Study Group. Author, data contributor. NIH Common Fund. Funder. National Institute Diabetes Digestive Kidney Diseases (NIDDK). Funder. National Institute Arthritis Musculoskeletal Diseases (NIAMS). Funder. National Institute Aging (NIA). Funder. National Institute Biomedical Imaging Bioengineering. Funder.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gay N, Amar D, Jean Beltran P, MoTrPAC Study Group (2023). MotrpacRatTraining6mo: Analysis MoTrPAC endurance exercise training data 6-month-old rats. https://github.com/MoTrPAC/MotrpacRatTraining6mo, https://motrpac.github.io/MotrpacRatTraining6mo/.","code":"@Manual{,   title = {MotrpacRatTraining6mo: Analysis of the MoTrPAC endurance exercise training data in 6-month-old rats},   author = {Nicole Gay and David Amar and Pierre {Jean Beltran} and {MoTrPAC Study Group}},   year = {2023},   note = {https://github.com/MoTrPAC/MotrpacRatTraining6mo, https://motrpac.github.io/MotrpacRatTraining6mo/}, }"},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/devnotes.html","id":"load-the-package-in-development-mode","dir":"","previous_headings":"","what":"Load the package in development mode","title":"Notes for developers","text":"Set working directory repository: Load functions defined ./R:","code":"setwd(\"~/src/MOTRPAC/MotrpacRatTraining6mo\") library(devtools) load_all()"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/devnotes.html","id":"create-a-test","dir":"","previous_headings":"","what":"Create a test","title":"Notes for developers","text":"Use usethis::use_r() usethis::use_test(). See details .","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/devnotes.html","id":"create-a-vignette","dir":"","previous_headings":"","what":"Create a vignette","title":"Notes for developers","text":"Use usethis::use_vignette(\"vignette-title\"), edit .Rmd vignettes/, build devtools::build_rmd(). See details .","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"motrpacrattraining6mo","dir":"","previous_headings":"","what":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"IMPORTANT: Watch repository get email notifications new releases, include new features bug fixes. top-right corner page, choose Watch > Custom > Releases. notified changes underlying data, watch repository.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"package MoTrPAC Installation Getting help Acknowledgements Data use agreement Citing MoTrPAC data","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"about-this-package","dir":"","previous_headings":"Overview","what":"About this package","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"package provides functions fetch, explore, reproduce processed data downstream analysis results presented main paper first large-scale multi-omic multi-tissue endurance exercise training study conducted young adult rats Molecular Transducers Physical Activity Consortium (MoTrPAC). Find preprint bioRxiv. See vignette examples use package. functions package can used , primarily written analyze data MotrpacRatTraining6moData R package. See examples data can analyzed without package MotrpacRatTraining6moData vignette.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"about-motrpac","dir":"","previous_headings":"Overview","what":"About MoTrPAC","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"MoTrPAC national research consortium designed discover perform preliminary characterization range molecular transducers (“molecular map”) underlie effects physical activity humans. program’s goal study molecular changes occur exercise ultimately advance understanding physical activity improves preserves health. six-year program largest targeted NIH investment funds mechanisms physical activity improves health prevents disease. See motrpac.org motrpac-data.org details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"Install package devtools. installing package also installs MotrpacRatTraining6moData dependency, Mac users additionally extend timeout prevent error caused amount time takes download MoTrPAC/MotrpacRatTraining6moData@HEAD. MotrpacRatTraining6moData critical dependency package. command issues installing dependency, follow instructions install MotrpacRatTraining6moData separately.","code":"options(timeout=1e5) # recommended for Mac users if (!require(\"devtools\", quietly = TRUE)){   install.packages(\"devtools\") } devtools::install_github(\"MoTrPAC/MotrpacRatTraining6mo\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"See vignette examples use package. Still questions? questions, bug reporting, feature requests package, please submit new issue include many details possible. concern related data provided MotrpacRatTraining6moData package, please submit issue instead.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"MoTrPAC supported National Institutes Health (NIH) Common Fund cooperative agreements managed National Institute Diabetes Digestive Kidney Diseases (NIDDK), National Institute Arthritis Musculoskeletal Diseases (NIAMS), National Institute Aging (NIA). Specifically, MoTrPAC Study supported NIH grants U24OD026629 (Bioinformatics Center), U24DK112349, U24DK112342, U24DK112340, U24DK112341, U24DK112326, U24DK112331, U24DK112348 (Chemical Analysis Sites), U01AR071133, U01AR071130, U01AR071124, U01AR071128, U01AR071150, U01AR071160, U01AR071158 (Clinical Centers), U24AR071113 (Consortium Coordinating Center), U01AG055133, U01AG055137 U01AG055135 (PASS/Animal Sites).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"data-use-agreement","dir":"","previous_headings":"","what":"Data use agreement","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"Recipients Agents agree publications using data MoTrPAC public-use data sets acknowledge MoTrPAC source data, including version number data sets used, e.g.: Data used preparation article obtained Molecular Transducers Physical Activity Consortium (MoTrPAC) database, available public access motrpac-data.org. Specific datasets used [version numbers]. Data used preparation article obtained Molecular Transducers Physical Activity Consortium (MoTrPAC) MotrpacRatTraining6moData R package [version number].","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/index.html","id":"citing-motrpac-data","dir":"","previous_headings":"","what":"Citing MoTrPAC data","title":"Analysis of the MoTrPAC endurance exercise training data in\n    6-month-old rats","text":"MoTrPAC Study Group. 2022. Temporal dynamics multi-omic response endurance exercise training across tissues. bioRxiv doi: 10.1101/2022.09.21.508770","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/MotrpacRatTraining6mo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MotrpacRatTraining6mo: Analysis of the MoTrPAC endurance exercise training data in 6-month-old rats — MotrpacRatTraining6mo-package","title":"MotrpacRatTraining6mo: Analysis of the MoTrPAC endurance exercise training data in 6-month-old rats — MotrpacRatTraining6mo-package","text":"goal Molecular Transducers Physical Activity Consortium (MoTrPAC) study molecular changes occur exercise ultimately advance understanding physical activity improves preserves health. package provides convenient analysis functions explore multi-tissue, multi-omic data generated MoTrPAC's endurance exercise training study 6-month-old rats.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/MotrpacRatTraining6mo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MotrpacRatTraining6mo: Analysis of the MoTrPAC endurance exercise training data in 6-month-old rats — MotrpacRatTraining6mo-package","text":"Maintainer: Nicole Gay nicole.r.gay@gmail.com Authors: David Amar ddam.@gmail.com Pierre Jean Beltran pjeanbeltran@gmail.com MoTrPAC Study Group [data contributor] contributors: NIH Common Fund [funder] National Institute Diabetes Digestive Kidney Diseases (NIDDK) [funder] National Institute Arthritis Musculoskeletal Diseases (NIAMS) [funder] National Institute Aging (NIA) [funder] National Institute Biomedical Imaging Bioengineering [funder]","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/STOPWORDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop words — STOPWORDS","title":"Stop words — STOPWORDS","text":"Stop words tm::stopwords(). Used cleanup().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/STOPWORDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop words — STOPWORDS","text":"","code":"STOPWORDS"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/STOPWORDS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stop words — STOPWORDS","text":"Unnamed character vector","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/add_line_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line breaks to a string — add_line_breaks","title":"Add line breaks to a string — add_line_breaks","text":"Given long string, add line breaks \"\\<br\\>\" specified intervals. Breaks always added preceding instance separator. Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/add_line_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line breaks to a string — add_line_breaks","text":"","code":"add_line_breaks(x, max_char = 50, sep = \",\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/add_line_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line breaks to a string — add_line_breaks","text":"x character string max_char integer, add line breaks least every max_char characters sep character add line break","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/add_line_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line breaks to a string — add_line_breaks","text":"string additional \\<br\\> necessary","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze genome tiles — analyze_tile","title":"Analyze genome tiles — analyze_tile","text":"wrapper function analyzes tile loci genome obtain correlated clusters.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze genome tiles — analyze_tile","text":"","code":"analyze_tile(   tile_name,   tile_l,   M,   min_cor = 0.7,   inflations = c(3, 2.5, 2, 1.5),   plotcorr = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze genome tiles — analyze_tile","text":"tile_name character. name current window analysis. tile_l named list. tile_name must item list. entry contains M matrix row indices loci window. M numeric matrix. Contains \"M\" methylation values. Rows loci, columns samples. min_cor number. minimal correlation considered connecting pair loci. inflations numeric vector. Internal parameters MCL algorithm, see Details. plotcorr logical. TRUE: plot correlation matrix window (useful analysis specific windows).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze genome tiles — analyze_tile","text":"character vector. Names loci (M matrix rows), entries names loci clusters.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze genome tiles — analyze_tile","text":"function implements clustering analysis specific window genome. observed often adjacent loci RRBS data may manifest low correlations. function can used identified set highly correlated loci within window, can used extract new genomic features downstream analysis. RRBS data two columns per sample: \"Un\" (unmethylated) \"\"(methylated). function takes \"M matrix\" contains integrated values columns (see examples). matrix used computing correlations loci, use Markov Clustering algorithm (MCL) identifying homogeneous clusters within window. MCL (Markov clustering) details https://www.micans.org/mcl/intro.html. MCL: Expansion coincides taking power stochastic matrix using normal matrix product (.e. matrix squaring). Inflation corresponds taking Hadamard power matrix (taking powers entrywise), followed scaling step, resulting matrix stochastic , .e. matrix elements (column) correspond probability values. Inflation parameter: strengthen intra-region connections promote cluster homogeneity.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/analyze_tile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze genome tiles — analyze_tile","text":"","code":"if (FALSE) { # Raw data by tissue are available as RData files in Google Cloud Storage with the following URLs:    # Brown adipose: # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_BAT_RAW_DATA.rda # Heart:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_HEART_RAW_DATA.rda # Hippocampus:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_HIPPOC_RAW_DATA.rda # Kidney:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_KIDNEY_RAW_DATA.rda # Lung:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_LUNG_RAW_DATA.rda # Liver:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_LIVER_RAW_DATA.rda # Gastrocnemius:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_SKMGN_RAW_DATA.rda # White adipose:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_WATSC_RAW_DATA.rda  # load_methyl_raw_data() can be used to download data for a tissue, e.g., # download the gastrocnemius data and load the data object into this session: yall = load_methyl_raw_data(\"SKM-GN\")  # remove control samples is_sample = grepl(\"^9\",colnames(yall),perl=TRUE) yall = yall[,is_sample]  # Filtering unassembled chromosomes keep <- rep(TRUE, nrow(yall)) Chr <- as.character(yall$genes$Chr) keep[ grep(\"random\",Chr) ] <- FALSE keep[ grep(\"chrUn\",Chr) ] <- FALSE # remove non-chr ones keep[!grepl(\"chr\",Chr) ] <- FALSE # remove M chromosome (otherwise we get error when assigning annotation below) keep[Chr==\"chrM\"] <- FALSE # keep.lib.sizes=FALSE causes the library sizes to be recomputed yall <- yall[keep,, keep.lib.sizes=FALSE] # rat genome chromosomes: ChrNames <- paste0(\"chr\",c(1:20,\"X\",\"Y\")) yall$genes$Chr <- factor(yall$genes$Chr, levels=ChrNames) o <- order(yall$genes$Chr, yall$genes$Locus) yall <- yall[o,] print(paste(\"Counts matrix dim before low counts filter:\")) print(dim(yall)) gc()  # Remove low count features # The analysis needs to be restricted to CpG sites that have enough coverage for the # methylation level to be measurable in a meaningful way at that site.  # As a conservative rule of thumb, we require a site to have a total count # (both methylated and unmethylated) of at least 8 in every sample. Coverage <- yall$counts[,grepl(\"-Me\",colnames(yall$counts))] +       yall$counts[, grepl(\"-Un\",colnames(yall$counts))] min_count_coverage = 10 min_per_samples = 1 # see description of min_count_coverage and min_per_samples above keep <- rowSums(Coverage >= min_count_coverage) >= min_per_samples*ncol(Coverage) # filter the data yall <- yall[keep,, keep.lib.sizes=FALSE] print(paste(\"Counts matrix dim after low counts filter:\")) print(dim(yall))  # get locations, gene ids, etc TSS <- edgeR::nearestTSS(yall$genes$Chr, yall$genes$Locus, species=\"Rn\") yall$genes$EntrezID <- TSS$gene_id yall$genes$Symbol <- TSS$symbol yall$genes$Strand <- TSS$strand yall$genes$Distance <- TSS$distance yall$genes$Width <- TSS$width  # Now we are ready to cluster the genome wsize = 500 # step 1: define the genome-level tiles chrs = as.character(yall$genes$Chr) pos = round(yall$genes$Locus/wsize) tiles = paste(chrs,pos,sep=\"-\") names(tiles) = rownames(yall$counts) # step 2: add the M matrix for correlations Me <- yall$counts[, grepl(\"-Me\",colnames(yall$counts))] Un <- yall$counts[, grepl(\"-Un\",colnames(yall$counts))] M <- log2(Me + 2) - log2(Un + 2) # step 3: analyze each tile tile_l = split(1:nrow(M),tiles) tile_l = tile_l[unique(tiles)] # keep the genome order # parallel comp if(require(\"parallel\")){   tile_clusters = data.table::copy(tiles)   for(chr in unique(chrs)){     print(chr)     curr_chr_inds = grepl(paste0(chr,\"-\"),tiles)     chr_tiles = unique(tiles[curr_chr_inds])     chr_tile_l = tile_l[chr_tiles]     print(system.time({       chr_tile_clusters = parallel::mclapply(chr_tiles,                                              analyze_tile,                                              tile_l = chr_tile_l,                                              M = M,                                               mc.cores = 5)       chr_tile_clusters = unlist(chr_tile_clusters)       tile_clusters[names(chr_tile_clusters)] = chr_tile_clusters}))     gc()   } } yall = merge_sites_by_clusters(yall,tile_clusters)  # Data normalization # A key difference between BS-seq and other sequencing data is that the pair of libraries  # holding the methylated and unmethylated reads for a particular sample are treated as a unit. # To ensure that the methylated and unmethylated reads for the same sample are treated on the # same scale, we need to set the library sizes to be equal for each pair of libraries.  # We set the library sizes for each sample to be the average of the total read counts for  # the methylated and unmethylated libraries. # Other normalization methods developed for RNA-seq data,  # such as TMM, are not required for BS-seq data. TotalLibSize <- yall$samples$lib.size[grepl(\"-Me\",colnames(yall$counts))] +    yall$samples$lib.size[grepl(\"-Un\",colnames(yall$counts))] yall$samples$lib.size <- rep(TotalLibSize, each=2) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/annotate_cluster_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate clustering results — annotate_cluster_res","title":"Annotate clustering results — annotate_cluster_res","text":"Add \"ome\", \"tissue\", \"feature_ID\" columns input. Run within check_cluster_res_format().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/annotate_cluster_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate clustering results — annotate_cluster_res","text":"","code":"annotate_cluster_res(cluster_res)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/annotate_cluster_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate clustering results — annotate_cluster_res","text":"cluster_res data frame least two columns: \"feature\" \"cluster\". \"feature\" column must format \"MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/annotate_cluster_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate clustering results — annotate_cluster_res","text":"input data frame additional \"ome\", \"tissue\", \"feature_ID\" columns unfactorized \"cluster\" \"feature\" columns","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_call_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Call ATAC-seq sample outliers — atac_call_outliers","title":"Call ATAC-seq sample outliers — atac_call_outliers","text":"Identify samples outside 3 times interquartile range principal components explain least 7.5% variance tissue. Use 10,000 variable peaks. Outlier calling performed separately sex. specifies ATAC-seq outliers excluded differential analysis MoTrPAC.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_call_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call ATAC-seq sample outliers — atac_call_outliers","text":"","code":"atac_call_outliers(tissues, scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_call_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call ATAC-seq sample outliers — atac_call_outliers","text":"tissues character vector tissue abbreviations call ATAC-seq outliers, one \"BAT\", \"HEART\", \"HIPPOC\", \"KIDNEY\", \"LIVER\", \"LUNG\", \"SKM-GN\", \"WAT-SC\" scratchdir character, local directory download data Google Cloud Storage. Current working directory default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_call_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call ATAC-seq sample outliers — atac_call_outliers","text":"NULL outliers, data frame three columns one row per outlier: viallabel character, sample identifier tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV reason character, PC(s) sample flagged","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_call_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call ATAC-seq sample outliers — atac_call_outliers","text":"","code":"if (FALSE) { atac_call_outliers(\"LIVER\",\"/tmp\") atac_call_outliers(c(\"LIVER\",\"BAT\"),\"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"Download raw counts Google Cloud Storage return filtered quantile-normalized data. Alternatively, user can provide numeric data frame raw ATAC-seq counts.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"","code":"atac_normalize_counts(   tissue,   scratchdir = \".\",   n_samples = 4,   min_count = 10,   counts = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV scratchdir character, local directory download data Google Cloud Storage. Current working directory default. n_samples integer, retain features least min_count counts least n_samples samples min_count integer, retain features least min_count counts least n_samples samples counts optional user-supplied numeric data frame matrix row names feature IDs column names sample identifiers","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"data frame row names feature_ID column names viallabel","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"Non-autosomal peaks removed, .e., peak IDs begin \"chrX\", \"chrY\", \"chr\"+number. providing counts matrix, ensure peak IDs follow naming convention.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_normalize_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter and normalize raw ATAC-seq counts — atac_normalize_counts","text":"","code":"if (FALSE) { norm_data = atac_normalize_counts(\"BAT\", scratchdir = \"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare ATAC-seq dataset — atac_prep_data","title":"Prepare ATAC-seq dataset — atac_prep_data","text":"Retrieve format ATAC-seq sample-level data metadata given tissue.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare ATAC-seq dataset — atac_prep_data","text":"","code":"atac_prep_data(   tissue,   sex = NULL,   covariates = c(\"Sample_batch\", \"peak_enrich.frac_reads_in_peaks.macs2.frip\"),   filter_counts = FALSE,   return_normalized_data = FALSE,   scratchdir = \".\",   outliers = data.table::data.table(MotrpacRatTraining6moData::OUTLIERS)[assay == \"ATAC\",     viallabel],   nrows = Inf )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare ATAC-seq dataset — atac_prep_data","text":"tissue character, tissue abbreviation, one \"BAT\", \"HEART\", \"HIPPOC\", \"KIDNEY\", \"LIVER\", \"LUNG\", \"SKM-GN\", \"WAT-SC\" sex character, one 'male' 'female' covariates character vector covariates correspond column names MotrpacRatTraining6moData::ATAC_META. Defaults covariates used manuscript. filter_counts bool, whether return filtered raw counts return_normalized_data bool, whether also return normalized data scratchdir character, local directory download data Google Cloud Storage. Current working directory default. outliers vector viallabels exclude returned data. Defaults OUTLIERS$viallabel nrows integer, number rows return. Defaults Inf. Useful return subset large data frame tests.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare ATAC-seq dataset — atac_prep_data","text":"named list five items: metadata data frame combined MotrpacRatTraining6moData::PHENO MotrpacRatTraining6moData::ATAC_META, filtered samples tissue. covariates character vector covariates adjust differential analysis, input raw_counts data frame raw counts feature IDs row names vial labels column names. See MotrpacRatTraining6moData::ATAC_RAW_COUNTS details. norm_data data frame quantile-normalized data feature IDs row names vial labels column names. See MotrpacRatTraining6moData::ATAC_NORM_DATA details. outliers subset outliers input removed data","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare ATAC-seq dataset — atac_prep_data","text":"","code":"if (FALSE) { # Process gastrocnemius ATAC-seq data with default parameters, i.e., return data from both  # sexes, remove established outliers, download data to current working directory gastroc_data1 = atac_prep_data(\"SKM-GN\")  # Same as above but do not remove outliers if they exist  gastroc_data2 = atac_prep_data(\"SKM-GN\", outliers = NULL)  # Same as above but only return data from male samples gastroc_data3 = atac_prep_data(\"SKM-GN\", outliers = NULL, sex = \"male\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_timewise_da.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAC-seq timewise differential analysis — atac_timewise_da","title":"ATAC-seq timewise differential analysis — atac_timewise_da","text":"Use limma perform pairwise contrasts group trained animals sex-matched control group single tissue. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_timewise_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ATAC-seq timewise differential analysis — atac_timewise_da","text":"","code":"atac_timewise_da(   tissue,   covariates = c(\"Sample_batch\", \"peak_enrich.frac_reads_in_peaks.macs2.frip\"),   outliers = data.table::data.table(MotrpacRatTraining6moData::OUTLIERS)[assay == \"ATAC\",     viallabel],   scratchdir = \".\",   rdata_outfile = NULL,   overwrite = FALSE,   verbose = TRUE,   n_features = Inf )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_timewise_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ATAC-seq timewise differential analysis — atac_timewise_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV covariates character vector covariates correspond column names MotrpacRatTraining6moData::ATAC_META. Defaults covariates used manuscript. outliers vector viallabels exclude differential analysis. Defaults OUTLIERS$viallabel scratchdir character, local directory download data Google Cloud Storage. Current working directory default. rdata_outfile NULL path save eBayes objects RData file overwrite boolean, whether overwrite file rdata_outfile exists verbose boolean, whether print messages n_features integer, number peaks perform differential analysis . Useful troubleshooting.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_timewise_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ATAC-seq timewise differential analysis — atac_timewise_da","text":"data frame one row per feature: feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. covariates character, comma-separated list adjustment variables removed_samples character, comma-separated list outliers (vial labels) removed differential analysis logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change tscore double, t statistic p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_timewise_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ATAC-seq timewise differential analysis — atac_timewise_da","text":"","code":"if (FALSE) { # Perform timewise differential analysis for chromatin accessibility peaks  # measured in hippocampus with default parameters. hippoc_atac_da = atac_timewise_da(\"HIPPOC\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAC-seq training differential analysis — atac_training_da","title":"ATAC-seq training differential analysis — atac_training_da","text":"Use limma perform F-test test effect training across time points. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ATAC-seq training differential analysis — atac_training_da","text":"","code":"atac_training_da(   tissue,   covariates = c(\"Sample_batch\", \"peak_enrich.frac_reads_in_peaks.macs2.frip\"),   outliers = data.table::data.table(MotrpacRatTraining6moData::OUTLIERS)[assay == \"ATAC\",     viallabel],   scratchdir = \".\",   rdata_outfile = NULL,   overwrite = FALSE,   verbose = TRUE,   n_features = Inf )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_training_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ATAC-seq training differential analysis — atac_training_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV covariates character vector covariates correspond column names MotrpacRatTraining6moData::ATAC_META. Defaults covariates used manuscript. outliers vector viallabels exclude differential analysis. Defaults [MotrpacRatTraining6moData::OUTLIERS]$viallabel scratchdir character, local directory download data Google Cloud Storage. Current working directory default. rdata_outfile NULL path save eBayes objects RData file overwrite boolean, whether overwrite file rdata_outfile exists verbose boolean, whether print messages n_features integer, number peaks perform differential analysis . Useful troubleshooting.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ATAC-seq training differential analysis — atac_training_da","text":"data frame one row per feature: feature_ID character, MoTrPAC feature identifier assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. removed_samples_male character, comma-separated list male outliers (vial labels) removed differential analysis removed_samples_female character, comma-separated list female outliers (vial labels) removed differential analysis fscore_male double, F statistic males fscore_female double, F statistic females p_value_male double, nominal F-test p-value males p_value_female double, nominal F-test p-value females full_model_male character, full model used F-test males full_model_female character, full model used F-test females reduced_model_male character, reduced model used F-test males reduced_model_female character, reduced model used F-test females p_value double, combined male female nominal p-value using sum logs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/atac_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ATAC-seq training differential analysis — atac_training_da","text":"","code":"if (FALSE) { # Perform differential analysis for chromatin accessibility peaks in  # brown adipose tissue with default parameters,  # i.e., outliers and covariates used for the manuscript da = atac_training_da(\"BAT\")  # Same as above but save the [limma::eBayes] MArrayLM objects in an RData file  da = atac_training_da(\"BAT\", rdata_outfile = \"/tmp/BAT_ATAC_training-da.RData\", overwrite = TRUE) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian graphical clustering — bayesian_graphical_clustering","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"Perform Bayesian graphical clustering differential analysis results using repfdr","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"","code":"bayesian_graphical_clustering(   zscores,   min_analyte_posterior_thr = 0.5,   min_prior_for_config = 0.001,   df = 20,   naive_edge_sets = TRUE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"zscores numeric matrix. Rows analytes, columns conditions (e.g., male week 1). Entries z-scores. min_analyte_posterior_thr number. minimal value sum posteriors including analyte. min_prior_for_config number. minimal prior probability configuration priors. df Integer. Parameter repfdr::ztobins(). Degrees freedom fitting estimated density f(z). naive_edge_sets logical. TRUE: edge sets extracted taking simple intersection nodes. FALSE: edge sets extracted repfdr solution.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"named list three items: node_sets named list node sets edge_sets named list edge sets repfdr_results repfdr EM solution","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"function highly specialized MoTrPAC data. assumes input zscore matrix eight columns. Four columns male z-scores (weeks 1, 2, 4, 8), four females. NA values input matrix. function first runs Bayesian clustering using repfdr (see repfdr_wrapper()) extracts node edge sets graphical solution. node time-point specific state. can represent null features (z-score around zero, effect), -regulated features (positive z-score), regulated features (negative z-scores). edge represents interaction among two adjacent time point. example, can represent features -regulated week 1 males females, null male females week 2. min_analyte_posterior_thr used make sure features without reasonable fit clustering solution discarded, whereas min_prior_for_config removes clusters extremely low prior (.e., associated features). Formally, let zscores timewise nxm matrix z-scores n analytes m conditions, m even time points males females. z-score corresponds effect training compared untrained baseline. assume z-scores latent configuration -1,0,1, -1 denotes -regulation, 0 denotes null (change), 1 denotes -regulation. Let h denote latent configuration analyte m conditions. use expectation-maximization (EM) process repfdr algorithm (Heller Yekutieli, 2014) estimate prior π(h) posterior Pr(h|z_i), every analyte . algorithm converges, discard configurations h π(h) < min_analyte_posterior_thr normalize Pr(h|zi) sum 1 (.e., posteriors given zi). new posteriors can interpreted soft clustering solution, greater value , likely analyte participate cluster h. Given posteriors Pr(h|zi), assign analytes nine possible states time point (male females x time points 1w, 2w,4w, 8w). Analyte belongs state sum posteriors consistent state > min_analyte_posterior_thr. every pair states adjacent time points j j+1 define edge set set analytes whose differential expression pattern consistent two nodes.. Thus, node edge sets explained together define tree structure represent different differential patterns sex time. Naming format output: Node set names: {week}_F{differential regulation status}_M{differential regulation status}. Example 1: 1w_F1_M0 means -regulation females week 1 null (zero effect) males week 1. Example 2: 1w_F1_M-1 means -regulation females week 1 -regulation males week 1. edge set object named list string vectors. name edge [node_id]---[node_id].","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/bayesian_graphical_clustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian graphical clustering — bayesian_graphical_clustering","text":"","code":"if (FALSE) { ### Example 1: Simulate data with a single cluster zcolnames = c(   paste(\"female\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\"),   paste(\"male\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\") ) zscores = matrix(rnorm(80000), ncol=8, dimnames = list(1:10000,zcolnames)) # now add a cluster with a strong signal  zscores[1:500,1:4] = zscores[1:500,1:4] + 5   # Run the clustering solution wrapper. # When the data are \"clean\" (e.g., a mixture of two gaussians), we do not # need a high df in the two-groups model estimation # (default is 20, consider at least 10 when analyzing real data) clustering_sol = bayesian_graphical_clustering(zscores, df=5) # check if the clustering solution correctly assigns the first 500 rows  # (with high prob) to the right nodes length(intersect(1:500,clustering_sol$node_sets$`1w_F1_M0`))/500 > 0.95 length(intersect(1:500,clustering_sol$node_sets$`2w_F1_M0`))/500 > 0.95 length(intersect(1:500,clustering_sol$node_sets$`4w_F1_M0`))/500 > 0.95 length(intersect(1:500,clustering_sol$node_sets$`8w_F1_M0`))/500 > 0.95  # examine the node set sizes sapply(clustering_sol$node_sets,length) # examine the edge set sizes sapply(clustering_sol$edge_sets,length)  # extract the top full trajectories in the data # these should be the clusters with at least 10 features min_cluster_size = 10 get_trajectory_sizes_from_edge_sets(clustering_sol$edge_sets,min_size = min_cluster_size)  ### Example 2: real data data(REPFDR_INPUTS, package=\"MotrpacRatTraining6moData\") zscores = REPFDR_INPUTS$zs_smoothed rat_data_clustering_sol = bayesian_graphical_clustering(zscores) # extract the largest trajectories get_trajectory_sizes_from_edge_sets(rat_data_clustering_sol$edge_sets, min_size = 50) # plot the top trajectories of the muscle tissues, color edges by tissue get_tree_plot_for_tissue(tissues = c(\"SKM-GN\",\"HEART\",\"SKM-VL\"),                           omes = \"TRNSCRPT\",                          node_sets = rat_data_clustering_sol$node_sets,                          edge_sets = rat_data_clustering_sol$edge_sets,                          min_size = 20,                          parallel_edges_by_tissue = TRUE,                          max_trajectories = 3) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/calc_similarity_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pathway similarity metric — calc_similarity_metric","title":"Calculate pathway similarity metric — calc_similarity_metric","text":"Calculate EnrichmentMap's similarity metric pathways, 50% Jaccard index 50% overlap score. Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/calc_similarity_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pathway similarity metric — calc_similarity_metric","text":"","code":"calc_similarity_metric(   pws,   fid_lists,   include_metab_singletons,   parent_pathways,   clust1sig_collapsed,   similarity_cutoff )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/calc_similarity_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pathway similarity metric — calc_similarity_metric","text":"pws character vector pathway term IDs, length 2 fid_lists named list names pathway terms IDs values lists integers corresponding unique feature IDs include_metab_singletons boolean. TRUE, include pathways enriched metabolites (ome METAB) singleton nodes parent_pathways named list, map KEGG REAC pathway term ID parent pathway. Used create labels clusters pathway enrichments. List names must correspond values pw_enrich_res$term_id. MotrpacRatTraining6moData::PATHWAY_PARENTS default. NULL, pathway names used create cluster labels, quite meaningless pathway names unique. case, recommended set label_nodes FALSE. clust1sig_collapsed data table merged pathway enrichment results passed enrichment_network_vis() similarity_cutoff numeric, edges drawn pairs pathways similarity metric value","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/calc_similarity_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate pathway similarity metric — calc_similarity_metric","text":"numeric similarity score","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/call_pca_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Call PCA outliers — call_pca_outliers","title":"Call PCA outliers — call_pca_outliers","text":"Identify samples fall outside specified range principal components explain minimum variance.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/call_pca_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call PCA outliers — call_pca_outliers","text":"","code":"call_pca_outliers(   norm,   min_pc_ve,   scale = TRUE,   plot = TRUE,   verbose = TRUE,   iqr_coef = 3,   M = Inf,   title = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/call_pca_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call PCA outliers — call_pca_outliers","text":"norm feature sample data frame normalized data min_pc_ve numeric, minimum percent variance explained PC check outliers scale bool, whether scale input data PCA. TRUE default. plot bool, whether print PC plots removing outliers. TRUE default. verbose bool, whether print descriptive strings. TRUE default. iqr_coef numeric, flag PC outliers outside IQR * iqr_coef M integer, select M variable features title character, substring include PC plot titles","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/call_pca_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call PCA outliers — call_pca_outliers","text":"named list four items: pca_outliers character vector viallabels identified outliers prcomp_obj result returned prcomp() PCA normalized data without outliers removed num_pcs integer, number PCs checked outliers pc_outliers_report matrix results one row per outlier","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/call_pca_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call PCA outliers — call_pca_outliers","text":"","code":"bat_rna_data = transcript_prep_data(\"BAT\", covariates = NULL, outliers = NULL) #> TRNSCRPT_BAT_RAW_COUNTS #> TRNSCRPT_BAT_NORM_DATA bat_rna_outliers = call_pca_outliers(bat_rna_data$norm_data,                                       min_pc_ve=0.05,                                       iqr_coef=5,                                       M=1000,                                       title=\"Brown Adipose\") #>     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8     PC9    PC10  #> 0.17851 0.12381 0.09078 0.04275 0.02831 0.02600 0.02306 0.02091 0.02076 0.01946  #> The first 3 PCs were selected to identify outliers. #> PC outliers: #>      PC    viallabel     PC value #> [1,] \"PC3\" \"90266016902\" \"23.213\" #> [2,] \"PC3\" \"90416016902\" \"54.24\"  #> Plotting PCs with outliers flagged...  #> Plotting PCs with outliers removed..."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_cluster_res_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Check clustering results format — check_cluster_res_format","title":"Check clustering results format — check_cluster_res_format","text":"function generate warnings errors issues format input. Used internally extract_main_clusters().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_cluster_res_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check clustering results format — check_cluster_res_format","text":"","code":"check_cluster_res_format(cluster_res)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_cluster_res_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check clustering results format — check_cluster_res_format","text":"cluster_res Either data frame list lists. data frame, needs least two columns: \"feature\" \"cluster\". \"feature\" column format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. list lists, sublist must named cluster name (character string), values must features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_cluster_res_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check clustering results format — check_cluster_res_format","text":"data frame 5 columns: feature character, unique feature identifier format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training-regulated features 5% IHW FDR. redundant differential features, 'feature_ID' prepended specific platform make unique identifiers. See MotrpacRatTraining6moData::REPEATED_FEATURES details. cluster character, cluster label ome character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV feature_ID character, MoTrPAC feature identifier","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_cluster_res_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check clustering results format — check_cluster_res_format","text":"","code":"# Note this example is redundant because check_cluster_res_format() # is called within extract_main_clusters(), but it provides an  # example input and output cluster_res = extract_main_clusters() cluster_res_checked = check_cluster_res_format(cluster_res)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_da_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments for DA functions — check_da_args","title":"Check arguments for DA functions — check_da_args","text":"Internal function used check arguments differential analysis functions","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_da_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments for DA functions — check_da_args","text":"","code":"check_da_args(tissue, outfile, overwrite, outfile_is_rdata = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/check_da_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check arguments for DA functions — check_da_args","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV outfile character, output file overwrite bool, whether overwrite outfile exists outfile_is_rdata bool, whether outfile intended save RData","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up pathway names — cleanup","title":"Clean up pathway names — cleanup","text":"Remove punctuation, numbers, common words determine qualitative overlap pathways enriched metabolites versus pathways. Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up pathway names — cleanup","text":"","code":"cleanup(x)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up pathway names — cleanup","text":"x character, pathway names","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cleanup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up pathway names — cleanup","text":"vector candidate words determine overlap","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"Wrapper multi-tissue, multi-omic pathway enrichment clustering graphical results. Pathway enrichment performed using gprofiler2::gost() separately unique combination tissue, assay/ome, cluster.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"","code":"cluster_pathway_enrichment(   cluster_res,   databases = c(\"REAC\", \"KEGG\"),   feature_to_gene = MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT,   gene_identifier_type = \"ensembl_gene\",   universe = MotrpacRatTraining6moData::GENE_UNIVERSES$ensembl_gene,   kegg_db_destination = NULL,   fella_method = \"hypergeom\",   min_input_set_size = 1,   min_pw_set_size = 10,   max_pw_set_size = 200,   adjust_p = TRUE,   num_cores = NULL,   logfile = \"/dev/null\",   maxattempt = 50 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"cluster_res Either data frame list lists. data frame, needs least two columns: \"feature\" \"cluster\". \"feature\" column format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. list lists, sublist must named cluster name (character string), values must features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. databases character vector g:Profiler pathway databases query. \"KEGG\" \"REAC\" (REACTOME) default. Current options include: GO (GO:BP, GO:MF, GO:CC select particular GO branch), KEGG, REAC, TF, MIRNA, CORUM, HP, HPA, WP. See gprofiler2 documentation --date list. feature_to_gene data frame, map intersection_id_type gene symbols. Columns must include \"feature_ID\", \"gene_symbol\", \"ensembl_gene\", \"kegg_id\". MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT default. gene_identifier_type character, column feature_to_gene matches gene identifier type universe. \"ensembl_gene\" default. universe list lists character vectors, named first assay (.e., MotrpacRatTraining6moData::ASSAY_ABBREV) tissue (.e., MotrpacRatTraining6moData::TISSUE_ABBREV). Vectors provide full set gene symbols associated features tested differential analysis. example, universe$TRNSCRPT$LUNG character vector expressed genes lung, type gene identifier matches gene_identifier_type. [MotrpacRatTraining6moData::GENE_UNIVERSES]$ensembl_gene default. kegg_db_destination character, target directory KEGG database used FELLA pathway enrichment metabolites. Creates database exist yet. fella_method character, enrichment method FELLA::enrich(), one \"hypergeom\" \"diffusion\", passed run_fella() min_input_set_size integer, input must minimum number unique mappable gene IDs attempt enrichment gprofiler2::gost() min_pw_set_size integer, pathway must least many members attempt enrichment gprofiler2::gost() max_pw_set_size integer, pathway must many members attempt enrichment gprofiler2::gost() adjust_p boolean, whether adjust nominal p-values multiple testing (IHW tissue) num_cores optional integer, number cores register parallel computing desired logfile optional character, path log failed iterations maxattempt integer, max number consecutive null results gprofiler2::gost() giving ","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"data frame enrichment results, NULL enrichment results returned: query character, name input query default order query prefix \"query_\" (gprofiler2::gost()) term_size integer, number genes annotated term (gprofiler2::gost()) query_size integer, number genes included query (gprofiler2::gost()) intersection_size integer, number genes input query annotated corresponding term (gprofiler2::gost()) precision double, proportion genes input list annotated function, defined intersection_size/query_size (gprofiler2::gost()) recall double, proportion functionally annotated genes query recovers, defined intersection_size/term_size (gprofiler2::gost()) term_id character, unique term/pathway identifier (gprofiler2::gost()) source character, abbreviation data source term/pathway (gprofiler2::gost()) term_name character, term/pathway name (gprofiler2::gost()) effective_domain_size integer, total number genes universe used hypergeometric test (gprofiler2::gost()) source_order integer, numeric order term within data source (gprofiler2::gost()) parents list term IDs hierarchically directly term. non-hierarchical data sources points artificial root node (gprofiler2::gost()). evidence_codes character, comma-separated evidence codes (gprofiler2::gost()) intersection character, input gene IDs intersect term/pathway (gprofiler2::gost()) gost_adj_p_value double, improperly adjusted hypergeometric p-value gprofiler2::gost(). reference ; used filter results unless single ome/tissue/cluster combination input. computed_p_value double, nominal hypergeometric p-value, computed gprofiler2::gost() output cluster character, cluster label tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV ome character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV adj_p_value double, adjusted nominal p-value computed_p_value using IHW tissue covariate","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"FELLA::enrich() used pathway enrichment metabolites; gprofiler2::gost() used omes assuming features mapped genes. Pathway enrichments driven single gene excluded. function used generate MotrpacRatTraining6moData::GRAPH_PW_ENRICH.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/cluster_pathway_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway enrichment for graphical clusters — cluster_pathway_enrichment","text":"","code":"if (FALSE) { # Use graphical clusters as an example cluster_res = extract_main_clusters() # Pick a single graphical cluster # Gastrocnemius features up-regulated in both males and females at 8 weeks of training cluster_res = cluster_res[cluster_res$cluster == \"SKM-GN:8w_F1_M1\",]  # Example 1: Run pathway enrichment for this cluster on a single core pw_enrich = cluster_pathway_enrichment(cluster_res)  # Example 2: Run pathway enrichment for this cluster on 4 cores pw_enrich = cluster_pathway_enrichment(cluster_res, num_cores = 4)  # Example 3: Same as above, but include metabolites.  # Use FELLA's hypergeometric method for enrichment.  pw_enrich = cluster_pathway_enrichment(cluster_res,                                         num_cores = 4,                                        kegg_db_destination = \"~/KEGGdb/test\",                                        fella_method = \"hypergeom\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/collapse_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse p-values — collapse_p","title":"Collapse p-values — collapse_p","text":"Collapse p-values using metap::sumlog() multiple present. Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/collapse_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse p-values — collapse_p","text":"","code":"collapse_p(ps)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/collapse_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse p-values — collapse_p","text":"ps vector nominal p-values","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/collapse_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse p-values — collapse_p","text":"merged p-value","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_da_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine differential analysis results — combine_da_results","title":"Combine differential analysis results — combine_da_results","text":"Combine differential analysis results specified tissues omes(s)/assay(s). tissues omes specified, differential analysis results returned.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_da_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine differential analysis results — combine_da_results","text":"","code":"combine_da_results(   tissues = MotrpacRatTraining6moData::TISSUE_ABBREV,   assays = MotrpacRatTraining6moData::ASSAY_ABBREV,   metareg = TRUE,   include_epigen = FALSE,   scratchdir = \".\" )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_da_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine differential analysis results — combine_da_results","text":"tissues optional character vector tissue abbreviations, one MotrpacRatTraining6moData::TISSUE_ABBREV. assays optional character vector assay abbreviations, one MotrpacRatTraining6moData::ASSAY_ABBREV metareg bool, whether use meta-regression results METAB. Use upstream differential analysis results FALSE. TRUE default. include_epigen bool, whether include full ATAC METHYL differential analysis results Google Cloud Storage. relevant assays includes \"ATAC\" \"METHYL\". FALSE default. scratchdir character, local directory download data web. Current working directory default. relevant assays includes \"ATAC\" \"METHYL\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_da_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine differential analysis results — combine_da_results","text":"data frame. Depending specified assays, columns may included: feature character, unique feature identifier format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training-regulated features 5% IHW FDR. redundant differential features, 'feature_ID' prepended specific platform make unique identifiers. See MotrpacRatTraining6moData::REPEATED_FEATURES details. assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals adj_p_value double, adjusted p-value 'p_value' column. P-values -adjusted across datasets within given assay/ome. logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change tscore double, t statistic covariates character, comma-separated list adjustment variables NA numNAs integer, number missing values current 'comparison_group' sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals selection_fdr double, adjusted training p-value used select training-regulated analytes. P-values IHW-adjusted across datasets within given assay tissue covariate. dataset character, immune panel, metabolomics platform, ATAC-seq dataset name site character, Chemical Analysis Site (CAS) name. METAB is_targeted logical, targeted platform? METAB metabolite_refmet character, RefMet name metabolite. METAB cv double, feature coefficient variation dataset. METAB metabolite character, name metabolite appears CAS's data. METAB control_cv double, feature coefficient variation dataset. METAB mz double, mass charge. METAB rt double, retention time. METAB neutral_mass double, neutral mass. METAB meta_reg_het_p double, metabolites multiple measurements, meta-regression heterogeneity p-value, smaller p-value indicates disagreement platforms. One value per feature (per training group). METAB meta_reg_pvalue double, metabolites multiple measurements, meta-regression p-value. One value per feature (per training group). METAB shrunk_logFC double, log fold-change shrinkage applied shrunk_logFC_se double, standard error shrunken log fold-change zscore double, z statistic removed_samples character, comma-separated list vial labels excluded differential analysis NA comparison_average_intensity_se double, standard error 'comparison_average_intensity' reference_average_intensity_se double, standard error 'comparison_average_intensity' Chr integer, chromosome. METHYL Locus character, base pair range feature. METHYL EntrezID character, Entrez ID closest gene. METHYL Symbol character, gene symbol closest gene. METHYL ","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_da_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine differential analysis results — combine_da_results","text":"","code":"if (FALSE) { # Return all non-epigenetic differential analysis results,  # including meta-regression results for metabolomics data = combine_da_results()  # Return all global proteomics differential analysis results data = combine_da_results(assays=\"PROT\")  # Return METHYL and ATAC differential analysis results for gastrocnemius  data = combine_da_results(tissues=\"SKM-GN\",                            assays=c(\"ATAC\",\"METHYL\"),                           include_epigen=TRUE) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_normalized_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine normalized sample-level data — combine_normalized_data","title":"Combine normalized sample-level data — combine_normalized_data","text":"Combine normalized sample-level data specified tissues omes(s)/assay(s). tissues omes specified, data returned. order combine data different tissues data types, sample-specific vial labels converted animal-specific Participant IDs (PIDs).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_normalized_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine normalized sample-level data — combine_normalized_data","text":"","code":"combine_normalized_data(   tissues = MotrpacRatTraining6moData::TISSUE_ABBREV,   assays = MotrpacRatTraining6moData::ASSAY_ABBREV,   include_epigen = FALSE,   scratchdir = \".\",   training_regulated_only = FALSE,   exclude_outliers = FALSE,   nrows = Inf )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_normalized_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine normalized sample-level data — combine_normalized_data","text":"tissues optional character vector tissue abbreviations, one MotrpacRatTraining6moData::TISSUE_ABBREV. assays optional character vector assay abbreviations, one MotrpacRatTraining6moData::ASSAY_ABBREV include_epigen bool, whether include full ATAC METHYL differential analysis results Google Cloud Storage. relevant assays includes \"ATAC\" \"METHYL\". FALSE default. scratchdir character, local directory download data web. Current working directory default. relevant assays includes \"ATAC\" \"METHYL\". training_regulated_only bool, whether filter features training-regulated 5% FDR exclude_outliers bool, whether remove sample outliers specified MotrpacRatTraining6moData::OUTLIERS nrows integer, number rows return dataset. Defaults Inf. Useful return subset large data frame tests.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_normalized_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine normalized sample-level data — combine_normalized_data","text":"data frame features rows Participant IDs (PIDs) columns","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/combine_normalized_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine normalized sample-level data — combine_normalized_data","text":"","code":"if (FALSE) { # Return all normalized RNA-seq data data = combine_normalized_data(assays = \"TRNSCRPT\") }  # Return all normalized proteomics data. Exclude outliers  data = combine_normalized_data(assays = c(\"PROT\",\"UBIQ\",\"PHOSPHO\",\"ACETYL\"),                                exclude_outliers = TRUE) #> PROT_CORTEX_NORM_DATA #> PROT_HEART_NORM_DATA #> PROT_KIDNEY_NORM_DATA #> PROT_LIVER_NORM_DATA #> PROT_LUNG_NORM_DATA #> PROT_SKMGN_NORM_DATA #> PROT_WATSC_NORM_DATA #> UBIQ_HEART_NORM_DATA #> UBIQ_LIVER_NORM_DATA #> PHOSPHO_CORTEX_NORM_DATA #> PHOSPHO_HEART_NORM_DATA #> PHOSPHO_KIDNEY_NORM_DATA #> PHOSPHO_LIVER_NORM_DATA #> PHOSPHO_LUNG_NORM_DATA #> PHOSPHO_SKMGN_NORM_DATA #> PHOSPHO_WATSC_NORM_DATA #> ACETYL_HEART_NORM_DATA #> ACETYL_LIVER_NORM_DATA  if (FALSE) { # Return normalized ATAC-seq data for training-regulated features  data = combine_normalized_data(assays = \"ATAC\", training_regulated_only = TRUE)  # Return normalized ATAC-seq data for the first 1000 features in each tissue  data = combine_normalized_data(assays = \"ATAC\",                                 nrows = 1000,                                 scratchdir = \"/tmp\",                                 include_epigen = TRUE) }  # Return all normalized metabolomics data  data = combine_normalized_data(assays = \"METAB\") #> METAB ADRNL normalized data from METAB_NORM_DATA_FLAT #> METAB BAT normalized data from METAB_NORM_DATA_FLAT #> METAB BLOOD normalized data from METAB_NORM_DATA_FLAT #> METAB COLON normalized data from METAB_NORM_DATA_FLAT #> METAB CORTEX normalized data from METAB_NORM_DATA_FLAT #> METAB HEART normalized data from METAB_NORM_DATA_FLAT #> METAB HIPPOC normalized data from METAB_NORM_DATA_FLAT #> METAB HYPOTH normalized data from METAB_NORM_DATA_FLAT #> METAB KIDNEY normalized data from METAB_NORM_DATA_FLAT #> METAB LIVER normalized data from METAB_NORM_DATA_FLAT #> METAB LUNG normalized data from METAB_NORM_DATA_FLAT #> METAB OVARY normalized data from METAB_NORM_DATA_FLAT #> METAB PLASMA normalized data from METAB_NORM_DATA_FLAT #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> METAB SKM-VL normalized data from METAB_NORM_DATA_FLAT #> METAB SMLINT normalized data from METAB_NORM_DATA_FLAT #> METAB SPLEEN normalized data from METAB_NORM_DATA_FLAT #> METAB TESTES normalized data from METAB_NORM_DATA_FLAT #> METAB VENACV normalized data from METAB_NORM_DATA_FLAT #> METAB WAT-SC normalized data from METAB_NORM_DATA_FLAT"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/custom_cluster_pathway_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","title":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","text":"Wrapper multi-tissue, multi-omic pathway enrichment clustering graphical results user-supplied list pathways. Pathway enrichment performed using hypergeometric test separately unique combination tissue, assay/ome, cluster.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/custom_cluster_pathway_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","text":"","code":"custom_cluster_pathway_enrichment(   cluster_res,   pathway_member_list,   source = \"custom\",   feature_to_gene = MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT,   gene_identifier_type = \"gene_symbol\",   universe = MotrpacRatTraining6moData::GENE_UNIVERSES$gene_symbol,   add_ensembl_intersection = TRUE,   min_input_set_size = 1,   min_pw_set_size = 10,   max_pw_set_size = 200,   adjust_p = TRUE,   num_cores = NULL,   logfile = \"/dev/null\" )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/custom_cluster_pathway_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","text":"cluster_res Either data frame list lists. data frame, needs least two columns: \"feature\" \"cluster\". \"feature\" column format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. list lists, sublist must named cluster name (character string), values must features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. pathway_member_list named list character vectors names pathway names values pathway members. Pathway members must match values gene_identifer_type column feature_to_gene. source optional character string define source pathway_member_list feature_to_gene data frame, map intersection_id_type gene symbols. Columns must include \"feature_ID\", \"gene_symbol\", \"ensembl_gene\", \"kegg_id\". MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT default. gene_identifier_type character, column feature_to_gene matches gene identifier type universe. \"gene_symbol\" default. universe list lists character vectors, named first assay (.e., MotrpacRatTraining6moData::ASSAY_ABBREV) tissue (.e., MotrpacRatTraining6moData::TISSUE_ABBREV). Vectors provide full set gene symbols associated features tested differential analysis. example, universe$TRNSCRPT$LUNG character vector expressed genes lung, type gene identifier matches gene_identifier_type. [MotrpacRatTraining6moData::GENE_UNIVERSES]$gene_symbol default. add_ensembl_intersection bool, whether add intersection_ensembl column, converts gene IDs intersection Ensembl IDs min_input_set_size integer, input must minimum number unique mappable gene IDs attempt enrichment min_pw_set_size integer, pathway must least many members attempt enrichment max_pw_set_size integer, pathway must many members attempt enrichment adjust_p boolean, whether adjust nominal p-values multiple testing (IHW tissue) num_cores optional integer, number cores register parallel computing desired logfile optional character, path log failed iterations","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/custom_cluster_pathway_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","text":"data frame enrichment results, NULL enrichment results returned: term_size integer, number genes annotated term query_size integer, number genes included query intersection_size integer, number genes input query annotated corresponding term term_id character, unique term/pathway identifier source character, abbreviation data source term/pathway term_name character, term/pathway name effective_domain_size integer, total number genes universe used hypergeometric test intersection character, input gene IDs intersect term/pathway computed_p_value double, nominal hypergeometric p-value cluster character, cluster label tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV ome character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV adj_p_value double, adjusted nominal p-value computed_p_value using IHW tissue covariate","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/custom_cluster_pathway_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom pathway enrichment for graphical clusters — custom_cluster_pathway_enrichment","text":"","code":"# Use graphical clusters as an example cluster_res = extract_main_clusters() # Pick a single graphical cluster # Gastrocnemius features up-regulated in both males and females at 8 weeks of training cluster_res = cluster_res[cluster_res$cluster == \"SKM-GN:8w_F1_M1\",]  # Make a toy pathway member list with human gene symbols pathways = list(\"TCA cycle\" = c('ACO2','CS','FH','MDH1','OGDH','PDHA1','PDHA2','SDHC','SUCLG1'))  # Convert human gene symbols to rat gene symbols  data(\"RAT_TO_HUMAN_GENE\", package = \"MotrpacRatTraining6moData\") for (pw in names(pathways)){   newmembers = c()   for (m in pathways[[pw]]){     # get rat symbol     rat = RAT_TO_HUMAN_GENE$RAT_SYMBOL[RAT_TO_HUMAN_GENE$HUMAN_ORTHOLOG_SYMBOL == m][1]     if(!is.na(rat)){       newmembers = c(newmembers, rat)     }   }   pathways[[pw]] = newmembers }  # Perform pathway enrichment  custom_cluster_pathway_enrichment(cluster_res,                                    pathway_member_list = pathways,                                   min_pw_set_size = 1) #> Number of cores not defined with 'num_cores' argument. Setting the number of cores to 1. Explicity define 'num_cores' to take advantage of parallelization. If you aren't sure how many cores are available to you, try 'length(parallel::mcaffinity()).' #> Running enrichments for 6 gene sets on 1 core(s). This may take a while... #>  #> 6 out of 38 identifiers in SKM-GN:8w_F1_M1 ATAC SKM-GN are not in the current universe. Removing these features. #> [1] \"Edn2\"           \"AABR07030921.1\" \"U6\"             \"AABR07004761.1\" #> [5] \"AABR07062157.1\" \"Y_RNA\"          #>  #> 2 out of 5 identifiers in SKM-GN:8w_F1_M1 METHYL SKM-GN are not in the current universe. Removing these features. #> [1] \"Mir196a\"        \"AABR07002473.1\" #> Done. #>   term_size query_size intersection_size   term_id source term_name #> 1         6        121                 2 TCA_cycle custom TCA cycle #> 2         9        339                 6 TCA_cycle custom TCA cycle #>   effective_domain_size                 intersection computed_p_value #> 1                  3920                      Cs,Mdh1     1.306742e-02 #> 2                  5756 Cs,Fh,Mdh1,Ogdh,Pdha1,Suclg1     2.885974e-06 #>                                                                                                intersection_ensembl #> 1                                                                             ENSRNOG00000008103,ENSRNOG00000023520 #> 2 ENSRNOG00000003653,ENSRNOG00000008103,ENSRNOG00000025383,ENSRNOG00000005587,ENSRNOG00000023520,ENSRNOG00000005130 #>           cluster tissue     ome  adj_p_value #> 1 SKM-GN:8w_F1_M1 SKM-GN PHOSPHO 1.306742e-02 #> 2 SKM-GN:8w_F1_M1 SKM-GN    PROT 5.771947e-06"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/df_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Make data frame numeric only — df_to_numeric","title":"Make data frame numeric only — df_to_numeric","text":"Set row names remove non-numeric columns. useful reformatting data objects MotrpacRatTraining6moData, e.g., MotrpacRatTraining6moData::PROT_HEART_NORM_DATA","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/df_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make data frame numeric only — df_to_numeric","text":"","code":"df_to_numeric(df, rownames = \"feature_ID\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/df_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make data frame numeric only — df_to_numeric","text":"df data frame least one numeric column rownames either NULL, character specifying column name df, vector. Specifies target row names. Default: \"feature_ID\"","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/df_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make data frame numeric only — df_to_numeric","text":"numeric data frame","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/df_to_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make data frame numeric only — df_to_numeric","text":"","code":"df = MotrpacRatTraining6moData::PROT_HEART_NORM_DATA df[1:5,1:8] #>   feature     feature_ID tissue assay 90237015805 90245015805 90441015805 #> 1    <NA> XP_017456475.1  HEART  PROT     0.00769    -0.05952     0.10992 #> 2    <NA> XP_017447817.1  HEART  PROT     0.09326    -0.08879     0.31763 #> 3    <NA>    NP_446341.1  HEART  PROT    -0.11469     0.10623     0.08138 #> 4    <NA>    NP_071796.2  HEART  PROT     0.05903    -0.06490     0.05673 #> 5    <NA> NP_001157776.1  HEART  PROT     1.24616     0.63626     0.15487 #>   90420015805 #> 1    -0.00229 #> 2     0.07739 #> 3     0.08464 #> 4    -0.07494 #> 5    -0.39231 df_to_numeric(df)[1:5,1:4] #>                90237015805 90245015805 90441015805 90420015805 #> XP_017456475.1     0.00769    -0.05952     0.10992    -0.00229 #> XP_017447817.1     0.09326    -0.08879     0.31763     0.07739 #> NP_446341.1       -0.11469     0.10623     0.08138     0.08464 #> NP_071796.2        0.05903    -0.06490     0.05673    -0.07494 #> NP_001157776.1     1.24616     0.63626     0.15487    -0.39231  df = load_sample_data(\"SKM-GN\", \"TRNSCRPT\") #> TRNSCRPT_SKMGN_NORM_DATA df[1:5,1:8] #>   feature         feature_ID tissue    assay 90560015512 90581015512 #> 1    <NA> ENSRNOG00000000008 SKM-GN TRNSCRPT     0.04044    -0.09760 #> 2    <NA> ENSRNOG00000000012 SKM-GN TRNSCRPT     2.61487     2.78841 #> 3    <NA> ENSRNOG00000000021 SKM-GN TRNSCRPT     2.17049     1.70091 #> 4    <NA> ENSRNOG00000000024 SKM-GN TRNSCRPT     1.79255     1.26161 #> 5    <NA> ENSRNOG00000000033 SKM-GN TRNSCRPT     5.39651     5.50703 #>   90406015512 90449015512 #> 1    -0.70731     0.13853 #> 2     2.95085     2.46788 #> 3     1.69314     1.90443 #> 4     1.67725     1.66870 #> 5     5.50525     5.57206 df_to_numeric(df)[1:5,1:4] #>                    90560015512 90581015512 90406015512 90449015512 #> ENSRNOG00000000008     0.04044    -0.09760    -0.70731     0.13853 #> ENSRNOG00000000012     2.61487     2.78841     2.95085     2.46788 #> ENSRNOG00000000021     2.17049     1.70091     1.69314     1.90443 #> ENSRNOG00000000024     1.79255     1.26161     1.67725     1.66870 #> ENSRNOG00000000033     5.39651     5.50703     5.50525     5.57206  df = MotrpacRatTraining6moData::METAB_NORM_DATA_FLAT  df[1:5,1:8] #>                                   feature                 feature_ID tissue #> 1                                    <NA>          1-Methylhistidine SKM-GN #> 2          METAB;SKM-GN;3-Methylhistidine          3-Methylhistidine SKM-GN #> 3                                    <NA>                    Alanine SKM-GN #> 4 METAB;SKM-GN;alpha-Amino-N-butyric-acid alpha-Amino-N-butyric-acid SKM-GN #> 5     METAB;SKM-GN;alpha-Aminoadipic-acid     alpha-Aminoadipic-acid SKM-GN #>   assay        dataset  10023259  10024735  10025626 #> 1 METAB metab-t-amines -2.021833 -2.079719 -3.436179 #> 2 METAB metab-t-amines -5.701379 -5.434643 -3.936401 #> 3 METAB metab-t-amines  3.187501  3.215838  2.607263 #> 4 METAB metab-t-amines -4.377759 -4.316324 -5.241371 #> 5 METAB metab-t-amines -7.332883 -7.265484 -7.700365 rn = paste(df$assay, df$tissue, df$feature_ID, df$dataset, sep=\";\") df_to_numeric(df, rownames = rn)[1:5,1:3] #>                                                         10023259  10024735 #> METAB;SKM-GN;1-Methylhistidine;metab-t-amines          -2.021833 -2.079719 #> METAB;SKM-GN;3-Methylhistidine;metab-t-amines          -5.701379 -5.434643 #> METAB;SKM-GN;Alanine;metab-t-amines                     3.187501  3.215838 #> METAB;SKM-GN;alpha-Amino-N-butyric-acid;metab-t-amines -4.377759 -4.316324 #> METAB;SKM-GN;alpha-Aminoadipic-acid;metab-t-amines     -7.332883 -7.265484 #>                                                         10025626 #> METAB;SKM-GN;1-Methylhistidine;metab-t-amines          -3.436179 #> METAB;SKM-GN;3-Methylhistidine;metab-t-amines          -3.936401 #> METAB;SKM-GN;Alanine;metab-t-amines                     2.607263 #> METAB;SKM-GN;alpha-Amino-N-butyric-acid;metab-t-amines -5.241371 #> METAB;SKM-GN;alpha-Aminoadipic-acid;metab-t-amines     -7.700365"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/dot-get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object from MotrpacRatTraining6moData — .get","title":"Get object from MotrpacRatTraining6moData — .get","text":"internal use . Users can use get() data() directly attaching MotrpacRatTraining6moData package.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/dot-get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object from MotrpacRatTraining6moData — .get","text":"","code":".get(object_name_as_string)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/dot-get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object from MotrpacRatTraining6moData — .get","text":"object_name_as_string character, name data object MotrpacRatTraining6moData R package","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/dot-get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get object from MotrpacRatTraining6moData — .get","text":"specified object","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/edge_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Return intersection of gene symbols — edge_intersection","title":"Return intersection of gene symbols — edge_intersection","text":"Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/edge_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return intersection of gene symbols — edge_intersection","text":"","code":"edge_intersection(symbol1, symbol2)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/edge_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return intersection of gene symbols — edge_intersection","text":"symbol1 character, comma-separated gene symbols intersection start node symbol2 character, comma-separated gene symbols intersection end node","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/edge_intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return intersection of gene symbols — edge_intersection","text":"string comma-separated gene symbols intersection","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway enrichment network — enrichment_network_vis","title":"Pathway enrichment network — enrichment_network_vis","text":"Plot interactive network pathway enrichments.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway enrichment network — enrichment_network_vis","text":"","code":"enrichment_network_vis(   pw_enrich_res = NULL,   tissues = NULL,   assays = MotrpacRatTraining6moData::ASSAY_ABBREV,   cluster = NULL,   feature_to_gene = MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT,   intersection_id_type = \"ensembl_gene\",   similarity_cutoff = 0.375,   adj_pval_cutoff = 0.1,   title = NULL,   label_nodes = TRUE,   add_group_label_nodes = FALSE,   parent_pathways = MotrpacRatTraining6moData::PATHWAY_PARENTS,   multitissue_pathways_only = FALSE,   include_metab_singletons = TRUE,   similarity_scores_file = NULL,   out_html = \"/dev/null\",   overwrite_html = TRUE,   return_html = FALSE,   return_graph_for_cytoscape = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway enrichment network — enrichment_network_vis","text":"pw_enrich_res optional data frame enrichment results. May subset MotrpacRatTraining6moData::GRAPH_PW_ENRICH data frame returned cluster_pathway_enrichment(). Columns must include \"adj_p_value\", \"ome\", \"tissue\", \"intersection\", \"computed_p_value\", \"term_name\", \"term_id\". specified, tissues cluster must specified. NULL default. tissues character vector tissue abbreviations, least one MotrpacRatTraining6moData::TISSUE_ABBREV. Used subset MotrpacRatTraining6moData::GRAPH_PW_ENRICH. Must specified pw_enrich_res provided. NULL default. assays optional character vector assay abbreviations, least one MotrpacRatTraining6moData::ASSAY_ABBREV. Used subset MotrpacRatTraining6moData::GRAPH_PW_ENRICH. assays default. cluster character, graphical cluster interest. Used subset MotrpacRatTraining6moData::GRAPH_PW_ENRICH. Must specified pw_enrich_res provided. e.g., \"8w_F1_M1\" features -regulated (1) females (F) -regulated males (M1) 8 weeks training (8w), \"1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1\" features -regulated males time points (1w_F?_M1, 2w_F?_M1, 4w_F?_M1, 8w_F?_M1) -regulated females 8 weeks training . See MotrpacRatTraining6moData::GRAPH_PW_ENRICH$graphical_cluster possible options. See vignette detailed description interpret construct strings. NULL default. feature_to_gene data frame, map intersection_id_type gene symbols. Columns must include \"gene_symbol\" \"ensembl_gene\" intersection_id_type == \"ensembl_gene\". MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT default. intersection_id_type character, type gene identifier used define pw_enrich_res$intersection, either \"ensembl_gene\" \"gene_symbol\". \"ensembl_gene\" default. similarity_cutoff numeric, edges drawn pairs pathways similarity metric value. Increase value make sparser network; decrease make denser network. 0.375 default. adj_pval_cutoff numeric, pathway enrichments considered network corresponding adjusted p-value (pw_enrich_res$adj_p_value) less value. 0.1 (10% FDR) default. title character, plot title. NULL default. label_nodes boolean, whether label groups . TRUE default. label_nodes = FALSE, add_group_label_nodes ignored. add_group_label_nodes boolean, whether label groups nodes. FALSE, use standard legend instead. parent_pathways named list, map KEGG REAC pathway term ID parent pathway. Used create labels clusters pathway enrichments. List names must correspond values pw_enrich_res$term_id. MotrpacRatTraining6moData::PATHWAY_PARENTS default. NULL, pathway names used create cluster labels, quite meaningless pathway names unique. case, recommended set label_nodes FALSE. multitissue_pathways_only boolean. TRUE, include pathways network significantly enriched one tissue pw_enrich_res. include_metab_singletons boolean. TRUE, include pathways enriched metabolites (ome METAB) singleton nodes similarity_scores_file character NULL, path save pairwise pathway similarity scores RDS file. file exists, pairwise similarity scores loaded file instead recalculated. NULL default. out_html character, output file HTML. \"/dev/null\" default. overwrite_html boolean, whether overwrite out_html already exists. TRUE default. out_html exists overwrite_html=FALSE, path out_html returned. return_html boolean, whether return path out_html. FALSE, return visNetwork object instead. FALSE default. return_graph_for_cytoscape boolean. TRUE, return igraph graph object can exported Cytoscape. verbose boolean, whether print verbose output","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway enrichment network — enrichment_network_vis","text":"return_graph_for_cytoscape=FALSE return_html=FALSE, return visNetwork graph. return_graph_for_cytoscape=TRUE, return igraph object. return_html=TRUE, return path HTML file interactive visNetwork saved.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pathway enrichment network — enrichment_network_vis","text":"Inspired EnrichmentMap Cytoscape App. node significantly enriched pathway; edges connect nodes high overlap sets genes underlying pathway enrichment. pathways significant enrichments multiple assays, genes combined across assays calculate similarity score. Node size proportional number datasets (tissue assay combinations) significant enrichment; edge weight scaled similarity score. Presenting pathway enrichments way allows groups highly similar pathways easily summarized higher level. Nodes graph colored cluster nodes belong , determined igraph::cluster_louvain(). label_nodes = TRUE, node labels indicate cluster number, summary term cluster, number nodes cluster summary term derived, e.g., \"3: Fatty acid metabolism (4/15)\". summary term defined common pathway parent pathway name. example, \"3: Fatty acid metabolism (4/15)\" label indicates pathway parent pathway name 4 15 nodes cluster 3 \"Fatty acid metabolism\".","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/enrichment_network_vis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway enrichment network — enrichment_network_vis","text":"","code":"# Example 1: Plot an interactive network of pathway enrichments from the HEART:8w_F1_M1 node, # i.e., features that are up-regulated in both males and females after 8 weeks of training enrich_res = MotrpacRatTraining6moData::GRAPH_PW_ENRICH enrich_res = enrich_res[enrich_res$cluster == \"HEART:8w_F1_M1\",] enrichment_network_vis(enrich_res, add_group_label_nodes = TRUE)  #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 1.774s #>   {\"x\":{\"nodes\":{\"id\":[\"KEGG:01200\",\"KEGG:00020\",\"KEGG:00640\",\"KEGG:01212\",\"KEGG:00280\",\"KEGG:00071\",\"KEGG:01210\",\"KEGG:04146\",\"KEGG:00630\",\"KEGG:00620\",\"KEGG:01230\",\"KEGG:00650\",\"KEGG:00410\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-77289\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-163200\",\"KEGG:04217\",\"KEGG:00010\",\"KEGG:00500\",\"KEGG:04141\",\"KEGG:04922\",\"KEGG:04213\",\"KEGG:00330\",\"KEGG:04612\",\"KEGG:05134\",\"REAC:R-RNO-71387\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-70326\",\"KEGG:04066\",\"KEGG:05230\",\"KEGG:00250\",\"KEGG:01040\",\"KEGG:00051\",\"KEGG:00982\",\"KEGG:03320\",\"REAC:R-RNO-9033241\",\"REAC:R-RNO-390918\",\"REAC:R-RNO-9609507\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-140837\",\"REAC:R-RNO-3371453\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-140877\",\"REAC:R-RNO-1483206\",\"REAC:R-RNO-8982491\",\"REAC:R-RNO-8978934\",\"KEGG:05415\",\"KEGG:03013\",\"KEGG:00190\",\"KEGG:04978\",\"KEGG:04137\",\"KEGG:04723\",\"KEGG:00220\",\"KEGG:04216\",\"KEGG:00052\",\"KEGG:05418\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-397014\",\"REAC:R-RNO-917937\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-5576891\",\"KEGG:05414\",\"KEGG:05410\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450531\",\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"value\":[1600,900,900,400,400,400,900,400,400,400,1600,400,400,400,100,100,400,400,100,400,400,400,400,900,900,100,400,100,100,100,100,400,900,900,400,900,400,100,100,100,100,100,100,100,100,100,100,100,100,100,400,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,3200,3200,3200,3200,3200,3200,3200,3200,3200],\"title\":[\"<b>Carbon metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 2.8e-30<br><b>ACETYL:HEART:<\\/b> Acads, Aco2, Acox1, Cs, Dlat,<br> Dld, Echs1, Fh, Hibch, Idh1, Idh2, Idh3a, Mdh1,<br> Mmut, Pdhb, Pkm, Sucla2, Suclg2<br><b>PHOSPHO:HEART:<\\/b> Acox3, Dld, Eno1, Eno3,<br> Glyctk, Got1, Idh2, Mdh1, Pdha1, Pkm, Prps1<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Aldoa, Cs, Dld,<br> Echs1, Eno3, Gapdh, Glud1, Got2, Hk2, Idh1, Idh3a,<br> Idh3b, Idh3g, Mcee, Pdha1, Pfkp, Pgam1, Pgk1, Pkm,<br> Prps1, Tpi1<br><b>TRNSCRPT:HEART:<\\/b> Dld, Eno3, Got1, Got2, Gpt,<br> Hk2, Pkm\",\"<b>Citrate cycle (TCA cycle)<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 3.3e-16<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Dlat, Dld, Fh,<br> Idh1, Idh2, Idh3a, Mdh1, Pdhb, Sucla2, Suclg2<br><b>PHOSPHO:HEART:<\\/b> Dld, Idh2, Mdh1, Pdha1<br><b>PROT:HEART:<\\/b> Cs, Dld, Idh1, Idh3a, Idh3b,<br> Idh3g, Pdha1\",\"<b>Propanoate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 5e-11<br><b>ACETYL:HEART:<\\/b> Acads, Acox1, Dbt, Dld,<br> Echs1, Hibch, Mmut, Sucla2, Suclg2<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Dld, Echs1,<br> Ehhadh, Mcee, Mlycd<br><b>TRNSCRPT:HEART:<\\/b> Bckdhb, Dbt, Dld, Ldhb\",\"<b>Fatty acid metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 5.7e-08<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Hadh, Hadhb, Hsd17b4, Scp2<br><b>PROT:HEART:<\\/b> Acadvl, Acox1, Acox3, Echs1,<br> Ehhadh, Hsd17b4\",\"<b>Valine, leucine and isoleucine degradation<\\/b> <br>(Amino acid metabolism)<br><b>P-val:<\\/b> 1.3e-07<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Dbt, Dld,<br> Echs1, Hadh, Hadhb, Hibadh, Hibch, Mmut<br><b>PROT:HEART:<\\/b> Aox3, Dld, Echs1, Ehhadh,<br> Hsd17b10, Mcee\",\"<b>Fatty acid degradation<\\/b> (Lipid metabolism)<br><b>P-val:<\\/b> 2.6e-08<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Eci1, Hadh, Hadhb<br><b>PROT:HEART:<\\/b> Acadvl, Acox1, Acox3, Adh1,<br> Adh6, Echs1, Eci2, Eci3, Ehhadh\",\"<b>2-Oxocarboxylic acid metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 6.2e-10<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a<br><b>PROT:HEART:<\\/b> Cs, Got2, Idh1, Idh3a, Idh3b,<br> Idh3g<br><b>TRNSCRPT:HEART:<\\/b> Got1, Got2, Gpt\",\"<b>Peroxisome<\\/b> (Transport and catabolism)<br><b>P-val:<\\/b> 9.9e-12<br><b>ACETYL:HEART:<\\/b> Acot8, Acox1, Ech1, Hsd17b4,<br> Idh1, Idh2, Scp2<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Eci2, Eci3,<br> Ehhadh, Ephx2, Gnpat, Gstk1, Hacl1, Hsd17b4, Idh1,<br> Mlycd, Paox, Phyh, Prdx5, Xdh\",\"<b>Glyoxylate and dicarboxylate metabolism<\\/b> <br>(Carbohydrate metabolism)<br><b>P-val:<\\/b> 1.2e-05<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Dld, Mdh1, Mmut<br><b>PHOSPHO:HEART:<\\/b> Dld, Glyctk, Mdh1\",\"<b>Pyruvate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 5.8e-06<br><b>ACETYL:HEART:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pkm<br><b>PHOSPHO:HEART:<\\/b> Dld, Mdh1, Pdha1, Pkm\",\"<b>Biosynthesis of amino acids<\\/b> (NULL)<br><b>P-val:<\\/b> 3.2e-17<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Pkm<br><b>PHOSPHO:HEART:<\\/b> Eno1, Eno3, Got1, Idh2, Pkm,<br> Prps1<br><b>PROT:HEART:<\\/b> Aldoa, Cs, Eno3, Gapdh, Got2,<br> Idh1, Idh3a, Idh3b, Idh3g, Pfkp, Pgam1, Pgk1, Pkm,<br> Prps1, Pycr2, Tpi1<br><b>TRNSCRPT:HEART:<\\/b> Eno3, Got1, Got2, Gpt, Pkm\",\"<b>Butanoate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 4.6e-05<br><b>ACETYL:HEART:<\\/b> Acads, Aldh5a1, Echs1, Hadh<br><b>PROT:HEART:<\\/b> Aldh5a1, Bdh1, Echs1, Ehhadh\",\"<b>beta-Alanine metabolism<\\/b> (Metabolism of <br>other amino acids)<br><b>P-val:<\\/b> 1.5e-05<br><b>ACETYL:HEART:<\\/b> Acads, Acox1, Echs1, Hibch<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Echs1, Ehhadh,<br> Mlycd\",\"<b>The citric acid (TCA) cycle and respiratory <br>electron transport<\\/b> (Metabolism)<br><b>P-val:<\\/b> 8.9e-11<br><b>ACETYL:HEART:<\\/b> Acad9, Aco2, Atp5po, Dlat,<br> Dld, Etfb, Fh, Idh2, Ndufa2, Ndufb3, Ndufs1, Ndufv1,<br> Pdhb, Pdpr, Sucla2, Suclg2<br><b>TRNSCRPT:HEART:<\\/b> Bsg, Coq10a, Dld, Ldhb,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Pyruvate metabolism and Citric Acid (TCA) <br>cycle<\\/b> (The citric acid (TCA) cycle and respiratory <br>electron transport)<br><b>P-val:<\\/b> 1.4e-06<br><b>ACETYL:HEART:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Pdpr, Sucla2, Suclg2\",\"<b>Citric acid cycle (TCA cycle)<\\/b> (Pyruvate <br>metabolism and Citric Acid (TCA) cycle)<br><b>P-val:<\\/b> 2.9e-05<br><b>ACETYL:HEART:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2\",\"<b>Mitochondrial Fatty Acid Beta-Oxidation<\\/b> <br>(Fatty acid metabolism)<br><b>P-val:<\\/b> 2.9e-07<br><b>ACETYL:HEART:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Mmut<br><b>PROT:HEART:<\\/b> Acad11, Acot11, Dbi, Echs1,<br> Mcee\",\"<b>Fatty acid metabolism<\\/b> (Metabolism of <br>lipids)<br><b>P-val:<\\/b> 4.5e-09<br><b>ACETYL:HEART:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Hsd17b4, Mmut<br><b>PROT:HEART:<\\/b> Acad11, Acot11, Dbi, Echs1,<br> Eci2, Eci3, Ehhadh, Hacl1, Hsd17b4, Mcee, Mlycd,<br> Phyh, Prkag2, Ptges2\",\"<b>Branched-chain amino acid catabolism<\\/b> <br>(Metabolism of amino acids and derivatives)<br><b>P-val:<\\/b> 0.00073<br><b>ACETYL:HEART:<\\/b> Dbt, Dld, Hibadh, Hibch\",\"<b>Pyruvate metabolism<\\/b> (Pyruvate metabolism <br>and Citric Acid (TCA) cycle)<br><b>P-val:<\\/b> 2.4e-05<br><b>ACETYL:HEART:<\\/b> Dlat, Dld, Pdhb, Pdpr<br><b>TRNSCRPT:HEART:<\\/b> Bsg, Dld, Ldhb\",\"<b>Glyoxylate metabolism and glycine <br>degradation<\\/b> (Metabolism of amino acids and derivatives)<br><b>P-val:<\\/b> 4.3e-05<br><b>ACETYL:HEART:<\\/b> Dbt, Dlat, Dld, Pdhb<br><b>TRNSCRPT:HEART:<\\/b> Dbt, Dld, Got2\",\"<b>Respiratory electron transport, ATP synthesis <br>by chemiosmotic coupling, and heat production by <br>uncoupling proteins.<\\/b> (The citric acid (TCA) <br>cycle and respiratory electron transport)<br><b>P-val:<\\/b> 4e-05<br><b>ACETYL:HEART:<\\/b> Acad9, Atp5po, Etfb, Ndufa2,<br> Ndufb3, Ndufs1, Ndufv1<br><b>TRNSCRPT:HEART:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Necroptosis<\\/b> (Cell growth and death)<br><b>P-val:<\\/b> 0.00017<br><b>METAB:HEART:<\\/b> unknown (METAB)<br><b>TRNSCRPT:HEART:<\\/b> Ftl1, Jak1, Mapk9, Pygm, Slc25a5, Sqstm1\",\"<b>Glycolysis / Gluconeogenesis<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 3.5e-12<br><b>PHOSPHO:HEART:<\\/b> Dld, Eno1, Eno3, Pdha1, Pkm<br><b>PROT:HEART:<\\/b> Adh1, Adh6, Aldoa, Dld, Eno3,<br> Gapdh, Hk2, Pdha1, Pfkp, Pgam1, Pgk1, Pkm, Tpi1<br><b>TRNSCRPT:HEART:<\\/b> Dld, Eno3, Hk2, Ldhb, Pkm\",\"<b>Starch and sucrose metabolism<\\/b> <br>(Carbohydrate metabolism)<br><b>P-val:<\\/b> 1e-09<br><b>PHOSPHO:HEART:<\\/b> Agl, Gys1, Pygm<br><b>PROT:HEART:<\\/b> Agl, Gyg1, Gys1, Hk2, Pygm<br><b>TRNSCRPT:HEART:<\\/b> Agl, Gaa, Hk2, Pygm, Ugp2\",\"<b>Protein processing in endoplasmic <br>reticulum<\\/b> (Folding, sorting and degradation)<br><b>P-val:<\\/b> 6e-04<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Hspa4l, Hspa8, Hsph1\",\"<b>Glucagon signaling pathway<\\/b> (Endocrine <br>system)<br><b>P-val:<\\/b> 8.1e-06<br><b>PHOSPHO:HEART:<\\/b> Gys1, Pdha1, Pkm, Prkab2,<br> Pygm<br><b>PROT:HEART:<\\/b> Camk2d, Gys1, Pdha1, Pfkp,<br> Pgam1, Phkb, Pkm, Prkag2, Pygm\",\"<b>Longevity regulating pathway - multiple <br>species<\\/b> (Aging)<br><b>P-val:<\\/b> 0.0015<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hspa1a, Hspa1b,<br> Hspa8, Prkab2\",\"<b>Arginine and proline metabolism<\\/b> (Amino <br>acid metabolism)<br><b>P-val:<\\/b> 0.0016<br><b>PHOSPHO:HEART:<\\/b> Ckb, Ckm, Got1\",\"<b>Antigen processing and presentation<\\/b> <br>(Immune system)<br><b>P-val:<\\/b> 0.0024<br><b>PHOSPHO:HEART:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa8\",\"<b>Legionellosis<\\/b> (Infectious disease: <br>bacterial)<br><b>P-val:<\\/b> 0.0053<br><b>PHOSPHO:HEART:<\\/b> Eef1g, Hspa1a, Hspa1b, Hspa8\",\"<b>Metabolism of carbohydrates<\\/b> (Metabolism)<br><b>P-val:<\\/b> 4e-09<br><b>PHOSPHO:HEART:<\\/b> Agl, Dsel, Eno1, Eno3,<br> Glyctk, Got1, Gys1, Mdh1, Prps1<br><b>PROT:HEART:<\\/b> Agl, Aldoa, Eno3, Gapdh, Got2,<br> Gys1, Hk2, Pgam1, Pgk1, Phkb, Prps1, Tpi1\",\"<b>HSF1-dependent transactivation<\\/b> (Cellular <br>response to heat stress)<br><b>P-val:<\\/b> 3.5e-14<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b<br><b>PROT:HEART:<\\/b> Camk2d, Cryab, Hsp90aa1,<br> Hspa1a, Hspa1b, Hspa2, Hspb8<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"<b>Cellular response to heat stress<\\/b> (Cellular <br>responses to stress)<br><b>P-val:<\\/b> 1.8e-10<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Hsph1<br><b>PROT:HEART:<\\/b> Bag3, Camk2d, Cryab, Hikeshi,<br> Hsp90aa1, Hspa1a, Hspa1b, Hspa2, Hspb8, Hsph1,<br> St13<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"<b>Gluconeogenesis<\\/b> (Glucose metabolism)<br><b>P-val:<\\/b> 3.4e-09<br><b>PHOSPHO:HEART:<\\/b> Eno1, Eno3, Got1, Mdh1<br><b>PROT:HEART:<\\/b> Aldoa, Eno3, Gapdh, Got2,<br> Pgam1, Pgk1, Tpi1\",\"<b>HSP90 chaperone cycle for steroid hormone <br>receptors (SHR)<\\/b> (Cellular responses to stress)<br><b>P-val:<\\/b> 1.7e-07<br><b>PHOSPHO:HEART:<\\/b> Hsp90aa1, Hspa1a, Hspa1b<br><b>PROT:HEART:<\\/b> Fkbp5, Hsp90aa1, Hspa1a,<br> Hspa1b, Hspa2, Stip1<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"<b>Glucose metabolism<\\/b> (Metabolism of <br>carbohydrates)<br><b>P-val:<\\/b> 5.6e-06<br><b>PHOSPHO:HEART:<\\/b> Eno1, Eno3, Got1, Mdh1<br><b>PROT:HEART:<\\/b> Aldoa, Eno3, Gapdh, Got2, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>HIF-1 signaling pathway<\\/b> (Signal <br>transduction)<br><b>P-val:<\\/b> 4e-04<br><b>PROT:HEART:<\\/b> Aldoa, Camk2d, Cdkn1b, Eno3,<br> Gapdh, Hk2, Pdha1, Pfkp, Pgk1, Stat3\",\"<b>Central carbon metabolism in cancer<\\/b> <br>(Cancer: overview)<br><b>P-val:<\\/b> 0.00088<br><b>PROT:HEART:<\\/b> Gls, Hk2, Idh1, Pdha1, Pfkp,<br> Pgam1, Pkm\",\"<b>Alanine, aspartate and glutamate <br>metabolism<\\/b> (Amino acid metabolism)<br><b>P-val:<\\/b> 0.00092<br><b>PROT:HEART:<\\/b> Aldh5a1, Gls, Glud1, Got2, Nit2\",\"<b>Biosynthesis of unsaturated fatty acids<\\/b> <br>(Lipid metabolism)<br><b>P-val:<\\/b> 0.0021<br><b>PROT:HEART:<\\/b> Acot2, Acox1, Acox3, Hsd17b4\",\"<b>Fructose and mannose metabolism<\\/b> <br>(Carbohydrate metabolism)<br><b>P-val:<\\/b> 0.0024<br><b>PROT:HEART:<\\/b> Aldoa, Hk2, Mpi, Pfkp, Tpi1\",\"<b>Drug metabolism - cytochrome P450<\\/b> <br>(Xenobiotics biodegradation and metabolism)<br><b>P-val:<\\/b> 0.0045<br><b>PROT:HEART:<\\/b> Adh1, Adh6, Aox3, Gsta4, Gstk1,<br> Gsto1\",\"<b>PPAR signaling pathway<\\/b> (Endocrine system)<br><b>P-val:<\\/b> 0.007<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Cyp27a1, Dbi,<br> Ehhadh, Sorbs1\",\"<b>Peroxisomal protein import<\\/b> (Protein <br>localization)<br><b>P-val:<\\/b> 7.3e-08<br><b>PROT:HEART:<\\/b> Eci2, Eci3, Ehhadh, Gnpat,<br> Gstk1, Hacl1, Hsd17b4, Idh1, Lonp2, Mlycd, Paox, Phyh\",\"<b>Peroxisomal lipid metabolism<\\/b> (Fatty acid <br>metabolism)<br><b>P-val:<\\/b> 1.6e-06<br><b>PROT:HEART:<\\/b> Eci2, Eci3, Ehhadh, Hacl1,<br> Hsd17b4, Mlycd, Phyh\",\"<b>Protein localization<\\/b> (NULL)<br><b>P-val:<\\/b> 1.9e-06<br><b>PROT:HEART:<\\/b> Eci2, Eci3, Ehhadh, Gnpat,<br> Gstk1, Hacl1, Hsd17b4, Hspd1, Idh1, Lonp2, Mlycd,<br> Paox, Phyh\",\"<b>Attenuation phase<\\/b> (HSF1-dependent <br>transactivation)<br><b>P-val:<\\/b> 3.7e-05<br><b>PROT:HEART:<\\/b> Hsp90aa1, Hspa1a, Hspa1b, Hspa2\",\"<b>Glycolysis<\\/b> (Glucose metabolism)<br><b>P-val:<\\/b> 0.00027<br><b>PROT:HEART:<\\/b> Aldoa, Eno3, Gapdh, Hk2, Pgam1,<br> Pgk1, Tpi1\",\"<b>Intrinsic Pathway of Fibrin Clot Formation<\\/b> <br>(Formation of Fibrin Clot (Clotting Cascade))<br><b>P-val:<\\/b> 9e-04<br><b>PROT:HEART:<\\/b> A2m, C1qbp, Kng1\",\"<b>Regulation of HSF1-mediated heat shock <br>response<\\/b> (Cellular response to heat stress)<br><b>P-val:<\\/b> 4.4e-05<br><b>PROT:HEART:<\\/b> Bag3, Hikeshi, Hspa1a, Hspa1b,<br> Hspa2, Hsph1, St13<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"<b>eNOS activation<\\/b> (Metabolism of nitric <br>oxide: NOS3 activation and regulation)<br><b>P-val:<\\/b> 0.0046<br><b>PROT:HEART:<\\/b> Ddah1, Hsp90aa1\",\"<b>Formation of Fibrin Clot (Clotting <br>Cascade)<\\/b> (Hemostasis)<br><b>P-val:<\\/b> 0.005<br><b>PROT:HEART:<\\/b> A2m, C1qbp, Kng1\",\"<b>Glycerophospholipid biosynthesis<\\/b> <br>(Phospholipid metabolism)<br><b>P-val:<\\/b> 0.0054<br><b>PROT:HEART:<\\/b> Gnpat, Gpd1, Gpd1l, Lpin1,<br> Pcyt2, Pnpla2\",\"<b>Glycogen metabolism<\\/b> (Metabolism of <br>carbohydrates)<br><b>P-val:<\\/b> 0.0061<br><b>PROT:HEART:<\\/b> Agl, Gys1, Phkb\",\"<b>Metabolism of cofactors<\\/b> (Metabolism of <br>vitamins and cofactors)<br><b>P-val:<\\/b> 0.0061<br><b>PROT:HEART:<\\/b> Hsp90aa1, Idh1\",\"<b>Diabetic cardiomyopathy<\\/b> (Cardiovascular <br>disease)<br><b>P-val:<\\/b> 9.9e-06<br><b>TRNSCRPT:HEART:<\\/b> Atp5f1a, Cox7a1, Mapk9,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Pdk2, Pln, Ryr2, Slc25a5, Slc2a4\",\"<b>RNA transport<\\/b> (Translation)<br><b>P-val:<\\/b> 0.00039<br><b>TRNSCRPT:HEART:<\\/b> Eif1, Eif3a, Eif3j, Eif4a2,<br> Eif4g2, Eif5, Fxr2, NEWGENE_619861, Nmd3, Pabpc4,<br> Trnt1\",\"<b>Oxidative phosphorylation<\\/b> (Energy <br>metabolism)<br><b>P-val:<\\/b> 0.00035<br><b>TRNSCRPT:HEART:<\\/b> Atp5f1a, Atp6v1g2, Cox7a1,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Mineral absorption<\\/b> (Digestive system)<br><b>P-val:<\\/b> 0.00077<br><b>TRNSCRPT:HEART:<\\/b> Atp1a3, Ftl1, Hmox1, Steap2\",\"<b>Mitophagy - animal<\\/b> (Transport and <br>catabolism)<br><b>P-val:<\\/b> 0.00092<br><b>TRNSCRPT:HEART:<\\/b> Atf4, Bnip3, Mapk9, Mfn1,<br> Optn, Sqstm1\",\"<b>Retrograde endocannabinoid signaling<\\/b> <br>(Nervous system)<br><b>P-val:<\\/b> 0.0012<br><b>TRNSCRPT:HEART:<\\/b> Gng5, Mapk9, Mt-nd1,<br> Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Arginine biosynthesis<\\/b> (Amino acid <br>metabolism)<br><b>P-val:<\\/b> 0.0028<br><b>TRNSCRPT:HEART:<\\/b> Got1, Got2, Gpt\",\"<b>Ferroptosis<\\/b> (Cell growth and death)<br><b>P-val:<\\/b> 0.0049<br><b>TRNSCRPT:HEART:<\\/b> Acsl6, Ftl1, Hmox1\",\"<b>Galactose metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 0.0072<br><b>TRNSCRPT:HEART:<\\/b> Gaa, Hk2, Ugp2\",\"<b>Fluid shear stress and atherosclerosis<\\/b> <br>(Cardiovascular disease)<br><b>P-val:<\\/b> 0.0074<br><b>TRNSCRPT:HEART:<\\/b> Ctsl, Gpc1, Hmox1, Kdr,<br> Mapk9, Sqstm1, Vegfa\",\"<b>Respiratory electron transport<\\/b> <br>(Respiratory electron transport, ATP synthesis by <br>chemiosmotic coupling, and heat production by uncoupling <br>proteins.)<br><b>P-val:<\\/b> 9.5e-05<br><b>TRNSCRPT:HEART:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Muscle contraction<\\/b> (NULL)<br><b>P-val:<\\/b> 7.6e-05<br><b>TRNSCRPT:HEART:<\\/b> Atp1a3, Clic2, Fgf13,<br> Kcnip2, Kcnk3, Mybpc3, Pln, Sorbs3, Trim72\",\"<b>Iron uptake and transport<\\/b> (Transport of <br>small molecules)<br><b>P-val:<\\/b> 0.00047<br><b>TRNSCRPT:HEART:<\\/b> Atp6v1g2, Ftl1, Hmox1,<br> Steap2\",\"<b>Complex I biogenesis<\\/b> (Respiratory electron <br>transport)<br><b>P-val:<\\/b> 0.00053<br><b>TRNSCRPT:HEART:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Cardiac conduction<\\/b> (Muscle contraction)<br><b>P-val:<\\/b> 0.00092<br><b>TRNSCRPT:HEART:<\\/b> Atp1a3, Clic2, Fgf13,<br> Kcnip2, Kcnk3, Pln\",\"<b>Dilated cardiomyopathy<\\/b> (Cardiovascular <br>disease)<br><b>P-val:<\\/b> 0.0058<br><b>UBIQ:HEART:<\\/b> Des, Myh7\",\"<b>Hypertrophic cardiomyopathy<\\/b> <br>(Cardiovascular disease)<br><b>P-val:<\\/b> 0.0055<br><b>UBIQ:HEART:<\\/b> Des, Myh7\",\"<b>AUF1 (hnRNP D0) binds and destabilizes <br>mRNA<\\/b> (Regulation of mRNA stability by proteins that <br>bind AU-rich elements)<br><b>P-val:<\\/b> 0.0038<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"<b>Regulation of mRNA stability by proteins that <br>bind AU-rich elements<\\/b> (Metabolism of RNA)<br><b>P-val:<\\/b> 0.0062<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b\",\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"color.highlight.background\":[\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#FB8072\",\"#FDB462\",\"#B3DE69\",\"#FCCDE5\",\"#D9D9D9\",\"#BC80BD\"],\"color.border\":[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#FB8072\",\"#FDB462\",\"#B3DE69\",\"#FCCDE5\",\"#D9D9D9\",\"#BC80BD\"],\"shadow\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true],\"physics\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"borderWidth\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"borderWidthSelected\":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0],\"pathway_subclass\":[\"NULL\",\"Carbohydrate metabolism\",\"Carbohydrate metabolism\",\"NULL\",\"Amino acid metabolism\",\"Lipid metabolism\",\"NULL\",\"Transport and catabolism\",\"Carbohydrate metabolism\",\"Carbohydrate metabolism\",\"NULL\",\"Carbohydrate metabolism\",\"Metabolism of other amino acids\",\"Metabolism\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Fatty acid metabolism\",\"Metabolism of lipids\",\"Metabolism of amino acids and derivatives\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Metabolism of amino acids and derivatives\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Cell growth and death\",\"Carbohydrate metabolism\",\"Carbohydrate metabolism\",\"Folding, sorting and degradation\",\"Endocrine system\",\"Aging\",\"Amino acid metabolism\",\"Immune system\",\"Infectious disease: bacterial\",\"Metabolism\",\"Cellular response to heat stress\",\"Cellular responses to stress\",\"Glucose metabolism\",\"Cellular responses to stress\",\"Metabolism of carbohydrates\",\"Signal transduction\",\"Cancer: overview\",\"Amino acid metabolism\",\"Lipid metabolism\",\"Carbohydrate metabolism\",\"Xenobiotics biodegradation and metabolism\",\"Endocrine system\",\"Protein localization\",\"Fatty acid metabolism\",\"NULL\",\"HSF1-dependent transactivation\",\"Glucose metabolism\",\"Formation of Fibrin Clot (Clotting Cascade)\",\"Cellular response to heat stress\",\"Metabolism of nitric oxide: NOS3 activation and regulation\",\"Hemostasis\",\"Phospholipid metabolism\",\"Metabolism of carbohydrates\",\"Metabolism of vitamins and cofactors\",\"Cardiovascular disease\",\"Translation\",\"Energy metabolism\",\"Digestive system\",\"Transport and catabolism\",\"Nervous system\",\"Amino acid metabolism\",\"Cell growth and death\",\"Carbohydrate metabolism\",\"Cardiovascular disease\",\"Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins.\",\"NULL\",\"Transport of small molecules\",\"Respiratory electron transport\",\"Muscle contraction\",\"Cardiovascular disease\",\"Cardiovascular disease\",\"Regulation of mRNA stability by proteins that bind AU-rich elements\",\"Metabolism of RNA\",null,null,null,null,null,null,null,null,null],\"term_name\":[\"Carbon metabolism\",\"Citrate cycle (TCA cycle)\",\"Propanoate metabolism\",\"Fatty acid metabolism\",\"Valine, leucine and isoleucine degradation\",\"Fatty acid degradation\",\"2-Oxocarboxylic acid metabolism\",\"Peroxisome\",\"Glyoxylate and dicarboxylate metabolism\",\"Pyruvate metabolism\",\"Biosynthesis of amino acids\",\"Butanoate metabolism\",\"beta-Alanine metabolism\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Citric acid cycle (TCA cycle)\",\"Mitochondrial Fatty Acid Beta-Oxidation\",\"Fatty acid metabolism\",\"Branched-chain amino acid catabolism\",\"Pyruvate metabolism\",\"Glyoxylate metabolism and glycine degradation\",\"Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins.\",\"Necroptosis\",\"Glycolysis / Gluconeogenesis\",\"Starch and sucrose metabolism\",\"Protein processing in endoplasmic reticulum\",\"Glucagon signaling pathway\",\"Longevity regulating pathway - multiple species\",\"Arginine and proline metabolism\",\"Antigen processing and presentation\",\"Legionellosis\",\"Metabolism of carbohydrates\",\"HSF1-dependent transactivation\",\"Cellular response to heat stress\",\"Gluconeogenesis\",\"HSP90 chaperone cycle for steroid hormone receptors (SHR)\",\"Glucose metabolism\",\"HIF-1 signaling pathway\",\"Central carbon metabolism in cancer\",\"Alanine, aspartate and glutamate metabolism\",\"Biosynthesis of unsaturated fatty acids\",\"Fructose and mannose metabolism\",\"Drug metabolism - cytochrome P450\",\"PPAR signaling pathway\",\"Peroxisomal protein import\",\"Peroxisomal lipid metabolism\",\"Protein localization\",\"Attenuation phase\",\"Glycolysis\",\"Intrinsic Pathway of Fibrin Clot Formation\",\"Regulation of HSF1-mediated heat shock response\",\"eNOS activation\",\"Formation of Fibrin Clot (Clotting Cascade)\",\"Glycerophospholipid biosynthesis\",\"Glycogen metabolism\",\"Metabolism of cofactors\",\"Diabetic cardiomyopathy\",\"RNA transport\",\"Oxidative phosphorylation\",\"Mineral absorption\",\"Mitophagy - animal\",\"Retrograde endocannabinoid signaling\",\"Arginine biosynthesis\",\"Ferroptosis\",\"Galactose metabolism\",\"Fluid shear stress and atherosclerosis\",\"Respiratory electron transport\",\"Muscle contraction\",\"Iron uptake and transport\",\"Complex I biogenesis\",\"Cardiac conduction\",\"Dilated cardiomyopathy\",\"Hypertrophic cardiomyopathy\",\"AUF1 (hnRNP D0) binds and destabilizes mRNA\",\"Regulation of mRNA stability by proteins that bind AU-rich elements\",null,null,null,null,null,null,null,null,null],\"group\":[\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"1: Carbohydrate metabolism (4/16)\",\"3: Fatty acid metabolism (4/15)\",\"2: Carbohydrate metabolism (3/7)\",\"2: Carbohydrate metabolism (3/7)\",\"1: Carbohydrate metabolism (4/16)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"2: Carbohydrate metabolism (3/7)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"2: Carbohydrate metabolism (3/7)\",\"2: Carbohydrate metabolism (3/7)\",\"4: Respiratory electron transport (2/7)\",\"0: Amino acid metabolism (2/8)\",\"1: Carbohydrate metabolism (4/16)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"0: Amino acid metabolism (2/8)\",\"6: Cellular response to heat stress (3/13)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"1: Carbohydrate metabolism (4/16)\",\"1: Carbohydrate metabolism (4/16)\",\"0: Amino acid metabolism (2/8)\",\"3: Fatty acid metabolism (4/15)\",\"1: Carbohydrate metabolism (4/16)\",\"0: Amino acid metabolism (2/8)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"3: Fatty acid metabolism (4/15)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"6: Cellular response to heat stress (3/13)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"0: Amino acid metabolism (2/8)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"4: Respiratory electron transport (2/7)\",\"0: Amino acid metabolism (2/8)\",\"4: Respiratory electron transport (2/7)\",\"13: Cell growth and death (1/3)\",\"0: Amino acid metabolism (2/8)\",\"4: Respiratory electron transport (2/7)\",\"1: Carbohydrate metabolism (4/16)\",\"13: Cell growth and death (1/3)\",\"1: Carbohydrate metabolism (4/16)\",\"0: Amino acid metabolism (2/8)\",\"4: Respiratory electron transport (2/7)\",\"16: Muscle contraction (2/2)\",\"13: Cell growth and death (1/3)\",\"4: Respiratory electron transport (2/7)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\",\"17: Cardiovascular disease (2/2)\",\"6: Cellular response to heat stress (3/13)\",\"6: Cellular response to heat stress (3/13)\",\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"group_number\":[\"1\",\"2\",\"3\",\"3\",\"3\",\"3\",\"1\",\"3\",\"2\",\"2\",\"1\",\"3\",\"3\",\"4\",\"2\",\"2\",\"3\",\"3\",\"3\",\"2\",\"2\",\"4\",\"0\",\"1\",\"1\",\"6\",\"1\",\"6\",\"0\",\"6\",\"6\",\"1\",\"6\",\"6\",\"1\",\"6\",\"1\",\"1\",\"1\",\"0\",\"3\",\"1\",\"0\",\"3\",\"3\",\"3\",\"3\",\"6\",\"1\",\"10\",\"6\",\"6\",\"10\",\"0\",\"1\",\"6\",\"4\",\"0\",\"4\",\"13\",\"0\",\"4\",\"1\",\"13\",\"1\",\"0\",\"4\",\"16\",\"13\",\"4\",\"16\",\"17\",\"17\",\"6\",\"6\",null,null,null,null,null,null,null,null,null],\"color.background\":[\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#8DD3C7\",\"#BEBADA\",\"#FFFFB3\",\"#FFFFB3\",\"#8DD3C7\",\"#BEBADA\",\"#BEBADA\",\"#FB8072\",\"#FFFFB3\",\"#FFFFB3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#FFFFB3\",\"#FFFFB3\",\"#FB8072\",\"#80B1D3\",\"#8DD3C7\",\"#8DD3C7\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#80B1D3\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#8DD3C7\",\"#8DD3C7\",\"#8DD3C7\",\"#80B1D3\",\"#BEBADA\",\"#8DD3C7\",\"#80B1D3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#FDB462\",\"#8DD3C7\",\"#B3DE69\",\"#FDB462\",\"#FDB462\",\"#B3DE69\",\"#80B1D3\",\"#8DD3C7\",\"#FDB462\",\"#FB8072\",\"#80B1D3\",\"#FB8072\",\"#FCCDE5\",\"#80B1D3\",\"#FB8072\",\"#8DD3C7\",\"#FCCDE5\",\"#8DD3C7\",\"#80B1D3\",\"#FB8072\",\"#D9D9D9\",\"#FCCDE5\",\"#FB8072\",\"#D9D9D9\",\"#BC80BD\",\"#BC80BD\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#FB8072\",\"#FDB462\",\"#B3DE69\",\"#FCCDE5\",\"#D9D9D9\",\"#BC80BD\"],\"color.highlight.border\":[\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#8DD3C7\",\"#BEBADA\",\"#FFFFB3\",\"#FFFFB3\",\"#8DD3C7\",\"#BEBADA\",\"#BEBADA\",\"#FB8072\",\"#FFFFB3\",\"#FFFFB3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#FFFFB3\",\"#FFFFB3\",\"#FB8072\",\"#80B1D3\",\"#8DD3C7\",\"#8DD3C7\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#80B1D3\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FDB462\",\"#8DD3C7\",\"#8DD3C7\",\"#8DD3C7\",\"#80B1D3\",\"#BEBADA\",\"#8DD3C7\",\"#80B1D3\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#BEBADA\",\"#FDB462\",\"#8DD3C7\",\"#B3DE69\",\"#FDB462\",\"#FDB462\",\"#B3DE69\",\"#80B1D3\",\"#8DD3C7\",\"#FDB462\",\"#FB8072\",\"#80B1D3\",\"#FB8072\",\"#FCCDE5\",\"#80B1D3\",\"#FB8072\",\"#8DD3C7\",\"#FCCDE5\",\"#8DD3C7\",\"#80B1D3\",\"#FB8072\",\"#D9D9D9\",\"#FCCDE5\",\"#FB8072\",\"#D9D9D9\",\"#BC80BD\",\"#BC80BD\",\"#FDB462\",\"#FDB462\",\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#FB8072\",\"#FDB462\",\"#B3DE69\",\"#FCCDE5\",\"#D9D9D9\",\"#BC80BD\"],\"shape\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"label\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"labelHighlightBold\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,false,false,false,false,false,false,false,false,false],\"x\":[-0.467781423723983,-0.3672863720480133,-0.2709543419926411,-0.04151192491661582,-0.1394073326807708,-0.1416133216935859,-0.5294926531721764,0.1559049240552735,-0.3297315932238443,-0.2438261754990534,-0.5928054463964364,-0.2185515039377595,-0.1470193692302264,-0.2430689743942172,-0.2665570606322938,-0.37727188595234,-0.01188467883091981,0.2014989223416339,-0.1307871110969749,-0.1340622065458678,-0.2061231530664012,-0.2131290758946209,0.6153906714062609,-0.7518238352221958,-0.6434880506403828,0.5337024579120526,-0.8104190584360578,0.63519505931141,0.7098301363849233,0.5836219422440607,0.6709799215336971,-0.6671614169134206,0.5147099838539442,0.4895136052993181,-0.598650788557205,0.4458173712256766,-0.6829529685604675,-0.7461032988374574,-0.6735285104532939,0.4961406284762755,0.1471560569414205,-0.7794418165182482,-0.1300396528363245,0.07895841453432428,0.2447906700642455,0.3199155306326835,0.3274540062411342,0.4941088806654754,-0.6952613270285246,0.9794652834740187,0.584925576794074,0.346551583389179,1,0.4516341259917029,-0.6904989820509482,0.3583706307644798,-0.1606147888617006,-1,-0.1682718460265993,-0.7066916124718065,0.9375085396087339,-0.2724830374463947,-0.594587033380253,-0.7431177413617405,-0.5573231825027428,0.103427942924599,-0.1297108177905073,0.9702956533990694,-0.6200480787620116,-0.2607206721208439,0.8463957106364355,0.708768169024248,0.7877974937170558,0.5869940889473229,0.6376601813918905,-0.9892225200391324,-0.5321240613692952,-0.05199181778031059,-0.3204838303328685,0.7735140455848506,0.9998368782243006,-0.841161080670378,0.7249095178165199,0.6428918380940234],\"y\":[0.150160448652928,-0.08123420206966236,0.3855272542293187,0.615900852697866,0.5772260825305766,0.6939227943897031,-0.01767379527975865,0.6530363727780306,0.09809691231008588,-0.003526772800446443,0.1566542531775372,0.6563175270735977,0.4764498495402116,-0.3426243820127494,-0.09553890872406101,-0.1582750603144444,0.8390287916327521,0.8713406158846633,0.3245781246457611,-0.1362288637533405,0.0755930064202941,-0.4722453101366586,0.4585699470370972,0.2239235155606341,0.7479507735089612,-0.3904597953523427,0.5463143979585863,-0.3162214854310028,0.006964781952175647,-0.5041619073761574,-0.4577142133653443,0.2807982239441811,-0.5272773176699485,-0.5857867714149334,0.2375907762182965,-0.6260807530876331,0.1730641169110079,0.04114202441603476,0.3922140167758839,0.2561356269175179,0.533035605133245,0.1391522981248725,-1,0.4190266865182795,0.7723264658759856,0.8161457549791415,0.7231753598426045,-0.6788393941205496,0.1164336013672609,-0.08961244459789841,-0.7558295792588916,-0.5812300786309094,-0.2066990742795347,0.02878920231704973,0.5570398352465245,-0.6794300050480855,-0.6794602402983896,-0.3400740086920093,-0.5697768238012707,-0.7814960564173581,0.4618918847573954,-0.5360014333294143,0.08623800010409544,-0.6594465675416167,0.871573627289294,-0.974568262093341,-0.5172668753736827,0.2479565943701703,-0.7304794500317586,-0.6102864934969624,0.2523372097696439,0.6959269815768607,0.6047491392252515,-0.6302589682543975,-0.6129732155734496,0.2174016544104223,-0.2789502917175046,1,-0.801252669369899,-0.4324535456979307,0.02392814297944668,-0.5557073512067541,0.2328390097789217,0.7940996739214201]},\"edges\":{\"from\":[\"KEGG:01200\",\"KEGG:01230\",\"KEGG:01200\",\"KEGG:00010\",\"KEGG:01200\",\"KEGG:04066\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-71387\",\"KEGG:00500\",\"KEGG:00280\",\"KEGG:01212\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:01200\",\"KEGG:01210\",\"KEGG:01230\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-71387\",\"KEGG:00640\",\"KEGG:01212\",\"KEGG:00071\",\"KEGG:00280\",\"KEGG:00640\",\"KEGG:00650\",\"KEGG:01200\",\"KEGG:01212\",\"KEGG:04146\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:01200\",\"KEGG:00071\",\"KEGG:00280\",\"KEGG:01212\",\"KEGG:01212\",\"KEGG:04146\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:01200\",\"KEGG:01210\",\"KEGG:00410\",\"KEGG:01040\",\"KEGG:00010\",\"KEGG:01200\",\"REAC:R-RNO-70326\",\"KEGG:04141\",\"KEGG:04978\",\"KEGG:04141\",\"KEGG:04213\",\"KEGG:00190\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:04141\",\"KEGG:04213\",\"KEGG:04612\",\"KEGG:00010\",\"KEGG:01200\",\"KEGG:04922\",\"KEGG:05414\",\"REAC:R-RNO-140837\",\"KEGG:00020\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"KEGG:04612\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371571\",\"KEGG:04141\",\"KEGG:04612\",\"REAC:R-RNO-3371571\",\"KEGG:04612\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371571\",\"KEGG:04141\",\"KEGG:04612\",\"KEGG:00020\",\"KEGG:00620\",\"KEGG:01200\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-71406\",\"KEGG:04146\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-9033241\",\"KEGG:04612\",\"KEGG:05134\",\"REAC:R-RNO-3371453\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371571\",\"KEGG:04612\",\"KEGG:05134\",\"REAC:R-RNO-3371453\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-397014\",\"KEGG:00190\",\"KEGG:04723\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:00190\",\"KEGG:04723\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-611105\",\"KEGG:00010\",\"KEGG:00051\",\"KEGG:01200\",\"KEGG:01230\",\"KEGG:04066\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-71387\",\"KEGG:00010\",\"KEGG:01200\",\"KEGG:01230\",\"REAC:R-RNO-71387\",\"KEGG:00620\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"KEGG:00010\",\"KEGG:01200\",\"KEGG:01230\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-71387\",\"KEGG:00280\",\"KEGG:00640\",\"KEGG:00010\",\"KEGG:01200\",\"KEGG:01230\",\"KEGG:00020\",\"KEGG:01200\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"KEGG:00020\",\"KEGG:00620\",\"KEGG:01200\",\"REAC:R-RNO-1428517\",\"KEGG:00280\",\"REAC:R-RNO-77289\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371571\",\"KEGG:00500\",\"KEGG:04922\",\"REAC:R-RNO-71387\",\"KEGG:04146\",\"REAC:R-RNO-8978868\",\"KEGG:04216\",\"KEGG:04978\",\"KEGG:04146\",\"REAC:R-RNO-390918\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-9033241\",\"KEGG:00020\",\"KEGG:00010\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-77289\",\"REAC:R-RNO-140837\",\"KEGG:04216\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-5576891\",\"KEGG:05414\"],\"to\":[\"KEGG:00010\",\"KEGG:00010\",\"KEGG:00020\",\"KEGG:00051\",\"KEGG:00051\",\"KEGG:00051\",\"KEGG:00051\",\"KEGG:00051\",\"KEGG:00052\",\"KEGG:00071\",\"KEGG:00071\",\"KEGG:00190\",\"KEGG:00190\",\"KEGG:00190\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00280\",\"KEGG:00280\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00410\",\"KEGG:00620\",\"KEGG:00620\",\"KEGG:00630\",\"KEGG:00630\",\"KEGG:00640\",\"KEGG:00650\",\"KEGG:00650\",\"KEGG:00650\",\"KEGG:01040\",\"KEGG:01040\",\"KEGG:01210\",\"KEGG:01210\",\"KEGG:01230\",\"KEGG:01230\",\"KEGG:03320\",\"KEGG:03320\",\"KEGG:04066\",\"KEGG:04066\",\"KEGG:04066\",\"KEGG:04213\",\"KEGG:04216\",\"KEGG:04612\",\"KEGG:04612\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:05134\",\"KEGG:05134\",\"KEGG:05134\",\"KEGG:05230\",\"KEGG:05230\",\"KEGG:05230\",\"KEGG:05410\",\"REAC:R-RNO-140877\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-203615\",\"REAC:R-RNO-3371453\",\"REAC:R-RNO-3371453\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-390918\",\"REAC:R-RNO-390918\",\"REAC:R-RNO-390918\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450408\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-450531\",\"REAC:R-RNO-5576891\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70263\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-70326\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-71387\",\"REAC:R-RNO-71387\",\"REAC:R-RNO-71387\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-77289\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-8978934\",\"REAC:R-RNO-8978934\",\"REAC:R-RNO-8978934\",\"REAC:R-RNO-8978934\",\"REAC:R-RNO-8978934\",\"REAC:R-RNO-8982491\",\"REAC:R-RNO-8982491\",\"REAC:R-RNO-8982491\",\"REAC:R-RNO-9033241\",\"REAC:R-RNO-9033241\",\"REAC:R-RNO-917937\",\"REAC:R-RNO-917937\",\"REAC:R-RNO-9609507\",\"REAC:R-RNO-9609507\",\"REAC:R-RNO-9609507\",\"REAC:R-RNO-9609507\",\"2: Carbohydrate metabolism (3/7)\",\"1: Carbohydrate metabolism (4/16)\",\"6: Cellular response to heat stress (3/13)\",\"3: Fatty acid metabolism (4/15)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"4: Respiratory electron transport (2/7)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"value\":[28.92857142857143,24.72527472527473,34.86842105263158,26.66666666666667,22.56410256410257,21.25,20.35714285714286,18.75,35.71428571428572,20,36.52597402597403,35.55555555555555,22.02380952380952,25.49019607843137,26.97368421052632,32.5,28.57142857142857,20.83333333333333,20.51282051282051,19.29824561403509,23.80952380952381,21.5311004784689,26.78571428571428,20.16806722689076,36.66666666666667,20,20.98214285714286,27.47252747252747,18.83116883116883,30.80357142857143,29.60526315789473,22.54901960784314,28.94736842105263,22.48062015503876,23.80952380952381,22.91666666666666,24.35897435897436,25,22.5,27.22222222222222,31.57894736842105,36.63003663003663,36.90476190476191,20,18.75,27.79411764705883,21.76829268292683,19.85294117647059,29.46428571428572,31.25,37.5,26.66666666666667,32.38636363636363,33.54166666666667,24.30555555555555,28.125,23.80952380952381,26.66666666666667,29.16666666666666,25.66964285714286,25.27472527472527,21.97802197802198,50,50,19.58333333333333,39,22.91666666666666,20.51282051282051,25,22.22222222222222,39.58333333333334,23.33333333333333,22.91666666666666,26.78571428571428,30.35714285714286,23.80952380952381,20.51282051282051,41.66666666666666,25,42.85714285714286,35.41666666666667,40.625,19.31818181818182,22.22222222222222,19.41176470588236,23.33333333333333,22.56410256410257,24.375,19.64285714285714,21.81818181818182,32.89473684210527,33.33333333333333,38.63636363636363,18.75,18.75,32.14285714285714,32.14285714285714,29.16666666666667,35,31.25,18.75,18.75,32.14285714285714,32.14285714285714,29.16666666666667,35,31.25,50,41.66666666666666,36.42857142857142,38.09523809523809,31.42857142857143,32,37.5,41.66666666666666,43.75,35.71428571428572,31,35.71428571428572,46.42857142857143,33.54166666666667,22.5,26.36217948717949,25.27173913043478,25.24038461538461,36.45833333333334,41.66666666666666,36.11111111111111,25.63131313131313,29.13752913752914,30.23715415019763,40.27777777777778,20,31,25.75757575757576,27.77777777777778,29.96794871794872,28.125,47.91666666666666,41.66666666666666,32.14285714285714,23.4375,22.61904761904762,25.61369509043928,22.50957854406131,35,28.94736842105263,31,41.66666666666666,34.72222222222222,22.61904761904762,27.35042735042735,34,19.07894736842105,38.88888888888889,29.16666666666666,22.91666666666666,20.51282051282051,25,22.22222222222222,22.91666666666666,21.21212121212121,29.16666666666667,35.22727272727273,20.15810276679842,31.25,36.66666666666667,32.73809523809524,37.5,18.75,47.91666666666666,50,50,50,50,50,50,50,50,50],\"title\":[\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Dld, Pkm, Eno1, Eno3, Pdha1,<br> Aldoa, Gapdh, Hk2, Pfkp, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.49<br><b>Intersection:<\\/b> Pkm, Eno1, Eno3, Aldoa,<br> Gapdh, Pfkp, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Aco2, Cs, Dlat, Dld, Fh,<br> Idh1, Idh2, Idh3a, Mdh1, Pdhb, Sucla2, Suclg2, Pdha1,<br> Idh3b, Idh3g\",\"<b>Similarity score:<\\/b> 0.53<br><b>Intersection:<\\/b> Aldoa, Hk2, Pfkp, Tpi1\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Aldoa, Hk2, Pfkp, Tpi1\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Aldoa, Hk2, Pfkp\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Aldoa, Hk2, Tpi1\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Aldoa, Hk2, Tpi1\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Hk2, Gaa, Ugp2\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Acaa2, Acads, Echs1, Hadh,<br> Hadhb, Ehhadh\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Hadh, Hadhb, Acox3, Ehhadh\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Atp5f1a, Cox7a1, Mt-nd1,<br> Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.54<br><b>Intersection:<\\/b> Got1, Got2, Gpt\",\"<b>Similarity score:<\\/b> 0.65<br><b>Intersection:<\\/b> Got2, Got1, Gpt\",\"<b>Similarity score:<\\/b> 0.57<br><b>Intersection:<\\/b> Got1, Got2, Gpt\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Got1, Got2\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Got1, Got2\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Got1, Got2\",\"<b>Similarity score:<\\/b> 0.48<br><b>Intersection:<\\/b> Acads, Dbt, Dld, Echs1,<br> Hibch, Mmut, Ehhadh, Mcee\",\"<b>Similarity score:<\\/b> 0.43<br><b>Intersection:<\\/b> Acaa2, Acads, Echs1, Hadh,<br> Hadhb, Ehhadh\",\"<b>Similarity score:<\\/b> 0.54<br><b>Intersection:<\\/b> Acads, Acox1, Echs1, Acox3,<br> Ehhadh\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Acads, Echs1, Hibch, Ehhadh\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Acads, Acox1, Echs1, Hibch,<br> Acox3, Ehhadh, Mlycd\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Acads, Echs1, Ehhadh\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Acads, Acox1, Echs1, Hibch,<br> Acox3\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Acads, Acox1, Echs1, Acox3,<br> Ehhadh\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Acox1, Acox3, Ehhadh, Mlycd\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pdha1\",\"<b>Similarity score:<\\/b> 0.59<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pkm, Pdha1\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Aco2, Cs, Dld, Mdh1\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Aco2, Cs, Dld, Mdh1, Mmut,<br> Glyctk\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Acads, Acox1, Dld, Echs1,<br> Hibch, Mmut, Sucla2, Suclg2, Acox3, Mcee\",\"<b>Similarity score:<\\/b> 0.48<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh\",\"<b>Similarity score:<\\/b> 0.49<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Acox1, Hsd17b4, Acox3\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Acox1, Hsd17b4, Acox3\",\"<b>Similarity score:<\\/b> 0.54<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Idh3b, Idh3g\",\"<b>Similarity score:<\\/b> 0.63<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Got1, Got2, Idh3b, Idh3g, Gpt\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Pkm, Eno1, Eno3, Got1, Prps1, Aldoa, Gapdh, Got2,<br> Idh3b, Idh3g, Pfkp, Pgam1, Pgk1, Tpi1, Gpt\",\"<b>Similarity score:<\\/b> 0.74<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Got2, Idh3b, Idh3g, Got1, Gpt\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Acox1, Acox3, Ehhadh\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Acox1, Acox3\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Eno3, Pdha1, Aldoa, Gapdh,<br> Hk2, Pfkp, Pgk1\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Eno3, Pdha1, Aldoa, Gapdh,<br> Hk2, Pfkp, Pgk1\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2, Pgk1\",\"<b>Similarity score:<\\/b> 0.59<br><b>Intersection:<\\/b> Cryab, Hspa1a, Hspa1b, Hspa8\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Ftl1, Hmox1\",\"<b>Similarity score:<\\/b> 0.75<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa8\",\"<b>Similarity score:<\\/b> 0.53<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hspa8\",\"<b>Similarity score:<\\/b> 0.65<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.67<br><b>Intersection:<\\/b> Mapk9, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.49<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.48<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hspa8\",\"<b>Similarity score:<\\/b> 0.53<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hspa8\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hspa8\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Pdha1, Pkm, Hk2, Pfkp, Pgam1\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Idh1, Pkm, Pdha1, Hk2, Pfkp,<br> Pgam1\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Pdha1, Pkm, Pfkp, Pgam1\",\"<b>Similarity score:<\\/b> 1<br><b>Intersection:<\\/b> Des, Myh7\",\"<b>Similarity score:<\\/b> 1<br><b>Intersection:<\\/b> A2m, C1qbp, Kng1\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2\",\"<b>Similarity score:<\\/b> 0.78<br><b>Intersection:<\\/b> Acad9, Atp5po, Etfb, Ndufa2,<br> Ndufb3, Ndufs1, Ndufv1, Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.79<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hsph1, Bag3,<br> Hikeshi, Hspa2, St13\",\"<b>Similarity score:<\\/b> 0.47<br><b>Intersection:<\\/b> Hspa1a, Hspa1b, Hspa2\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.54<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.61<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.48<br><b>Intersection:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Hsph1\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Camk2d, Hspa2, Hspb8\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.86<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.81<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.47<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Got2\",\"<b>Similarity score:<\\/b> 0.49<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Dbt, Dld\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.66<br><b>Intersection:<\\/b> Hsd17b4, Eci2, Eci3, Ehhadh,<br> Hacl1, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.67<br><b>Intersection:<\\/b> Hsd17b4, Eci2, Eci3, Ehhadh,<br> Hacl1, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.77<br><b>Intersection:<\\/b> Eci2, Eci3, Ehhadh, Hacl1,<br> Hsd17b4, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 1<br><b>Intersection:<\\/b> Hspa1a, Hspa1b\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Atp1a3, Clic2, Fgf13, Kcnip2,<br> Kcnk3, Pln\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.76<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.63<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.75<br><b>Intersection:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.88<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.93<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4\",\"<b>Similarity score:<\\/b> 0.67<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Aldoa, Hk2, Tpi1\",\"<b>Similarity score:<\\/b> 0.53<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Pgam1,<br> Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Aldoa, Eno3, Gapdh, Hk2, Pgk1\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Pgam1,<br> Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.72<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Eno1, Eno3, Aldoa, Gapdh,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Mdh1, Eno1, Eno3, Got1,<br> Aldoa, Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.6<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Aldoa,<br> Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.81<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Mdh1,<br> Aldoa, Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Pdpr, Bsg,<br> Ldhb\",\"<b>Similarity score:<\\/b> 0.52<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Pdpr\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Eno1, Eno3, Aldoa, Gapdh,<br> Hk2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.6<br><b>Intersection:<\\/b> Mdh1, Eno1, Eno3, Got1,<br> Aldoa, Gapdh, Got2, Hk2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Aldoa,<br> Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.96<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Mdh1,<br> Aldoa, Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Mdh1,<br> Aldoa, Gapdh, Got2, Hk2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Dbt, Dld, Hibadh, Hibch\",\"<b>Similarity score:<\\/b> 0.47<br><b>Intersection:<\\/b> Dbt, Dld, Hibch\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Eno1, Eno3, Aldoa, Gapdh,<br> Hk2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Mdh1, Eno1, Eno3, Glyctk,<br> Got1, Prps1, Aldoa, Gapdh, Got2, Hk2, Pgam1, Pgk1,<br> Tpi1\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Eno1, Eno3, Got1, Prps1,<br> Aldoa, Gapdh, Got2, Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2\",\"<b>Similarity score:<\\/b> 0.83<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2\",\"<b>Similarity score:<\\/b> 0.69<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2\",\"<b>Similarity score:<\\/b> 0.45<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Pdhb\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2\",\"<b>Similarity score:<\\/b> 0.68<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Pdpr, Sucla2, Suclg2\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Echs1, Hadh, Hadhb, Mmut,<br> Mcee\",\"<b>Similarity score:<\\/b> 0.78<br><b>Intersection:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Mmut, Acad11, Acot11, Dbi, Mcee\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Hsp90aa1\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Agl, Gys1\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Gys1, Phkb\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Agl, Gys1, Phkb\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Hsd17b4, Idh1, Eci2, Eci3,<br> Ehhadh, Gnpat, Gstk1, Hacl1, Mlycd, Paox, Phyh\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Hsd17b4, Eci2, Eci3, Ehhadh,<br> Hacl1, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.62<br><b>Intersection:<\\/b> Ftl1, Hmox1\",\"<b>Similarity score:<\\/b> 0.73<br><b>Intersection:<\\/b> Ftl1, Hmox1, Steap2\",\"<b>Similarity score:<\\/b> 0.65<br><b>Intersection:<\\/b> Hsd17b4, Idh1, Eci2, Eci3,<br> Ehhadh, Gnpat, Gstk1, Hacl1, Mlycd, Paox, Phyh\",\"<b>Similarity score:<\\/b> 0.75<br><b>Intersection:<\\/b> Eci2, Eci3, Ehhadh, Hacl1,<br> Hsd17b4, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Hsd17b4, Eci2, Eci3, Ehhadh,<br> Hacl1, Mlycd, Phyh\",\"<b>Similarity score:<\\/b> 0.96<br><b>Intersection:<\\/b> Eci2, Eci3, Ehhadh, Gnpat,<br> Gstk1, Hacl1, Hsd17b4, Idh1, Lonp2, Mlycd, Paox,<br> Phyh\",null,null,null,null,null,null,null,null,null],\"color.colornull,null,null,null,null,null,null,null,null],\"physics\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"color.highlightnull,null,null,null,null,null,null,null,null],\"labelHighlightBold\":[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"#FFFFB3\",\"#8DD3C7\",\"#FDB462\",\"#BEBADA\",\"#B3DE69\",\"#FCCDE5\",\"#FB8072\",\"#D9D9D9\",\"#BC80BD\"],\"labelHighlightBold.1\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,false,false,false,false,false,false,false,false,false],\"shadow\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,true,true,true,true,true,true,true,true]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"interaction\":{\"hideEdgesOnZoom\":false,\"tooltipDelay\":10,\"zoomSpeed\":0.3},\"edges\":{\"smooth\":false},\"physics\":{\"stabilization\":false}},\"groups\":[\"1: Carbohydrate metabolism (4/16)\",\"2: Carbohydrate metabolism (3/7)\",\"3: Fatty acid metabolism (4/15)\",\"4: Respiratory electron transport (2/7)\",\"0: Amino acid metabolism (2/8)\",\"6: Cellular response to heat stress (3/13)\",\"10: Formation of Fibrin Clot (Clotting Cascade) (2/2)\",\"13: Cell growth and death (1/3)\",\"16: Muscle contraction (2/2)\",\"17: Cardiovascular disease (2/2)\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":null,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"igraphlayout\":{\"type\":\"square\"}},\"evals\":[],\"jsHooks\":[]}# # Equivalently: # enrichment_network_vis(tissues=\"HEART\",  #                        cluster=\"8w_F1_M1\", #                        add_group_label_nodes = TRUE)   if (FALSE) { # Example 2: Export the above network to Cytoscape. # Cytoscape must be running locally for this to work.  library(RCy3) g = enrichment_network_vis(enrich_res, return_graph_for_cytoscape = T)  RCy3::cytoscapePing() RCy3::createNetworkFromIgraph(g, new.title='HEART:8w_F1_M1') }  # Example 3: Plot an interactive network of pathway enrichments corresponding to  # features that are up-regulated in both sexes at 8 weeks in any of the 3 muscle tissues.  # Only include pathways that are enriched in at least 2 muscle tissues. # Plot the color legend on the left instead of using colored labels pointing to nodes  enrichment_network_vis(tissues = c(\"SKM-GN\",\"SKM-VL\",\"HEART\"),                        cluster = \"8w_F1_M1\",                        similarity_cutoff = 0.3,                        title = \"Muscle 8w_F1_M1\",                        add_group_label_nodes = FALSE,                        multitissue_pathways_only = TRUE) #> Formatting inputs... #> Subsetting feature-to-gene map... #> Calculating similarity metric between pairs of enriched pathways... #> Constructing graph... #> Elapsed time: 1.331s #>   {\"x\":{\"nodes\":{\"id\":[\"KEGG:01200\",\"KEGG:00020\",\"KEGG:00640\",\"KEGG:01212\",\"KEGG:00280\",\"KEGG:00071\",\"KEGG:01210\",\"KEGG:00630\",\"KEGG:00620\",\"KEGG:01230\",\"KEGG:00650\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-77289\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-163200\",\"KEGG:04217\",\"REAC:R-RNO-1592230\",\"KEGG:00330\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371497\",\"KEGG:00250\",\"KEGG:00051\",\"KEGG:03320\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-70171\",\"KEGG:05415\",\"KEGG:00190\",\"KEGG:04137\",\"KEGG:04723\",\"KEGG:00220\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-6799198\",\"KEGG:04977\",\"KEGG:04932\",\"REAC:R-RNO-5368287\",\"REAC:R-RNO-5419276\",\"KEGG:04260\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-8949613\"],\"value\":[3600,2500,1600,900,900,900,2500,900,900,2500,900,3600,900,900,900,900,400,900,900,3600,900,1600,400,2500,1600,2500,400,400,400,400,400,2500,2500,400,1600,400,2500,2500,400,1600,400,400,400,400,400],\"title\":[\"<b>Carbon metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 4e-45<br><b>ACETYL:HEART:<\\/b> Acads, Aco2, Acox1, Cs, Dlat,<br> Dld, Echs1, Fh, Hibch, Idh1, Idh2, Idh3a, Mdh1,<br> Mmut, Pdhb, Pkm, Sucla2, Suclg2<br><b>PHOSPHO:HEART:<\\/b> Acox3, Dld, Eno1, Eno3,<br> Glyctk, Got1, Idh2, Mdh1, Pdha1, Pkm, Prps1<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Aldoa, Cs, Dld,<br> Echs1, Eno3, Gapdh, Glud1, Got2, Hk2, Idh1, Idh3a,<br> Idh3b, Idh3g, Mcee, Pdha1, Pfkp, Pgam1, Pgk1, Pkm,<br> Prps1, Tpi1<br><b>TRNSCRPT:HEART:<\\/b> Dld, Eno3, Got1, Got2, Gpt,<br> Hk2, Pkm<br><b>PROT:SKM-GN:<\\/b> Acads, Acss2, Cs, Dlat, Dld,<br> Dlst, Fh, Gcsh, Got1, Got2, Hibch, Hk2, Idh3a,<br> Idh3b, Idh3g, Mcee, Mdh1, Mdh2, Me3, Mmut, Ogdh,<br> Pdha1, Pdhb, Sdha, Sdhb, Shmt2, Sucla2, Suclg1, Suclg2<br><b>TRNSCRPT:SKM-VL:<\\/b> Acads, Cs, Dlst, Got1,<br> Got2, Gpt, Idh2, Idh3b, Mcee, Mdh1, Sdhb\",\"<b>Citrate cycle (TCA cycle)<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 1.5e-32<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Dlat, Dld, Fh,<br> Idh1, Idh2, Idh3a, Mdh1, Pdhb, Sucla2, Suclg2<br><b>PHOSPHO:HEART:<\\/b> Dld, Idh2, Mdh1, Pdha1<br><b>PROT:HEART:<\\/b> Cs, Dld, Idh1, Idh3a, Idh3b,<br> Idh3g, Pdha1<br><b>PROT:SKM-GN:<\\/b> Cs, Dlat, Dld, Dlst, Fh,<br> Idh3a, Idh3b, Idh3g, Mdh1, Mdh2, Ogdh, Pdha1, Pdhb,<br> Sdha, Sdhb, Sucla2, Suclg1, Suclg2<br><b>TRNSCRPT:SKM-VL:<\\/b> Cs, Dlst, Idh2, Idh3b,<br> Mdh1, Sdhb\",\"<b>Propanoate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 1.2e-16<br><b>ACETYL:HEART:<\\/b> Acads, Acox1, Dbt, Dld,<br> Echs1, Hibch, Mmut, Sucla2, Suclg2<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Dld, Echs1,<br> Ehhadh, Mcee, Mlycd<br><b>TRNSCRPT:HEART:<\\/b> Bckdhb, Dbt, Dld, Ldhb<br><b>PROT:SKM-GN:<\\/b> Acads, Acss2, Bckdha, Bckdhb,<br> Dld, Hibch, Mcee, Mlycd, Mmut, Sucla2, Suclg1,<br> Suclg2\",\"<b>Fatty acid metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 3.6e-12<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Hadh, Hadhb, Hsd17b4, Scp2<br><b>PROT:HEART:<\\/b> Acadvl, Acox1, Acox3, Echs1,<br> Ehhadh, Hsd17b4<br><b>PROT:SKM-GN:<\\/b> Acaa2, Acadl, Acadm, Acads,<br> Acadvl, Acsl1, Cbr4, Fasn, Hadh, Hsd17b8, Mecr,<br> Oxsm\",\"<b>Valine, leucine and isoleucine degradation<\\/b> <br>(Amino acid metabolism)<br><b>P-val:<\\/b> 6.4e-13<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Dbt, Dld,<br> Echs1, Hadh, Hadhb, Hibadh, Hibch, Mmut<br><b>PROT:HEART:<\\/b> Aox3, Dld, Echs1, Ehhadh,<br> Hsd17b10, Mcee<br><b>PROT:SKM-GN:<\\/b> Acaa2, Acadm, Acads, Bckdha,<br> Bckdhb, Dld, Hadh, Hibadh, Hibch, Hsd17b10, Mcee,<br> Mmut, Oxct1\",\"<b>Fatty acid degradation<\\/b> (Lipid metabolism)<br><b>P-val:<\\/b> 7.2e-11<br><b>ACETYL:HEART:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Eci1, Hadh, Hadhb<br><b>PROT:HEART:<\\/b> Acadvl, Acox1, Acox3, Adh1,<br> Adh6, Echs1, Eci2, Eci3, Ehhadh<br><b>PROT:SKM-GN:<\\/b> Acaa2, Acadl, Acadm, Acads,<br> Acadvl, Acsl1, Eci2, Eci3, Gcdh, Hadh\",\"<b>2-Oxocarboxylic acid metabolism<\\/b> (NULL)<br><b>P-val:<\\/b> 2.2e-17<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a<br><b>PROT:HEART:<\\/b> Cs, Got2, Idh1, Idh3a, Idh3b,<br> Idh3g<br><b>TRNSCRPT:HEART:<\\/b> Got1, Got2, Gpt<br><b>PROT:SKM-GN:<\\/b> Cs, Got1, Got2, Idh3a, Idh3b,<br> Idh3g<br><b>TRNSCRPT:SKM-VL:<\\/b> Cs, Got1, Got2, Gpt, Idh2,<br> Idh3b\",\"<b>Glyoxylate and dicarboxylate metabolism<\\/b> <br>(Carbohydrate metabolism)<br><b>P-val:<\\/b> 1.1e-09<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Dld, Mdh1, Mmut<br><b>PHOSPHO:HEART:<\\/b> Dld, Glyctk, Mdh1<br><b>PROT:SKM-GN:<\\/b> Acss2, Cs, Dld, Gcsh, Mcee,<br> Mdh1, Mdh2, Mmut, Shmt2\",\"<b>Pyruvate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 4.3e-09<br><b>ACETYL:HEART:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pkm<br><b>PHOSPHO:HEART:<\\/b> Dld, Mdh1, Pdha1, Pkm<br><b>PROT:SKM-GN:<\\/b> Acss2, Dlat, Dld, Fh, Ldhd,<br> Mdh1, Mdh2, Me3, Pdha1, Pdhb\",\"<b>Biosynthesis of amino acids<\\/b> (NULL)<br><b>P-val:<\\/b> 1.3e-18<br><b>ACETYL:HEART:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Pkm<br><b>PHOSPHO:HEART:<\\/b> Eno1, Eno3, Got1, Idh2, Pkm,<br> Prps1<br><b>PROT:HEART:<\\/b> Aldoa, Cs, Eno3, Gapdh, Got2,<br> Idh1, Idh3a, Idh3b, Idh3g, Pfkp, Pgam1, Pgk1, Pkm,<br> Prps1, Pycr2, Tpi1<br><b>TRNSCRPT:HEART:<\\/b> Eno3, Got1, Got2, Gpt, Pkm<br><b>TRNSCRPT:SKM-VL:<\\/b> Cs, Got1, Got2, Gpt, Idh2,<br> Idh3b\",\"<b>Butanoate metabolism<\\/b> (Carbohydrate <br>metabolism)<br><b>P-val:<\\/b> 8.1e-08<br><b>ACETYL:HEART:<\\/b> Acads, Aldh5a1, Echs1, Hadh<br><b>PROT:HEART:<\\/b> Aldh5a1, Bdh1, Echs1, Ehhadh<br><b>PROT:SKM-GN:<\\/b> Acads, Aldh5a1, Bdh1, Hadh,<br> L2hgdh, Oxct1\",\"<b>The citric acid (TCA) cycle and respiratory <br>electron transport<\\/b> (Metabolism)<br><b>P-val:<\\/b> 1.6e-94<br><b>ACETYL:HEART:<\\/b> Acad9, Aco2, Atp5po, Dlat,<br> Dld, Etfb, Fh, Idh2, Ndufa2, Ndufb3, Ndufs1, Ndufv1,<br> Pdhb, Pdpr, Sucla2, Suclg2<br><b>TRNSCRPT:HEART:<\\/b> Bsg, Coq10a, Dld, Ldhb,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4<br><b>PHOSPHO:SKM-GN:<\\/b> Dld, Ndufa7, Ndufb10,<br> Ndufs4, Ndufs7, Ndufv1<br><b>PROT:SKM-GN:<\\/b> Acad9, Atp5pf, Atp5po, Bsg,<br> Dlat, Dld, Etfa, Etfb, Fh, Idh3b, L2hgdh, Mdh2, Me3,<br> Ndufa10, Ndufa10l1, Ndufa12, Ndufa2, Ndufa6,<br> Ndufa7, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4, Ndufaf7,<br> Ndufb9, Ndufs1, Ndufs2, Ndufs3, Ndufs4, Ndufs5,<br> Ndufs7, Ndufv1, Ndufv2, Ndufv3, Ndufv3-ps1, Ogdh, Pdhb,<br> Pdhx, Sdha, Sdhb, Sucla2, Suclg2<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Me3,<br> Mt-atp6, Mt-nd1, Mt-nd2, Mt-nd5, Mt-nd6, Ndufa12,<br> Ndufa3, Ndufa6, Ndufb11, Ndufb4, Ndufb9, Ndufs3,<br> Ndufv1, Pdhx<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5mc1, Atp5mf, Atp5pb,<br> Atp5pd, Atp5pf, Atp5po, Dmac2l, Etfb, Idh2, Idh3b,<br> Mt-atp6, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Mt-nd6,<br> Ndufa12, Ndufa2, Ndufa3, Ndufa5, Ndufa6, Ndufa7,<br> Ndufa9, Ndufab1, Ndufb10, Ndufb11, Ndufb4, Ndufb5,<br> Ndufb6, Ndufb7, Ndufb8, Ndufb9, Ndufc1, Ndufc2,<br> Ndufs3, Ndufs4, Ndufs5, Ndufv1, Nnt, Pdhx, Sdhb,<br> Slc16a1\",\"<b>Pyruvate metabolism and Citric Acid (TCA) <br>cycle<\\/b> (The citric acid (TCA) cycle and respiratory <br>electron transport)<br><b>P-val:<\\/b> 3.5e-17<br><b>ACETYL:HEART:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Pdpr, Sucla2, Suclg2<br><b>PROT:SKM-GN:<\\/b> Bsg, Dlat, Dld, Fh, Idh3b,<br> L2hgdh, Mdh2, Me3, Ogdh, Pdhb, Pdhx, Sdha, Sdhb,<br> Sucla2, Suclg2<br><b>TRNSCRPT:SKM-VL:<\\/b> Idh2, Idh3b, Nnt, Pdhx,<br> Sdhb, Slc16a1\",\"<b>Citric acid cycle (TCA cycle)<\\/b> (Pyruvate <br>metabolism and Citric Acid (TCA) cycle)<br><b>P-val:<\\/b> 7.2e-14<br><b>ACETYL:HEART:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2<br><b>PROT:SKM-GN:<\\/b> Dld, Fh, Idh3b, Mdh2, Me3,<br> Ogdh, Sdha, Sdhb, Sucla2, Suclg2<br><b>TRNSCRPT:SKM-VL:<\\/b> Idh2, Idh3b, Nnt, Sdhb\",\"<b>Mitochondrial Fatty Acid Beta-Oxidation<\\/b> <br>(Fatty acid metabolism)<br><b>P-val:<\\/b> 1.9e-11<br><b>ACETYL:HEART:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Mmut<br><b>PROT:HEART:<\\/b> Acad11, Acot11, Dbi, Echs1,<br> Mcee<br><b>PROT:SKM-GN:<\\/b> Acad10, Acadl, Acot11, Acot13,<br> Acot9, Hadh, Mcee, Mmut, Them4\",\"<b>Fatty acid metabolism<\\/b> (Metabolism of <br>lipids)<br><b>P-val:<\\/b> 1.9e-15<br><b>ACETYL:HEART:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Hsd17b4, Mmut<br><b>PROT:HEART:<\\/b> Acad11, Acot11, Dbi, Echs1,<br> Eci2, Eci3, Ehhadh, Hacl1, Hsd17b4, Mcee, Mlycd,<br> Phyh, Prkag2, Ptges2<br><b>PROT:SKM-GN:<\\/b> Acad10, Acadl, Acot11, Acot13,<br> Acot9, Acsl1, Cbr4, Eci2, Eci3, Fasn, Hadh,<br> Hsd17b8, Mcee, Mlycd, Mmut, Phyh, Prkag2, Ptges2,<br> Them4\",\"<b>Branched-chain amino acid catabolism<\\/b> <br>(Metabolism of amino acids and derivatives)<br><b>P-val:<\\/b> 3.2e-06<br><b>ACETYL:HEART:<\\/b> Dbt, Dld, Hibadh, Hibch<br><b>PROT:SKM-GN:<\\/b> Bckdk, Dld, Hibadh, Hibch,<br> Ppm1k\",\"<b>Pyruvate metabolism<\\/b> (Pyruvate metabolism <br>and Citric Acid (TCA) cycle)<br><b>P-val:<\\/b> 5.2e-07<br><b>ACETYL:HEART:<\\/b> Dlat, Dld, Pdhb, Pdpr<br><b>TRNSCRPT:HEART:<\\/b> Bsg, Dld, Ldhb<br><b>PROT:SKM-GN:<\\/b> Bsg, Dlat, Dld, Pdhb, Pdhx\",\"<b>Glyoxylate metabolism and glycine <br>degradation<\\/b> (Metabolism of amino acids and derivatives)<br><b>P-val:<\\/b> 6.7e-09<br><b>ACETYL:HEART:<\\/b> Dbt, Dlat, Dld, Pdhb<br><b>TRNSCRPT:HEART:<\\/b> Dbt, Dld, Got2<br><b>PROT:SKM-GN:<\\/b> Dlat, Dld, Gcsh, Got2, Ogdh,<br> Pdhb, Pdhx\",\"<b>Respiratory electron transport, ATP synthesis <br>by chemiosmotic coupling, and heat production by <br>uncoupling proteins.<\\/b> (The citric acid (TCA) <br>cycle and respiratory electron transport)<br><b>P-val:<\\/b> 3.9e-79<br><b>ACETYL:HEART:<\\/b> Acad9, Atp5po, Etfb, Ndufa2,<br> Ndufb3, Ndufs1, Ndufv1<br><b>TRNSCRPT:HEART:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4<br><b>PHOSPHO:SKM-GN:<\\/b> Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1<br><b>PROT:SKM-GN:<\\/b> Acad9, Atp5pf, Atp5po, Etfa,<br> Etfb, Ndufa10, Ndufa10l1, Ndufa12, Ndufa2, Ndufa6,<br> Ndufa7, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4, Ndufaf7,<br> Ndufb9, Ndufs1, Ndufs2, Ndufs3, Ndufs4, Ndufs5,<br> Ndufs7, Ndufv1, Ndufv2, Ndufv3, Ndufv3-ps1<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Mt-atp6,<br> Mt-nd1, Mt-nd2, Mt-nd5, Mt-nd6, Ndufa12, Ndufa3,<br> Ndufa6, Ndufb11, Ndufb4, Ndufb9, Ndufs3, Ndufv1<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5mc1, Atp5mf, Atp5pb,<br> Atp5pd, Atp5pf, Atp5po, Dmac2l, Etfb, Mt-atp6,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Mt-nd6, Ndufa12,<br> Ndufa2, Ndufa3, Ndufa5, Ndufa6, Ndufa7, Ndufa9,<br> Ndufab1, Ndufb10, Ndufb11, Ndufb4, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufb9, Ndufc1, Ndufc2, Ndufs3, Ndufs4,<br> Ndufs5, Ndufv1\",\"<b>Necroptosis<\\/b> (Cell growth and death)<br><b>P-val:<\\/b> 1.7e-06<br><b>METAB:HEART:<\\/b> unknown (METAB)<br><b>TRNSCRPT:HEART:<\\/b> Ftl1, Jak1, Mapk9, Pygm, Slc25a5, Sqstm1<br><b>METAB:SKM-GN:<\\/b> unknown (METAB)\",\"<b>Mitochondrial biogenesis<\\/b> (Organelle <br>biogenesis and maintenance)<br><b>P-val:<\\/b> 2.6e-17<br><b>METHYL:HEART:<\\/b> Sirt4<br><b>PROT:SKM-GN:<\\/b> Acss2, Atp5pf, Atp5po, Sirt3,<br> Sod2<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Mt-atp6<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5mc1, Atp5mf, Atp5pb,<br> Atp5pd, Atp5pf, Atp5po, Dmac2l, Idh2, Mt-atp6,<br> Sod2\",\"<b>Arginine and proline metabolism<\\/b> (Amino <br>acid metabolism)<br><b>P-val:<\\/b> 4.6e-05<br><b>PHOSPHO:HEART:<\\/b> Ckb, Ckm, Got1<br><b>TRNSCRPT:SKM-VL:<\\/b> Ckmt1, Got1, Got2, Nos3,<br> Prodh1\",\"<b>HSF1-dependent transactivation<\\/b> (Cellular <br>response to heat stress)<br><b>P-val:<\\/b> 1.3e-19<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b<br><b>PROT:HEART:<\\/b> Camk2d, Cryab, Hsp90aa1,<br> Hspa1a, Hspa1b, Hspa2, Hspb8<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b<br><b>PHOSPHO:SKM-GN:<\\/b> Camk2g, Hsp90aa1, Hspa1a,<br> Hspa1b<br><b>PROT:SKM-GN:<\\/b> Dnajb1, Fkbp4, Hsp90aa1,<br> Hspa1a, Hspa1b, Hspb8\",\"<b>Cellular response to heat stress<\\/b> (Cellular <br>responses to stress)<br><b>P-val:<\\/b> 3.4e-12<br><b>PHOSPHO:HEART:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Hsph1<br><b>PROT:HEART:<\\/b> Bag3, Camk2d, Cryab, Hikeshi,<br> Hsp90aa1, Hspa1a, Hspa1b, Hspa2, Hspb8, Hsph1,<br> St13<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b<br><b>PHOSPHO:SKM-GN:<\\/b> Bag3, Camk2g, Hsp90aa1,<br> Hspa1a, Hspa1b\",\"<b>HSP90 chaperone cycle for steroid hormone <br>receptors (SHR)<\\/b> (Cellular responses to stress)<br><b>P-val:<\\/b> 2.6e-11<br><b>PHOSPHO:HEART:<\\/b> Hsp90aa1, Hspa1a, Hspa1b<br><b>PROT:HEART:<\\/b> Fkbp5, Hsp90aa1, Hspa1a,<br> Hspa1b, Hspa2, Stip1<br><b>UBIQ:HEART:<\\/b> Hspa1a, Hspa1b<br><b>PHOSPHO:SKM-GN:<\\/b> Dync1li2, Hsp90aa1, Hspa1a,<br> Hspa1b<br><b>PROT:SKM-GN:<\\/b> Dnaja1, Dnajb1, Fkbp4, Fkbp5,<br> Hsp90aa1, Hspa1a, Hspa1b, Stip1\",\"<b>Alanine, aspartate and glutamate <br>metabolism<\\/b> (Amino acid metabolism)<br><b>P-val:<\\/b> 3.7e-05<br><b>PROT:HEART:<\\/b> Aldh5a1, Gls, Glud1, Got2, Nit2<br><b>TRNSCRPT:SKM-GN:<\\/b> Aldh5a1, Got1, Got2\",\"<b>Fructose and mannose metabolism<\\/b> <br>(Carbohydrate metabolism)<br><b>P-val:<\\/b> 2.7e-05<br><b>PROT:HEART:<\\/b> Aldoa, Hk2, Mpi, Pfkp, Tpi1<br><b>ATAC:SKM-GN:<\\/b> Pfkfb1, Pfkfb3\",\"<b>PPAR signaling pathway<\\/b> (Endocrine system)<br><b>P-val:<\\/b> 3.8e-06<br><b>PROT:HEART:<\\/b> Acox1, Acox3, Cyp27a1, Dbi,<br> Ehhadh, Sorbs1<br><b>PROT:SKM-GN:<\\/b> Acadl, Acadm, Acsl1, Fabp4,<br> Fabp5, Gk, Me3, Plin2, Plin4, Plin5, Sorbs1\",\"<b>Attenuation phase<\\/b> (HSF1-dependent <br>transactivation)<br><b>P-val:<\\/b> 2.5e-08<br><b>PROT:HEART:<\\/b> Hsp90aa1, Hspa1a, Hspa1b, Hspa2<br><b>PROT:SKM-GN:<\\/b> Dnajb1, Fkbp4, Hsp90aa1,<br> Hspa1a, Hspa1b\",\"<b>Glycolysis<\\/b> (Glucose metabolism)<br><b>P-val:<\\/b> 1.1e-05<br><b>PROT:HEART:<\\/b> Aldoa, Eno3, Gapdh, Hk2, Pgam1,<br> Pgk1, Tpi1<br><b>ATAC:SKM-GN:<\\/b> Pfkfb1, Pfkfb3\",\"<b>Diabetic cardiomyopathy<\\/b> (Cardiovascular <br>disease)<br><b>P-val:<\\/b> 7.9e-92<br><b>TRNSCRPT:HEART:<\\/b> Atp5f1a, Cox7a1, Mapk9,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Pdk2, Pln, Ryr2, Slc25a5, Slc2a4<br><b>PHOSPHO:SKM-GN:<\\/b> Atp5f1a, Atp5f1c, Camk2g,<br> Gys1, Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufv1,<br> Slc2a4, Taf3<br><b>PROT:SKM-GN:<\\/b> Ace, Atp5f1a, Atp5f1b,<br> Atp5f1c, Atp5f1d, Atp5f1e, Atp5pf, Atp5po, Cox5a, Cox5b,<br> Cox6b1, Irs1, Ndufa10, Ndufa10l1, Ndufa12, Ndufa2,<br> Ndufa4, Ndufa6, Ndufa7, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs1, Ndufs2, Ndufs3, Ndufs4, Ndufs5, Ndufs7,<br> Ndufs8, Ndufv1, Ndufv2, Ndufv3, Pdha1, Pdhb, Ppif,<br> Sdha, Sdhb, Slc2a4, Taf3, Uqcr10<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Cox4i1, Cox5a,<br> Cox6b1, Cox7a1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-atp6, Mt-co1, Mt-co3, Mt-cyb, Mt-nd1, Mt-nd2,<br> Mt-nd5, Mt-nd6, Ndufa12, Ndufa3, Ndufa6, Ndufb11,<br> Ndufb4, Ndufb9, Ndufs3, Ndufv1, Tbc1d4, Uqcrq<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5f1a, Atp5f1c, Atp5f1d,<br> Atp5mc1, Atp5mc3, Atp5pb, Atp5pd, Atp5pf, Atp5po,<br> Cox4i1, Cox5a, Cox5b, Cox6b1, Cox6c, Cox7a1,<br> Cox7a2, Cox7a2l2, Cox7b, Cox7c, Cox8b, Mpc1, Mpc2,<br> Mt-atp6, Mt-co1, Mt-co3, Mt-cyb, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Mt-nd6, Ndufa12, Ndufa2, Ndufa3,<br> Ndufa4, Ndufa5, Ndufa6, Ndufa7, Ndufa9, Ndufab1,<br> Ndufb10, Ndufb11, Ndufb4, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufb9, Ndufc1, Ndufc2, Ndufs3, Ndufs4, Ndufs5,<br> Ndufs8, Ndufv1, Nos3, Sdhb, Slc2a4, Taf3, Uqcr10,<br> Uqcr11, Uqcrb, Uqcrc1, Uqcrq\",\"<b>Oxidative phosphorylation<\\/b> (Energy <br>metabolism)<br><b>P-val:<\\/b> 1.1e-113<br><b>TRNSCRPT:HEART:<\\/b> Atp5f1a, Atp6v1g2, Cox7a1,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4<br><b>PHOSPHO:SKM-GN:<\\/b> Atp5f1a, Atp5f1c, Ndufa7,<br> Ndufb10, Ndufs4, Ndufs7, Ndufv1, Taf3<br><b>PROT:SKM-GN:<\\/b> Atp5f1a, Atp5f1b, Atp5f1c,<br> Atp5f1d, Atp5f1e, Atp5pf, Atp5po, Cox17, Cox5a,<br> Cox5b, Cox6b1, Ndufa10, Ndufa10l1, Ndufa12, Ndufa2,<br> Ndufa4, Ndufa6, Ndufa7, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs1, Ndufs2, Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufs8,<br> Ndufv1, Ndufv2, Ndufv3, Ppa2, Sdha, Sdhb, Taf3,<br> Uqcr10<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Cox4i1,<br> Cox5a, Cox6b1, Cox7a1, Cox7a2, Cox7a2l2, Cox7b,<br> Cox8b, Mt-atp6, Mt-co1, Mt-co3, Mt-cyb, Mt-nd1,<br> Mt-nd2, Mt-nd5, Mt-nd6, Ndufa12, Ndufa3, Ndufa6,<br> Ndufb11, Ndufb4, Ndufb9, Ndufs3, Ndufv1, Uqcrq<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5f1a, Atp5f1c, Atp5f1d,<br> Atp5mc1, Atp5mc3, Atp5mf, Atp5pb, Atp5pd, Atp5pf,<br> Atp5po, Atp6v1g2, Cox15, Cox17, Cox4i1, Cox5a,<br> Cox5b, Cox6b1, Cox6c, Cox7a1, Cox7a2, Cox7a2l2,<br> Cox7b, Cox7c, Cox8b, Mt-atp6, Mt-co1, Mt-co3, Mt-cyb,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Mt-nd6, Ndufa12,<br> Ndufa2, Ndufa3, Ndufa4, Ndufa5, Ndufa6, Ndufa7,<br> Ndufa9, Ndufab1, Ndufb10, Ndufb11, Ndufb4, Ndufb5,<br> Ndufb6, Ndufb7, Ndufb8, Ndufb9, Ndufc1, Ndufc2,<br> Ndufs3, Ndufs4, Ndufs5, Ndufs8, Ndufv1, Sdhb, Taf3,<br> Uqcr10, Uqcr11, Uqcrb, Uqcrc1, Uqcrq\",\"<b>Mitophagy - animal<\\/b> (Transport and <br>catabolism)<br><b>P-val:<\\/b> 4.5e-05<br><b>TRNSCRPT:HEART:<\\/b> Atf4, Bnip3, Mapk9, Mfn1,<br> Optn, Sqstm1<br><b>ATAC:SKM-GN:<\\/b> Jun, Ubc\",\"<b>Retrograde endocannabinoid signaling<\\/b> <br>(Nervous system)<br><b>P-val:<\\/b> 1.6e-40<br><b>TRNSCRPT:HEART:<\\/b> Gng5, Mapk9, Mt-nd1,<br> Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4<br><b>PROT:SKM-GN:<\\/b> Ndufa10, Ndufa10l1, Ndufa12,<br> Ndufa2, Ndufa4, Ndufa6, Ndufa7, Ndufa8, Ndufa9,<br> Ndufb9, Ndufs1, Ndufs2, Ndufs3, Ndufs4, Ndufs5,<br> Ndufs7, Ndufs8, Ndufv1, Ndufv2, Ndufv3<br><b>TRNSCRPT:SKM-GN:<\\/b> Mt-nd1, Mt-nd2, Mt-nd5,<br> Mt-nd6, Ndufa12, Ndufa3, Ndufa6, Ndufb11, Ndufb4,<br> Ndufb9, Ndufs3, Ndufv1<br><b>TRNSCRPT:SKM-VL:<\\/b> Gabrr1, Gng5, Mt-nd1,<br> Mt-nd2, Mt-nd4, Mt-nd5, Mt-nd6, Ndufa12, Ndufa2,<br> Ndufa3, Ndufa4, Ndufa5, Ndufa6, Ndufa7, Ndufa9,<br> Ndufab1, Ndufb10, Ndufb11, Ndufb4, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufb9, Ndufc1, Ndufc2, Ndufs3, Ndufs4,<br> Ndufs5, Ndufs8, Ndufv1\",\"<b>Arginine biosynthesis<\\/b> (Amino acid <br>metabolism)<br><b>P-val:<\\/b> 1.5e-05<br><b>TRNSCRPT:HEART:<\\/b> Got1, Got2, Gpt<br><b>TRNSCRPT:SKM-VL:<\\/b> Got1, Got2, Gpt, Nos3\",\"<b>Respiratory electron transport<\\/b> <br>(Respiratory electron transport, ATP synthesis by <br>chemiosmotic coupling, and heat production by uncoupling <br>proteins.)<br><b>P-val:<\\/b> 1.8e-67<br><b>TRNSCRPT:HEART:<\\/b> Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4<br><b>PHOSPHO:SKM-GN:<\\/b> Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1<br><b>PROT:SKM-GN:<\\/b> Acad9, Etfa, Etfb, Ndufa10,<br> Ndufa10l1, Ndufa12, Ndufa2, Ndufa6, Ndufa7, Ndufa8,<br> Ndufa9, Ndufaf3, Ndufaf4, Ndufaf7, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufv1,<br> Ndufv2, Ndufv3, Ndufv3-ps1<br><b>TRNSCRPT:SKM-GN:<\\/b> Mt-nd1, Mt-nd2, Mt-nd5,<br> Mt-nd6, Ndufa12, Ndufa3, Ndufa6, Ndufb11, Ndufb4,<br> Ndufb9, Ndufs3, Ndufv1<br><b>TRNSCRPT:SKM-VL:<\\/b> Etfb, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Mt-nd6, Ndufa12, Ndufa2, Ndufa3,<br> Ndufa5, Ndufa6, Ndufa7, Ndufa9, Ndufab1, Ndufb10,<br> Ndufb11, Ndufb4, Ndufb5, Ndufb6, Ndufb7, Ndufb8,<br> Ndufb9, Ndufc1, Ndufc2, Ndufs3, Ndufs4, Ndufs5, Ndufv1\",\"<b>Complex I biogenesis<\\/b> (Respiratory electron <br>transport)<br><b>P-val:<\\/b> 7.4e-65<br><b>TRNSCRPT:HEART:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4<br><b>PHOSPHO:SKM-GN:<\\/b> Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1<br><b>PROT:SKM-GN:<\\/b> Acad9, Ndufa10, Ndufa10l1,<br> Ndufa12, Ndufa2, Ndufa6, Ndufa7, Ndufa8, Ndufa9,<br> Ndufaf3, Ndufaf4, Ndufaf7, Ndufb9, Ndufs1, Ndufs2,<br> Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufv1, Ndufv2,<br> Ndufv3, Ndufv3-ps1<br><b>TRNSCRPT:SKM-GN:<\\/b> Mt-nd1, Mt-nd2, Mt-nd5,<br> Mt-nd6, Ndufa12, Ndufa3, Ndufa6, Ndufb11, Ndufb4,<br> Ndufb9, Ndufs3, Ndufv1<br><b>TRNSCRPT:SKM-VL:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Mt-nd6, Ndufa12, Ndufa2, Ndufa3, Ndufa5,<br> Ndufa6, Ndufa7, Ndufa9, Ndufab1, Ndufb10, Ndufb11,<br> Ndufb4, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufb9,<br> Ndufc1, Ndufc2, Ndufs3, Ndufs4, Ndufs5, Ndufv1\",\"<b>Vitamin digestion and absorption<\\/b> <br>(Digestive system)<br><b>P-val:<\\/b> 3.3e-05<br><b>METAB:SKM-GN:<\\/b> unknown (METAB)<br><b>METAB:SKM-VL:<\\/b> unknown (METAB)\",\"<b>Non-alcoholic fatty liver disease<\\/b> <br>(Endocrine and metabolic disease)<br><b>P-val:<\\/b> 7.7e-66<br><b>PHOSPHO:SKM-GN:<\\/b> Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Prkab1, Prkag2<br><b>PROT:SKM-GN:<\\/b> Cox5a, Cox5b, Cox6b1, Irs1,<br> Ndufa10, Ndufa10l1, Ndufa12, Ndufa2, Ndufa4, Ndufa6,<br> Ndufa7, Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2,<br> Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufs8, Ndufv1,<br> Ndufv2, Ndufv3, Prkag2, Sdha, Sdhb, Uqcr10<br><b>TRNSCRPT:SKM-GN:<\\/b> Cox4i1, Cox5a, Cox6b1,<br> Cox7a1, Cox7a2, Cox7a2l2, Cox7b, Cox8b, Il6r, Mt-co1,<br> Mt-co3, Mt-cyb, Ndufa12, Ndufa3, Ndufa6, Ndufb11,<br> Ndufb4, Ndufb9, Ndufs3, Ndufv1, Uqcrq<br><b>TRNSCRPT:SKM-VL:<\\/b> Cox4i1, Cox5a, Cox5b,<br> Cox6b1, Cox6c, Cox7a1, Cox7a2, Cox7a2l2, Cox7b, Cox7c,<br> Cox8b, Cycs, Il6r, Mt-co1, Mt-co3, Mt-cyb,<br> Ndufa12, Ndufa2, Ndufa3, Ndufa4, Ndufa5, Ndufa6, Ndufa7,<br> Ndufa9, Ndufab1, Ndufb10, Ndufb11, Ndufb4,<br> Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufb9, Ndufc1, Ndufc2,<br> Ndufs3, Ndufs4, Ndufs5, Ndufs8, Ndufv1, Sdhb,<br> Uqcr10, Uqcr11, Uqcrb, Uqcrc1, Uqcrq\",\"<b>Mitochondrial translation<\\/b> (Translation)<br><b>P-val:<\\/b> 1e-14<br><b>PROT:SKM-GN:<\\/b> Dap3, Gfm1, Mrpl12, Mrpl16,<br> Mrpl17, Mrpl38, Mrpl47, Mrpl53, Mrpl55, Mrps12,<br> Mrps15, Mrps16, Mrps17, Mrps21, Mrps22, Mrps23,<br> Mrps24, Mrps27, Mrps31, Mrps33, Mrps34, Mrps35, Mrps36,<br> Mrps5, Ptcd3, mrpl24<br><b>TRNSCRPT:SKM-VL:<\\/b> Mrpl12, Mrpl38, Mrpl4,<br> Mrpl40, Mrpl45, Mrps34, Mrrf\",\"<b>Mitochondrial translation termination<\\/b> <br>(Mitochondrial translation)<br><b>P-val:<\\/b> 5.2e-14<br><b>PROT:SKM-GN:<\\/b> Dap3, Mrpl12, Mrpl16, Mrpl17,<br> Mrpl38, Mrpl47, Mrpl53, Mrpl55, Mrps12, Mrps15,<br> Mrps16, Mrps17, Mrps21, Mrps22, Mrps23, Mrps24,<br> Mrps27, Mrps31, Mrps33, Mrps34, Mrps35, Mrps36, Mrps5,<br> Ptcd3, mrpl24<br><b>TRNSCRPT:SKM-VL:<\\/b> Mrpl12, Mrpl38, Mrpl4,<br> Mrpl40, Mrpl45, Mrps34, Mrrf\",\"<b>Cardiac muscle contraction<\\/b> (Circulatory <br>system)<br><b>P-val:<\\/b> 1.2e-24<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp1a2, Cox4i1, Cox5a,<br> Cox6b1, Cox7a1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-co1, Mt-co3, Mt-cyb, Uqcrq<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp1b1, Cox4i1, Cox5a,<br> Cox5b, Cox6b1, Cox6c, Cox7a1, Cox7a2, Cox7a2l2,<br> Cox7b, Cox7c, Cox8b, Mt-co1, Mt-co3, Mt-cyb, Uqcr10,<br> Uqcr11, Uqcrb, Uqcrc1, Uqcrq\",\"<b>Formation of ATP by chemiosmotic coupling<\\/b> <br>(Respiratory electron transport, ATP synthesis by <br>chemiosmotic coupling, and heat production by <br>uncoupling proteins.)<br><b>P-val:<\\/b> 9.5e-15<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Mt-atp6<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5mc1, Atp5mf, Atp5pb,<br> Atp5pd, Atp5pf, Atp5po, Dmac2l, Mt-atp6\",\"<b>Cristae formation<\\/b> (Mitochondrial <br>biogenesis)<br><b>P-val:<\\/b> 9.5e-15<br><b>TRNSCRPT:SKM-GN:<\\/b> Atp5mc1, Atp5mf, Mt-atp6<br><b>TRNSCRPT:SKM-VL:<\\/b> Atp5mc1, Atp5mf, Atp5pb,<br> Atp5pd, Atp5pf, Atp5po, Dmac2l, Mt-atp6\"],\"color.highlight.background\":[\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\",\"yellow\"],\"color.border\":[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],\"shadow\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"physics\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"borderWidth\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"borderWidthSelected\":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],\"pathway_subclass\":[\"NULL\",\"Carbohydrate metabolism\",\"Carbohydrate metabolism\",\"NULL\",\"Amino acid metabolism\",\"Lipid metabolism\",\"NULL\",\"Carbohydrate metabolism\",\"Carbohydrate metabolism\",\"NULL\",\"Carbohydrate metabolism\",\"Metabolism\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Fatty acid metabolism\",\"Metabolism of lipids\",\"Metabolism of amino acids and derivatives\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Metabolism of amino acids and derivatives\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Cell growth and death\",\"Organelle biogenesis and maintenance\",\"Amino acid metabolism\",\"Cellular response to heat stress\",\"Cellular responses to stress\",\"Cellular responses to stress\",\"Amino acid metabolism\",\"Carbohydrate metabolism\",\"Endocrine system\",\"HSF1-dependent transactivation\",\"Glucose metabolism\",\"Cardiovascular disease\",\"Energy metabolism\",\"Transport and catabolism\",\"Nervous system\",\"Amino acid metabolism\",\"Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins.\",\"Respiratory electron transport\",\"Digestive system\",\"Endocrine and metabolic disease\",\"Translation\",\"Mitochondrial translation\",\"Circulatory system\",\"Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins.\",\"Mitochondrial biogenesis\"],\"term_name\":[\"Carbon metabolism\",\"Citrate cycle (TCA cycle)\",\"Propanoate metabolism\",\"Fatty acid metabolism\",\"Valine, leucine and isoleucine degradation\",\"Fatty acid degradation\",\"2-Oxocarboxylic acid metabolism\",\"Glyoxylate and dicarboxylate metabolism\",\"Pyruvate metabolism\",\"Biosynthesis of amino acids\",\"Butanoate metabolism\",\"The citric acid (TCA) cycle and respiratory electron transport\",\"Pyruvate metabolism and Citric Acid (TCA) cycle\",\"Citric acid cycle (TCA cycle)\",\"Mitochondrial Fatty Acid Beta-Oxidation\",\"Fatty acid metabolism\",\"Branched-chain amino acid catabolism\",\"Pyruvate metabolism\",\"Glyoxylate metabolism and glycine degradation\",\"Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins.\",\"Necroptosis\",\"Mitochondrial biogenesis\",\"Arginine and proline metabolism\",\"HSF1-dependent transactivation\",\"Cellular response to heat stress\",\"HSP90 chaperone cycle for steroid hormone receptors (SHR)\",\"Alanine, aspartate and glutamate metabolism\",\"Fructose and mannose metabolism\",\"PPAR signaling pathway\",\"Attenuation phase\",\"Glycolysis\",\"Diabetic cardiomyopathy\",\"Oxidative phosphorylation\",\"Mitophagy - animal\",\"Retrograde endocannabinoid signaling\",\"Arginine biosynthesis\",\"Respiratory electron transport\",\"Complex I biogenesis\",\"Vitamin digestion and absorption\",\"Non-alcoholic fatty liver disease\",\"Mitochondrial translation\",\"Mitochondrial translation termination\",\"Cardiac muscle contraction\",\"Formation of ATP by chemiosmotic coupling\",\"Cristae formation\"],\"group\":[\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"2: Fatty acid metabolism (3/9)\",\"2: Fatty acid metabolism (3/9)\",\"2: Fatty acid metabolism (3/9)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"2: Fatty acid metabolism (3/9)\",\"2: Fatty acid metabolism (3/9)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"0: Cell growth and death (1/3)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"1: Carbohydrate metabolism (4/15)\",\"5: Cellular response to heat stress (2/4)\",\"5: Cellular response to heat stress (2/4)\",\"5: Cellular response to heat stress (2/4)\",\"1: Carbohydrate metabolism (4/15)\",\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"5: Cellular response to heat stress (2/4)\",\"1: Carbohydrate metabolism (4/15)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"0: Cell growth and death (1/3)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"1: Carbohydrate metabolism (4/15)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"0: Cell growth and death (1/3)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"8: Mitochondrial translation (2/2)\",\"8: Mitochondrial translation (2/2)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\"],\"group_number\":[\"1\",\"1\",\"2\",\"2\",\"2\",\"2\",\"1\",\"1\",\"1\",\"1\",\"2\",\"3\",\"1\",\"1\",\"2\",\"2\",\"2\",\"1\",\"1\",\"3\",\"0\",\"3\",\"1\",\"5\",\"5\",\"5\",\"1\",\"1\",\"2\",\"5\",\"1\",\"3\",\"3\",\"0\",\"3\",\"1\",\"3\",\"3\",\"0\",\"3\",\"8\",\"8\",\"3\",\"3\",\"3\"],\"color.background\":[\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#8DA0CB\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#66C2A5\",\"#66C2A5\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#66C2A5\",\"#A6D854\",\"#A6D854\",\"#A6D854\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#A6D854\",\"#66C2A5\",\"#8DA0CB\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#66C2A5\",\"#8DA0CB\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#FFD92F\",\"#FFD92F\",\"#8DA0CB\",\"#8DA0CB\",\"#8DA0CB\"],\"color.highlight.border\":[\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#8DA0CB\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#FC8D62\",\"#FC8D62\",\"#66C2A5\",\"#66C2A5\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#66C2A5\",\"#A6D854\",\"#A6D854\",\"#A6D854\",\"#66C2A5\",\"#66C2A5\",\"#FC8D62\",\"#A6D854\",\"#66C2A5\",\"#8DA0CB\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#66C2A5\",\"#8DA0CB\",\"#8DA0CB\",\"#E78AC3\",\"#8DA0CB\",\"#FFD92F\",\"#FFD92F\",\"#8DA0CB\",\"#8DA0CB\",\"#8DA0CB\"],\"x\":[0.1413521780151794,-0.05342980759671989,0.1479242612799507,-0.1293819649580521,0.05419599906187278,0.004359948440225025,0.2615011103583027,0.01586248536956947,-0.05474072293960064,0.4225627150286781,-0.131116544534823,-0.4550384125713965,-0.1804492941883037,-0.2122082019453833,-0.5015736614736872,-0.2769890381883993,0.2557309605456468,-0.1977821979544988,-0.1398165749436101,-0.6770215773934365,-0.8005269136199279,-0.5034662837138569,0.62598287780234,0.9551434086570114,0.875331743802227,0.8306429232276522,0.7632008127633529,0.3650536264468209,0.2388512375985925,1,0.439124601773393,-0.7252915806024116,-0.6561817374793728,0.6032324315987994,-0.8171915491084788,0.4814102670492293,-0.8461977051453795,-0.7895069734905872,-1,-0.7013420044179697,0.05217377791407118,0.2224793365282995,-0.8475467341426971,-0.6453177899652756,-0.5407520179916334],\"y\":[-0.02898774149211991,-0.1080911094974182,0.4128881625755074,0.8904757033390738,0.7062214193494931,0.9287039047188592,-0.2106591344481057,0.1488539205079307,-0.2892198395744369,-0.1143645282943279,0.7616689946771198,-0.2782660284674607,-0.1572060829305244,-0.008144307599845413,0.9258019386689189,0.9780566746448465,0.6304284382372547,-0.4077468176553257,-0.2467449714392715,-0.3964392287777507,0.7014944093783977,-0.6007718355020564,-0.4954407273512295,0.2209609241162696,0.443501443383028,0.305689451274441,-0.3229481128581219,0.1937354526181463,1,0.3559007312162688,0.05666146257526328,-0.2995442768964444,-0.2555697699053221,-0.8209988565470633,-0.3574588491212113,-0.2742000284527698,-0.2599297376161555,-0.179929071477831,0.5025079511632691,-0.14145935806326,-1,-0.9580353691198444,-0.02488162176470232,-0.518716354565845,-0.4592866320786027]},\"edges\":{\"from\":[\"KEGG:01200\",\"KEGG:01200\",\"KEGG:00280\",\"KEGG:01212\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:00250\",\"KEGG:00330\",\"KEGG:01200\",\"KEGG:01210\",\"KEGG:01230\",\"KEGG:00640\",\"KEGG:01212\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:01200\",\"KEGG:00071\",\"KEGG:00280\",\"KEGG:01212\",\"KEGG:00020\",\"KEGG:01200\",\"KEGG:01200\",\"KEGG:01210\",\"KEGG:00071\",\"KEGG:00190\",\"KEGG:04932\",\"KEGG:05415\",\"KEGG:00190\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:00190\",\"KEGG:04723\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:00020\",\"KEGG:00620\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-1428517\",\"KEGG:00190\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-1592230\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371571\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371571\",\"KEGG:00020\",\"KEGG:01200\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-5368287\",\"KEGG:00190\",\"KEGG:04723\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"KEGG:00190\",\"KEGG:04723\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-611105\",\"KEGG:00051\",\"KEGG:01200\",\"KEGG:01230\",\"KEGG:00620\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"KEGG:00280\",\"KEGG:00640\",\"KEGG:00020\",\"KEGG:01200\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-71406\",\"KEGG:00020\",\"KEGG:00620\",\"KEGG:01200\",\"REAC:R-RNO-1428517\",\"KEGG:00190\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-1592230\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-163210\",\"KEGG:00071\",\"KEGG:01212\",\"REAC:R-RNO-77289\"],\"to\":[\"KEGG:00020\",\"KEGG:00051\",\"KEGG:00071\",\"KEGG:00071\",\"KEGG:00190\",\"KEGG:00190\",\"KEGG:00190\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00220\",\"KEGG:00280\",\"KEGG:00280\",\"KEGG:00620\",\"KEGG:00620\",\"KEGG:00630\",\"KEGG:00630\",\"KEGG:00640\",\"KEGG:00650\",\"KEGG:00650\",\"KEGG:00650\",\"KEGG:01210\",\"KEGG:01210\",\"KEGG:01230\",\"KEGG:01230\",\"KEGG:03320\",\"KEGG:04260\",\"KEGG:04260\",\"KEGG:04260\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:04723\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:04932\",\"KEGG:05415\",\"KEGG:05415\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-1428517\",\"REAC:R-RNO-1592230\",\"REAC:R-RNO-1592230\",\"REAC:R-RNO-163200\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-163210\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371497\",\"REAC:R-RNO-3371556\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-3371568\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-389661\",\"REAC:R-RNO-5419276\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-611105\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-6799198\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70171\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70268\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-70895\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71403\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-71406\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8949613\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-8978868\",\"REAC:R-RNO-8978868\"],\"value\":[35.9375,16.24649859943978,17.41898148148148,31.79347826086957,42.26685476685476,24.57375599898964,30.28409090909091,18.75,28.125,20.28061224489796,25.56818181818182,22.15909090909091,23.5042735042735,15.55555555555556,22.90909090909091,27.82931354359926,15.99326599326599,30.72916666666667,22.22222222222222,17.5,21.57738095238095,16.84782608695652,24.79166666666667,30.20833333333333,34.01360544217687,36.90476190476191,15.14423076923077,28.42105263157895,30.1271186440678,27.61363636363636,35.13798701298702,34.54545454545455,31.61585365853659,35.18442622950819,39.26271374639129,32.30769230769231,37.96783625730994,21.19453044375645,21.91675794085432,26.04261796042618,27.61904761904762,23.17835028748341,28.08280828082809,19.34523809523809,15.48821548821549,20.98214285714286,19.82142857142857,43.0921052631579,21.74707602339181,18.35205992509363,27.96052631578948,41.07142857142857,29.09090909090909,17.94258373205741,27.57575757575757,35.45454545454545,40.90909090909091,26.19047619047619,40.90909090909091,16.5,21.75,17.20727848101266,23.37662337662337,21.05978260869565,49.19354838709678,28.88888888888889,37.91666666666666,27.65177548682703,39.80263157894737,45.45454545454546,30.60394889663182,38.95833333333334,29.2806484295846,38.81578947368421,44.09090909090909,48.33333333333334,28.27380952380952,20.93137254901961,21,15.71428571428571,27.30263157894737,28.57142857142857,21.66666666666667,16.07142857142857,33.11036789297659,29.19937205651492,29.27631578947368,41.25,27.85714285714286,19.63636363636364,23.98148148148148,31.57894736842105,21.74707602339181,18.35205992509363,27.96052631578948,41.07142857142857,29.09090909090909,50,15.79861111111111,20.10233918128655,38.88888888888889],\"title\":[\"<b>Similarity score:<\\/b> 0.72<br><b>Intersection:<\\/b> Aco2, Cs, Dlat, Dld, Fh,<br> Idh1, Idh2, Idh3a, Mdh1, Pdhb, Sucla2, Suclg2, Pdha1,<br> Idh3b, Idh3g, Dlst, Mdh2, Ogdh, Sdha, Sdhb,<br> Suclg1\",\"<b>Similarity score:<\\/b> 0.32<br><b>Intersection:<\\/b> Aldoa, Hk2, Pfkp, Tpi1\",\"<b>Similarity score:<\\/b> 0.35<br><b>Intersection:<\\/b> Acaa2, Acads, Echs1, Hadh,<br> Hadhb, Ehhadh, Acadm\",\"<b>Similarity score:<\\/b> 0.64<br><b>Intersection:<\\/b> Acaa2, Acads, Acadvl, Acox1,<br> Echs1, Hadh, Hadhb, Acox3, Ehhadh, Acadl, Acadm,<br> Acsl1\",\"<b>Similarity score:<\\/b> 0.85<br><b>Intersection:<\\/b> Atp5f1a, Cox7a1, Mt-nd1,<br> Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4, Atp5f1c,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufv1, Taf3,<br> Atp5f1b, Atp5f1d, Atp5f1e, Atp5pf, Atp5po, Cox5a, Cox5b,<br> Cox6b1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa4,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufs8, Ndufv2, Ndufv3, Sdha, Sdhb,<br> Uqcr10, Atp5mc1, Cox4i1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-atp6, Mt-co1, Mt-co3, Mt-cyb, Mt-nd6, Ndufa3,<br> Ndufb11, Uqcrq, Atp5mc3, Atp5pb, Atp5pd, Cox6c,<br> Cox7c, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2, Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.49<br><b>Intersection:<\\/b> Atp5po, Ndufa2, Ndufs1,<br> Ndufv1, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12,<br> Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7, Atp5pf,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Sdha, Sdhb,<br> Atp5mc1, Atp5mf, Mt-atp6, Mt-nd6, Ndufa3, Ndufb11,<br> Atp5pb, Atp5pd, Ndufa5, Ndufab1, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.61<br><b>Intersection:<\\/b> Atp5po, Ndufa2, Ndufs1,<br> Ndufv1, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12,<br> Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7, Atp5pf,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Atp5mc1,<br> Atp5mf, Mt-atp6, Mt-nd6, Ndufa3, Ndufb11, Atp5pb,<br> Atp5pd, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8,<br> Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.38<br><b>Intersection:<\\/b> Got2, Got1\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Got1, Got2, Nos3\",\"<b>Similarity score:<\\/b> 0.41<br><b>Intersection:<\\/b> Got1, Got2, Gpt\",\"<b>Similarity score:<\\/b> 0.51<br><b>Intersection:<\\/b> Got2, Got1, Gpt\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Got1, Got2, Gpt\",\"<b>Similarity score:<\\/b> 0.47<br><b>Intersection:<\\/b> Acads, Dbt, Dld, Echs1,<br> Hibch, Mmut, Ehhadh, Mcee, Bckdhb, Bckdha\",\"<b>Similarity score:<\\/b> 0.31<br><b>Intersection:<\\/b> Acaa2, Acads, Echs1, Hadh,<br> Hadhb, Ehhadh, Acadm\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pdha1, Mdh2\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Mdh1, Pdhb,<br> Pkm, Pdha1, Acss2, Mdh2, Me3\",\"<b>Similarity score:<\\/b> 0.32<br><b>Intersection:<\\/b> Aco2, Cs, Dld, Mdh1, Mdh2\",\"<b>Similarity score:<\\/b> 0.61<br><b>Intersection:<\\/b> Aco2, Cs, Dld, Mdh1, Mmut,<br> Glyctk, Mcee, Acss2, Gcsh, Mdh2, Shmt2\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Acads, Acox1, Dld, Echs1,<br> Hibch, Mmut, Sucla2, Suclg2, Acox3, Mcee, Acss2,<br> Suclg1\",\"<b>Similarity score:<\\/b> 0.35<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh\",\"<b>Similarity score:<\\/b> 0.43<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh,<br> Oxct1\",\"<b>Similarity score:<\\/b> 0.34<br><b>Intersection:<\\/b> Acads, Echs1, Hadh, Ehhadh\",\"<b>Similarity score:<\\/b> 0.5<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Idh3b, Idh3g\",\"<b>Similarity score:<\\/b> 0.6<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Got1, Got2, Idh3b, Idh3g, Gpt\",\"<b>Similarity score:<\\/b> 0.68<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Pkm, Eno1, Eno3, Got1, Prps1, Aldoa, Gapdh, Got2,<br> Idh3b, Idh3g, Pfkp, Pgam1, Pgk1, Tpi1, Gpt\",\"<b>Similarity score:<\\/b> 0.74<br><b>Intersection:<\\/b> Aco2, Cs, Idh1, Idh2, Idh3a,<br> Got2, Idh3b, Idh3g, Got1, Gpt\",\"<b>Similarity score:<\\/b> 0.3<br><b>Intersection:<\\/b> Acox1, Acox3, Ehhadh, Acadl,<br> Acadm, Acsl1\",\"<b>Similarity score:<\\/b> 0.57<br><b>Intersection:<\\/b> Cox7a1, Cox5a, Cox5b, Cox6b1,<br> Uqcr10, Cox4i1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-co1, Mt-co3, Mt-cyb, Uqcrq, Cox6c, Cox7c,<br> Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.6<br><b>Intersection:<\\/b> Cox5a, Cox5b, Cox6b1, Uqcr10,<br> Cox4i1, Cox7a1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-co1, Mt-co3, Mt-cyb, Uqcrq, Cox6c, Cox7c,<br> Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Cox7a1, Cox5a, Cox5b, Cox6b1,<br> Uqcr10, Cox4i1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-co1, Mt-co3, Mt-cyb, Uqcrq, Cox6c, Cox7c,<br> Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa4,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2,<br> Ndufs3, Ndufs5, Ndufs8, Ndufv2, Ndufv3, Mt-nd6, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.69<br><b>Intersection:<\\/b> Mapk9, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10,<br> Ndufs4, Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2,<br> Ndufa4, Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs5, Ndufs8, Ndufv2, Ndufv3, Mt-nd6,<br> Ndufa3, Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.63<br><b>Intersection:<\\/b> Ndufa2, Ndufs1, Ndufv1,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufa10, Ndufa10l1,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.7<br><b>Intersection:<\\/b> Ndufa2, Ndufs1, Ndufv1,<br> Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufa10, Ndufa10l1,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.79<br><b>Intersection:<\\/b> Cox7a1, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufv1, Cox5a, Cox5b,<br> Cox6b1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa4,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufs8, Ndufv2, Ndufv3, Sdha, Sdhb,<br> Uqcr10, Cox4i1, Cox7a2, Cox7a2l2, Cox7b, Cox8b, Mt-co1,<br> Mt-co3, Mt-cyb, Ndufa3, Ndufb11, Uqcrq, Cox6c,<br> Cox7c, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2, Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.65<br><b>Intersection:<\\/b> Ndufa12, Ndufb4, Ndufa10,<br> Ndufa10l1, Ndufa2, Ndufa4, Ndufa6, Ndufa7, Ndufa8,<br> Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3, Ndufs4,<br> Ndufs5, Ndufs7, Ndufs8, Ndufv1, Ndufv2, Ndufv3,<br> Ndufa3, Ndufb11, Ndufa5, Ndufab1, Ndufb10, Ndufb5,<br> Ndufb6, Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.76<br><b>Intersection:<\\/b> Cox7a1, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufv1, Cox5a, Cox5b,<br> Cox6b1, Irs1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa4,<br> Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2,<br> Ndufs3, Ndufs5, Ndufs8, Ndufv2, Ndufv3, Sdha, Sdhb,<br> Uqcr10, Cox4i1, Cox7a2, Cox7a2l2, Cox7b, Cox8b,<br> Mt-co1, Mt-co3, Mt-cyb, Ndufa3, Ndufb11, Uqcrq,<br> Cox6c, Cox7c, Ndufa5, Ndufab1, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufc1, Ndufc2, Uqcr11, Uqcrb, Uqcrc1\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Ndufa2, Ndufs1, Ndufv1,<br> Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Sdha, Sdhb,<br> Ndufa3, Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Ndufa2, Ndufs1, Ndufv1,<br> Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.52<br><b>Intersection:<\\/b> Ndufa12, Ndufb4, Ndufa7,<br> Ndufb10, Ndufs4, Ndufs7, Ndufv1, Ndufa10, Ndufa10l1,<br> Ndufa2, Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Ndufa12, Ndufb4, Ndufa7,<br> Ndufb10, Ndufs4, Ndufs7, Ndufv1, Ndufa10, Ndufa10l1,<br> Ndufa2, Ndufa6, Ndufa8, Ndufa9, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.46<br><b>Intersection:<\\/b> Atp5po, Ndufa2, Ndufs1,<br> Ndufv1, Pdhb, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12,<br> Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7, Atp5pf,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Sdha,<br> Sdhb, Atp5mc1, Mt-atp6, Mt-nd6, Ndufa3, Ndufb11,<br> Atp5pb, Atp5pd, Ndufa5, Ndufab1, Ndufb5, Ndufb6,<br> Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Atp5po, Ndufa2, Ndufs1,<br> Ndufv1, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12,<br> Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7, Atp5pf,<br> Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufb9,<br> Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3, Atp5mc1,<br> Mt-atp6, Mt-nd6, Ndufa3, Ndufb11, Atp5pb, Atp5pd,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2, Idh3b, Mdh2, Ogdh, Sdha, Sdhb\",\"<b>Similarity score:<\\/b> 0.31<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Pdhb, Mdh2,<br> Me3\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Atp5po, Idh2, Atp5pf,<br> Atp5mc1, Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Atp5po, Atp5pf, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.86<br><b>Intersection:<\\/b> Acad9, Atp5po, Etfb, Ndufa2,<br> Ndufb3, Ndufs1, Ndufv1, Coq10a, Mt-nd1, Mt-nd2,<br> Mt-nd4, Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10,<br> Ndufs4, Ndufs7, Atp5pf, Etfa, Ndufa10, Ndufa10l1,<br> Ndufa6, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4, Ndufaf7,<br> Ndufb9, Ndufs2, Ndufs3, Ndufs5, Ndufv2, Ndufv3,<br> Ndufv3-ps1, Atp5mc1, Atp5mf, Mt-atp6, Mt-nd6, Ndufa3,<br> Ndufb11, Atp5pb, Atp5pd, Dmac2l, Ndufa5, Ndufab1,<br> Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.43<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd\",\"<b>Similarity score:<\\/b> 0.37<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Mt-atp6, Atp5pb, Atp5pd\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Atp5po, Atp5pf, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.82<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Atp5po, Atp5pf, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.36<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2, Dnajb1, Fkbp4\",\"<b>Similarity score:<\\/b> 0.71<br><b>Intersection:<\\/b> Cryab, Hsp90aa1, Hspa1a,<br> Hspa1b, Camk2d, Hspa2, Hspb8, Camk2g\",\"<b>Similarity score:<\\/b> 0.82<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2, Dnajb1, Fkbp4\",\"<b>Similarity score:<\\/b> 0.52<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2\",\"<b>Similarity score:<\\/b> 0.82<br><b>Intersection:<\\/b> Hsp90aa1, Hspa1a, Hspa1b,<br> Hspa2, Dnajb1, Fkbp4\",\"<b>Similarity score:<\\/b> 0.33<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Ogdh\",\"<b>Similarity score:<\\/b> 0.44<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Got2, Gcsh,<br> Ogdh\",\"<b>Similarity score:<\\/b> 0.34<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Ogdh, Pdhx\",\"<b>Similarity score:<\\/b> 0.47<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Pdhx\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Ogdh, Pdhx\",\"<b>Similarity score:<\\/b> 0.98<br><b>Intersection:<\\/b> Dap3, Mrpl12, Mrpl16, Mrpl17,<br> Mrpl38, Mrpl47, Mrpl53, Mrpl55, Mrps12, Mrps15,<br> Mrps16, Mrps17, Mrps21, Mrps22, Mrps23, Mrps24,<br> Mrps27, Mrps31, Mrps33, Mrps34, Mrps35, Mrps36,<br> Mrps5, Ptcd3, mrpl24, Mrpl4, Mrpl40, Mrpl45, Mrrf\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa6,<br> Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.76<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa10, Ndufa10l1, Ndufa2,<br> Ndufa6, Ndufa7, Ndufa8, Ndufa9, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufv1,<br> Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11, Ndufa5,<br> Ndufab1, Ndufb10, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa6,<br> Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.8<br><b>Intersection:<\\/b> Acad9, Etfb, Ndufa2, Ndufs1,<br> Ndufv1, Coq10a, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5,<br> Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7,<br> Etfa, Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9,<br> Ndufaf3, Ndufaf4, Ndufaf7, Ndufb9, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Ndufv3-ps1, Mt-nd6, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.91<br><b>Intersection:<\\/b> Acad9, Etfb, Ndufa2, Ndufs1,<br> Ndufv1, Coq10a, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5,<br> Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4, Ndufs7,<br> Etfa, Ndufa10, Ndufa10l1, Ndufa6, Ndufa8, Ndufa9,<br> Ndufaf3, Ndufaf4, Ndufaf7, Ndufb9, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Ndufv3-ps1, Mt-nd6, Ndufa3,<br> Ndufb11, Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7,<br> Ndufb8, Ndufc1, Ndufc2\",\"<b>Similarity score:<\\/b> 0.61<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa6,<br> Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.78<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa10, Ndufa10l1, Ndufa2,<br> Ndufa6, Ndufa7, Ndufa8, Ndufa9, Ndufb9, Ndufs1,<br> Ndufs2, Ndufs3, Ndufs4, Ndufs5, Ndufs7, Ndufv1,<br> Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11, Ndufa5,<br> Ndufab1, Ndufb10, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.59<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Ndufa10, Ndufa10l1, Ndufa2, Ndufa6,<br> Ndufa8, Ndufa9, Ndufb9, Ndufs1, Ndufs2, Ndufs3,<br> Ndufs5, Ndufv2, Ndufv3, Mt-nd6, Ndufa3, Ndufb11,<br> Ndufa5, Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.78<br><b>Intersection:<\\/b> Acad9, Ndufa2, Ndufs1,<br> Ndufv1, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufa10,<br> Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4,<br> Ndufaf7, Ndufb9, Ndufs2, Ndufs3, Ndufs5, Ndufv2,<br> Ndufv3, Ndufv3-ps1, Mt-nd6, Ndufa3, Ndufb11, Ndufa5,<br> Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.88<br><b>Intersection:<\\/b> Acad9, Ndufa2, Ndufs1,<br> Ndufv1, Mt-nd1, Mt-nd2, Mt-nd4, Mt-nd5, Ndufa12, Ndufb4,<br> Ndufa7, Ndufb10, Ndufs4, Ndufs7, Ndufa10,<br> Ndufa10l1, Ndufa6, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4,<br> Ndufaf7, Ndufb9, Ndufs2, Ndufs3, Ndufs5, Ndufv2,<br> Ndufv3, Ndufv3-ps1, Mt-nd6, Ndufa3, Ndufb11, Ndufa5,<br> Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.97<br><b>Intersection:<\\/b> Mt-nd1, Mt-nd2, Mt-nd4,<br> Mt-nd5, Ndufa12, Ndufb4, Ndufa7, Ndufb10, Ndufs4,<br> Ndufs7, Ndufv1, Acad9, Ndufa10, Ndufa10l1, Ndufa2,<br> Ndufa6, Ndufa8, Ndufa9, Ndufaf3, Ndufaf4, Ndufaf7,<br> Ndufb9, Ndufs1, Ndufs2, Ndufs3, Ndufs5, Ndufv2,<br> Ndufv3, Ndufv3-ps1, Mt-nd6, Ndufa3, Ndufb11, Ndufa5,<br> Ndufab1, Ndufb5, Ndufb6, Ndufb7, Ndufb8, Ndufc1,<br> Ndufc2\",\"<b>Similarity score:<\\/b> 0.57<br><b>Intersection:<\\/b> Aldoa, Hk2, Tpi1, Pfkfb1,<br> Pfkfb3\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Hk2,<br> Pgam1, Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.42<br><b>Intersection:<\\/b> Eno3, Aldoa, Gapdh, Pgam1,<br> Pgk1, Tpi1\",\"<b>Similarity score:<\\/b> 0.31<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb\",\"<b>Similarity score:<\\/b> 0.55<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Pdpr, Bsg,<br> Ldhb, Pdhx\",\"<b>Similarity score:<\\/b> 0.57<br><b>Intersection:<\\/b> Dlat, Dld, Pdhb, Pdpr, Bsg,<br> Pdhx\",\"<b>Similarity score:<\\/b> 0.43<br><b>Intersection:<\\/b> Dbt, Dld, Hibadh, Hibch\",\"<b>Similarity score:<\\/b> 0.32<br><b>Intersection:<\\/b> Dbt, Dld, Hibch\",\"<b>Similarity score:<\\/b> 0.66<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2, Idh3b, Mdh2, Ogdh, Sdha, Sdhb\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2, Idh3b, Mdh2, Me3, Ogdh, Sdha, Sdhb\",\"<b>Similarity score:<\\/b> 0.59<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2, Idh3b, Mdh2, Me3, Ogdh, Sdha, Sdhb, Nnt\",\"<b>Similarity score:<\\/b> 0.82<br><b>Intersection:<\\/b> Aco2, Dld, Fh, Idh2, Sucla2,<br> Suclg2, Idh3b, Mdh2, Me3, Ogdh, Sdha, Sdhb, Nnt\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2, Idh3b, Mdh2, Ogdh, Sdha, Sdhb\",\"<b>Similarity score:<\\/b> 0.39<br><b>Intersection:<\\/b> Dlat, Dld, Fh, Pdhb, Mdh2,<br> Me3\",\"<b>Similarity score:<\\/b> 0.48<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Sucla2, Suclg2, Idh3b, Mdh2, Me3, Ogdh, Sdha,<br> Sdhb\",\"<b>Similarity score:<\\/b> 0.63<br><b>Intersection:<\\/b> Aco2, Dlat, Dld, Fh, Idh2,<br> Pdhb, Pdpr, Sucla2, Suclg2, Bsg, Idh3b, L2hgdh,<br> Mdh2, Me3, Ogdh, Pdhx, Sdha, Sdhb, Nnt, Slc16a1\",\"<b>Similarity score:<\\/b> 0.43<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd\",\"<b>Similarity score:<\\/b> 0.37<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Mt-atp6, Atp5pb, Atp5pd\",\"<b>Similarity score:<\\/b> 0.56<br><b>Intersection:<\\/b> Atp5po, Atp5pf, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.82<br><b>Intersection:<\\/b> Atp5pf, Atp5po, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 0.58<br><b>Intersection:<\\/b> Atp5po, Atp5pf, Atp5mc1,<br> Atp5mf, Mt-atp6, Atp5pb, Atp5pd, Dmac2l\",\"<b>Similarity score:<\\/b> 1<br><b>Intersection:<\\/b> Atp5mc1, Atp5mf, Mt-atp6,<br> Atp5pb, Atp5pd, Atp5pf, Atp5po, Dmac2l\",\"<b>Similarity score:<\\/b> 0.32<br><b>Intersection:<\\/b> Echs1, Hadh, Hadhb, Eci2,<br> Eci3, Ehhadh, Acadl, Acsl1\",\"<b>Similarity score:<\\/b> 0.4<br><b>Intersection:<\\/b> Echs1, Hadh, Hadhb, Hsd17b4,<br> Ehhadh, Acadl, Acsl1, Cbr4, Fasn, Hsd17b8\",\"<b>Similarity score:<\\/b> 0.78<br><b>Intersection:<\\/b> Acsf2, Echs1, Hadh, Hadhb,<br> Mmut, Acad11, Acot11, Dbi, Mcee, Acad10, Acadl,<br> Acot13, Acot9, Them4\"],\"color.colorphysics\":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\"color.highlightlabelHighlightBold\":[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"interaction\":{\"hideEdgesOnZoom\":false,\"tooltipDelay\":10,\"zoomSpeed\":0.3},\"edges\":{\"smooth\":false},\"physics\":{\"stabilization\":false}},\"groups\":[\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"0: Cell growth and death (1/3)\",\"5: Cellular response to heat stress (2/4)\",\"8: Mitochondrial translation (2/2)\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Muscle 8w_F1_M1\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"legend\":{\"width\":0.3,\"useGroups\":false,\"position\":\"left\",\"ncol\":1,\"stepX\":100,\"stepY\":40,\"zoom\":false,\"nodes\":{\"label\":[\"0: Cell growth and death (1/3)\",\"1: Carbohydrate metabolism (4/15)\",\"2: Fatty acid metabolism (3/9)\",\"3: Respiratory electron transport, ATP synthesis by chemiosmotic coupling, and heat production by uncoupling proteins. (3/12)\",\"5: Cellular response to heat stress (2/4)\",\"8: Mitochondrial translation (2/2)\"],\"shape\":[\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"color\":[\"#E78AC3\",\"#66C2A5\",\"#FC8D62\",\"#8DA0CB\",\"#A6D854\",\"#FFD92F\"],\"physics\":[false,false,false,false,false,false]},\"nodesToDataframe\":true},\"tooltipStay\":null,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"igraphlayout\":{\"type\":\"square\"}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_main_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract main graphical clusters — extract_main_clusters","title":"Extract main graphical clusters — extract_main_clusters","text":"Return data frame features 2 largest nodes, 2 largest edges, 10 largest non-null paths, 8-week nodes graphical representation training-regulated features tissue. code replicates graphical clusters pathway enrichment performed landscape manuscript.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_main_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract main graphical clusters — extract_main_clusters","text":"","code":"extract_main_clusters()"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_main_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract main graphical clusters — extract_main_clusters","text":"data frame 5 columns one row per combination feature ID cluster: feature character, unique feature identifier format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training-regulated features 5% IHW FDR. redundant differential features, 'feature_ID' prepended specific platform make unique identifiers. See MotrpacRatTraining6moData::REPEATED_FEATURES details. cluster character, cluster label ome character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV feature_ID character, MoTrPAC feature identifier","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_main_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract main graphical clusters — extract_main_clusters","text":"Notes cluster labels: clusters prefixed tissue abbreviation colon, e.g. \"SKM-GN:\" Nodes defined time point state sex, state 1 , 0 null, -1 . example, \"1w_F-1_M-1\" node characterizes molecules \"1w\" time point -regulated females (\"F-1\") -regulated males (\"M-1\"). three pieces information (time point, female state, male state) separated underscores (\"_\") Edges contain \"---\" connect pair nodes Paths contain \"->\" connect four nodes","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_main_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract main graphical clusters — extract_main_clusters","text":"","code":"cluster_df = extract_main_clusters()"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"auxiliary function getting top analyte sets set tissues.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"","code":"extract_tissue_sets(   tissues,   node_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$node_sets,   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,   k = 3,   min_size = 20,   add_week8 = TRUE,   omes = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"tissues character vector. names tissues (one ) considered. node_sets named list node (state) sets analytes/features. GRAPH_COMPONENTS$node_sets default. edge_sets named list edge (state) sets analytes/features. GRAPH_COMPONENTS$edge_sets default. k integer. many node/edge/trajectory sets extract. See details. min_size integer specifying minimal path size considered. add_week8 logical. TRUE (default): add week 8 nodes node set. omes character vector (optional). names omes (one ) considered.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"named list. Names correspond cluster names (can correspond node, edge, trajectory).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"function useful extracting largest sets specific set tissues omes. Thus, useful step running enrichment analysis sets analytes identified graphical clustering analysis. specifying k user can control many sets include. default three, means top largest node sets, edge sets, full trajectories extracted (three ). Naming format: Analyte names ome;tissue;feature_id format. Node set names: week_Fdifferential regulation status_Mdifferential regulation status. Example 1: 1w_F1_M0 means -regulation females week 1 null (zero effect) males week 1. Example 2: 1w_F1_M-1 means -regulation females week 1 -regulation males week 1. edge set object named list string vectors. name edge node_id---node_id. full trajectory annotated node_id->node_id->node_id->node_id. example: 1w_F-1_M-1->2w_F-1_M-1->4w_F-1_M-1->8w_F-1_M-1. See bayesian_graphical_clustering details graphical analysis.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_tissue_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An auxiliary function for getting the top analyte sets for a set of tissues. — extract_tissue_sets","text":"","code":"filtered_solution = extract_tissue_sets(    tissues = c(\"HEART\",\"SKM-VL\",\"SKM-GN\") )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_top_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract top trajectories — extract_top_trajectories","title":"Extract top trajectories — extract_top_trajectories","text":"Get features corresponding top k largest trajectories training-regulated features given tissue(s) ome(s). Optionally include features non-null 8-week nodes well (e.g., 8w_F1_M1, 8w_F0_M-1).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_top_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract top trajectories — extract_top_trajectories","text":"","code":"extract_top_trajectories(   tissues,   omes = MotrpacRatTraining6moData::ASSAY_ABBREV,   k = 5,   min_size = 5,   add_week8 = FALSE,   node_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$node_sets,   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_top_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract top trajectories — extract_top_trajectories","text":"tissues character, tissue abbreviation, least one MotrpacRatTraining6moData::TISSUE_ABBREV omes character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV. assays default. k integer, return top k largest trajectories/paths least min_size features. Default: 5 min_size integer, minimal cluster size considered. Clusters fewer number features excluded. Default: 5 add_week8 logical, whether include non-null 8-week nodes least min_size features addition top k largest trajectories/paths. Default: FALSE node_sets named list node (state) sets analytes/features. GRAPH_COMPONENTS$node_sets default. edge_sets named list edge (state) sets analytes/features. GRAPH_COMPONENTS$edge_sets default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_top_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract top trajectories — extract_top_trajectories","text":"named list names names graphical clusters (paths/trajectories , optionally, non-null 8-week nodes) values vectors training-regulated features belong cluster, format ASSAY_ABBREV;TISSUE_ABBREV;[feature_ID].","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/extract_top_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract top trajectories — extract_top_trajectories","text":"","code":"# Top 3 trajectories of training-regulated proteins in the liver res = extract_top_trajectories(\"LIVER\", omes=\"PROT\", k=3) names(res) #> [1] \"1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1\" #> [2] \"1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F1_M1\"   #> [3] \"1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1\"   lapply(res, length) #> $`1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1` #> [1] 68 #>  #> $`1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F1_M1` #> [1] 52 #>  #> $`1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1` #> [1] 41 #>   # Top 5 trajectories and 8-week nodes for the union of training-regulated  # features in the heart and gastrocnemius (all omes) res = extract_top_trajectories(c(\"HEART\",\"SKM-GN\"), add_week8=TRUE) names(res) #>  [1] \"8w_F1_M1\"                                       #>  [2] \"8w_F-1_M-1\"                                     #>  [3] \"8w_F-1_M0\"                                      #>  [4] \"8w_F-1_M1\"                                      #>  [5] \"8w_F0_M-1\"                                      #>  [6] \"8w_F0_M1\"                                       #>  [7] \"8w_F1_M-1\"                                      #>  [8] \"8w_F1_M0\"                                       #>  [9] \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\"         #> [10] \"1w_F-1_M-1->2w_F-1_M-1->4w_F-1_M-1->8w_F-1_M-1\" #> [11] \"1w_F0_M1->2w_F0_M1->4w_F1_M1->8w_F1_M1\"         #> [12] \"1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1\"         #> [13] \"1w_F0_M-1->2w_F0_M-1->4w_F-1_M-1->8w_F-1_M-1\"   lapply(res, length) #> $`8w_F1_M1` #> [1] 1828 #>  #> $`8w_F-1_M-1` #> [1] 1267 #>  #> $`8w_F-1_M0` #> [1] 341 #>  #> $`8w_F-1_M1` #> [1] 28 #>  #> $`8w_F0_M-1` #> [1] 362 #>  #> $`8w_F0_M1` #> [1] 404 #>  #> $`8w_F1_M-1` #> [1] 18 #>  #> $`8w_F1_M0` #> [1] 267 #>  #> $`1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1` #> [1] 606 #>  #> $`1w_F-1_M-1->2w_F-1_M-1->4w_F-1_M-1->8w_F-1_M-1` #> [1] 406 #>  #> $`1w_F0_M1->2w_F0_M1->4w_F1_M1->8w_F1_M1` #> [1] 245 #>  #> $`1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1` #> [1] 132 #>  #> $`1w_F0_M-1->2w_F0_M-1->4w_F-1_M-1->8w_F-1_M-1` #> [1] 129 #>"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_edge_sets_by_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","title":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","text":"Keep edges top trajectories edge set graphical solution.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_edge_sets_by_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","text":"","code":"filter_edge_sets_by_trajectories(   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,   topk = 5,   min_path_size = 5 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_edge_sets_by_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","text":"edge_sets named list string vectors. name edge node_id---node_id edges analytes NULL set (set size zero, still represented), node ids [timepoints]_F[x]_M[y] x y represent /state sex. GRAPH_COMPONENTS$edge_sets default. topk number. maximal number full trajectories include new solution. min_path_size integer specifying minimal path size considered.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_edge_sets_by_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","text":"named list edge sets. possible edges 9 x 4 grid appear solution. Edges removed features/analytes entry.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_edge_sets_by_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter edge sets to largest trajectories — filter_edge_sets_by_trajectories","text":"","code":"if (FALSE) { ### Example 1: Simulate data with a single cluster zcolnames = c(   paste(\"female\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\"),   paste(\"male\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\") ) zscores = matrix(rnorm(80000),ncol=8,dimnames = list(1:10000,zcolnames)) # now add a cluster with a strong signal and rerun zscores[1:500,1:4] = zscores[1:500,1:4] + 5  # run the clustering solution wrapper clustering_sol = bayesian_graphical_clustering(zscores)  # extract the top full trajectories in the data # these should be the clusters with at least 10 features min_cluster_size=10 get_trajectory_sizes_from_edge_sets(clustering_sol$edge_sets, min_size = min_cluster_size)  # extract the edges of the top two full trjectories # this step \"cleans\" the edge sets by removing edges of trajectories with very few features top2traj_edge_sets = filter_edge_sets_by_trajectories(clustering_sol$edge_sets,                                                       topk = 2,                                                       min_path_size = 10) # examine the new edge set sizes, excluded edges should have zero size sapply(top2traj_edge_sets,length) # for comparison examine the edge sets of the Bayesian clustering solution: sapply(clustering_sol$edge_sets,length) }  ### Example 2: Use published data # Get edges corresponding to 5 largest trajectories in the liver tissue_edge_sets = limit_sets_by_regex(MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,                                        \"LIVER\") res = filter_edge_sets_by_trajectories(tissue_edge_sets) lapply(res[1:10], head) #> $`0w---1w_F-1_M-1` #> character(0) #>  #> $`0w---1w_F-1_M0` #> character(0) #>  #> $`0w---1w_F-1_M1` #> character(0) #>  #> $`0w---1w_F0_M-1` #> character(0) #>  #> $`0w---1w_F0_M0` #> [1] \"ACETYL;LIVER;NP_001004250.1_K85k\"  \"ACETYL;LIVER;NP_001005875.1_K52k\"  #> [3] \"ACETYL;LIVER;NP_001006996.1_K136k\" \"ACETYL;LIVER;NP_001007667.1_K213k\" #> [5] \"ACETYL;LIVER;NP_001007804.1_K126k\" \"ACETYL;LIVER;NP_001009600.1_K134k\" #>  #> $`0w---1w_F0_M1` #> [1] \"ACETYL;LIVER;AP_004896.1_K54k\"     \"ACETYL;LIVER;NP_001004085.1_K395k\" #> [3] \"ACETYL;LIVER;NP_001004258.1_K350k\" \"ACETYL;LIVER;NP_001005550.1_K311k\" #> [5] \"ACETYL;LIVER;NP_001006967.1_K158k\" \"ACETYL;LIVER;NP_001006971.1_K158k\" #>  #> $`0w---1w_F1_M-1` #> character(0) #>  #> $`0w---1w_F1_M0` #> character(0) #>  #> $`0w---1w_F1_M1` #> [1] \"ACETYL;LIVER;NP_001013175.1_K397k\" \"ACETYL;LIVER;NP_001014181.2_K32k\"  #> [3] \"ACETYL;LIVER;NP_001094009.1_K125k\" \"ACETYL;LIVER;NP_001099389.1_K85k\"  #> [5] \"ACETYL;LIVER;NP_001101226.1_K384k\" \"ACETYL;LIVER;NP_001101972.2_K531k\" #>  #> $`1w_F-1_M-1---2w_F-1_M-1` #> character(0) #>"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter outliers — filter_outliers","title":"Filter outliers — filter_outliers","text":"Filter list outliers belonging specified dataset. Used specify sex-specific outliers within differential analysis functions.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter outliers — filter_outliers","text":"","code":"filter_outliers(   tissue = NULL,   sex = NULL,   outliers = MotrpacRatTraining6moData::OUTLIERS$viallabel )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter outliers — filter_outliers","text":"tissue optional character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV sex optional character, one 'male' 'female' outliers vector vial labels consider outliers. Defaults vial labels MotrpacRatTraining6moData::OUTLIERS.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter outliers — filter_outliers","text":"character vector, subset outliers correspond specified tissue sex","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/filter_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter outliers — filter_outliers","text":"","code":"curr_outliers = filter_outliers(tissue=\"HIPPOC\") curr_outliers = filter_outliers(tissue=\"HIPPOC\", sex=\"male\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/find_flanks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find human flanks — find_flanks","title":"Find human flanks — find_flanks","text":"Find flanking sequence human ortholog PTM","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/find_flanks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find human flanks — find_flanks","text":"","code":"find_flanks(x, fasta, type = \"uniprot\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/find_flanks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find human flanks — find_flanks","text":"x character, human accession PTM, e.g., \"Q96QG7_S548s\" fasta Biostrings::XStringSet object returned reading human protein FASTA file Biostrings::readAAStringSet(). Names Biostrings::XStringSet object set human protein accession, e.g., \"Q96QG7\". Can result load_uniprot_human_fasta(), returns version Uniprot human protein FASTA used manuscript. type character, type accession","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/find_flanks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find human flanks — find_flanks","text":"character, pipe-separated string human flanking sequences PTM","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/find_flanks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find human flanks — find_flanks","text":"","code":"fasta = load_uniprot_human_fasta(scratchdir=\"/tmp\") #> Found more than one class \"file\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘RJSONIO’ #> Found more than one class \"file\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘RJSONIO’ x = \"Q96QG7_S548s\" find_flanks(x, fasta) #> [1] \"TEDGMQESP______\""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/fix_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Format covariates for differential analysis — fix_covariates","title":"Format covariates for differential analysis — fix_covariates","text":"fewer 5% values missing continuous covariate, replace missing values mean meta. Otherwise, remove covariate covar. values missing factor covariate, remove covariate covar. covariate constant values, remove covar. Note covariates removed covar, meta.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/fix_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format covariates for differential analysis — fix_covariates","text":"","code":"fix_covariates(covar, meta, center_scale = FALSE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/fix_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format covariates for differential analysis — fix_covariates","text":"covar string character vector covariate names correspond column names meta meta sample variable data frame metadata center_scale boolean, whether center scale continuous variables","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/fix_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format covariates for differential analysis — fix_covariates","text":"named list two items: meta data frame input meta covariates imputed /centered scaled necessary covariates character vector input covar removing covariates necessary","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/fix_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format covariates for differential analysis — fix_covariates","text":"","code":"meta = data.frame(V1 = c(rnorm(19), NA),                   V2 = c(rnorm(12), rep(NA, 8))) covar = c(\"V1\",\"V2\") result = fix_covariates(covar, meta) #> Warning: Numeric variable of interest V1 has 1 missing values. Replacing missing values with mean. #> Warning: Numeric variable of interest V2 has 8 missing values. Removing. result = fix_covariates(covar, meta, center_scale = TRUE) #> Warning: Numeric variable of interest V1 has 1 missing values. Replacing missing values with mean. #> Warning: Numeric variable of interest V2 has 8 missing values. Removing."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/forest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Print forest plot — forest_plot","title":"Print forest plot — forest_plot","text":"Make forest plot present multiple measurements consensus effect size meta-analysis meta-regression. Note using metab_meta_regression() results input generates single forest plot using metab_meta_analysis() generates one forest plot per sex training time point.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/forest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print forest plot — forest_plot","text":"","code":"forest_plot(results, metabolite_refmet)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/forest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print forest plot — forest_plot","text":"results named list returned metab_meta_analysis() metab_meta_regression() metabolite_refmet character, RefMet name metabolite","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/forest_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print forest plot — forest_plot","text":"","code":"# Get meta-analysis results in gastrocnemius res = metab_meta_analysis(\"SKM-GN\") #> Computed 1000 meta-analysis results. # Pick a feature res$merged_res[res$merged_res$min_nominal_p > 0.01 &    res$merged_res$p_value < 0.001 &    res$merged_res$I2 < 30,] #>         sex comparison_group #> 108  female               1w #> 2099 female               2w #> 2862 female               4w #> 3432 female               8w #> 4429   male               1w #> 4432   male               1w #> 4446   male               1w #> 5249   male               1w #> 5478   male               2w #> 5532   male               2w #> 6299   male               2w #> 8112   male               8w #>                                                  metabolite_refmet assay tissue #> 108                                                       CAR(5:1) metab SKM-GN #> 2099                                   sn-Glycero-3-phosphocholine metab SKM-GN #> 2862                                              Pantothenic acid metab SKM-GN #> 3432                                                Hydroxyproline metab SKM-GN #> 4429   GTInternalStandard_PG(33:1(d7))>PG(15:0/18:1(9z,d7))_[iSTD] metab SKM-GN #> 4432 GTInternalStandard_SM(d36:2(d9))>SM(d18:1/18:1(9z,d9))_[iSTD] metab SKM-GN #> 4446                                              Glycocholic acid metab SKM-GN #> 5249                                   sn-Glycero-3-phosphocholine metab SKM-GN #> 5478   GTInternalStandard_PE(33:1(d7))>PE(15:0/18:1(9z,d7))_[iSTD] metab SKM-GN #> 5532                                                Hydroxyproline metab SKM-GN #> 6299                                   sn-Glycero-3-phosphocholine metab SKM-GN #> 8112                                              Pantothenic acid metab SKM-GN #>                                                         feature_ID #> 108                                                       CAR(5:1) #> 2099                                   sn-Glycero-3-phosphocholine #> 2862                                              Pantothenic acid #> 3432                                                Hydroxyproline #> 4429   GTInternalStandard_PG(33:1(d7))>PG(15:0/18:1(9z,d7))_[iSTD] #> 4432 GTInternalStandard_SM(d36:2(d9))>SM(d18:1/18:1(9z,d9))_[iSTD] #> 4446                                              Glycocholic acid #> 5249                                   sn-Glycero-3-phosphocholine #> 5478   GTInternalStandard_PE(33:1(d7))>PE(15:0/18:1(9z,d7))_[iSTD] #> 5532                                                Hydroxyproline #> 6299                                   sn-Glycero-3-phosphocholine #> 8112                                              Pantothenic acid #>            dataset #> 108  meta-analysis #> 2099 meta-analysis #> 2862 meta-analysis #> 3432 meta-analysis #> 4429 meta-analysis #> 4432 meta-analysis #> 4446 meta-analysis #> 5249 meta-analysis #> 5478 meta-analysis #> 5532 meta-analysis #> 6299 meta-analysis #> 8112 meta-analysis #>                                                                              site #> 108                            broad_met_metab-u-hilicpos,umichigan_metab-u-rppos #> 2099      broad_met_metab-u-hilicpos,umichigan_metab-u-rppos,gtech_metab-u-lrppos #> 2862 broad_met_metab-u-hilicpos,umichigan_metab-u-ionpneg,umichigan_metab-u-rppos #> 3432                               mayo_metab-t-amines,broad_met_metab-u-hilicpos #> 4429                                    gtech_metab-u-lrpneg,gtech_metab-u-lrppos #> 4432                                    gtech_metab-u-lrpneg,gtech_metab-u-lrppos #> 4446                              umichigan_metab-u-rpneg,umichigan_metab-u-rppos #> 5249      broad_met_metab-u-hilicpos,umichigan_metab-u-rppos,gtech_metab-u-lrppos #> 5478                                    gtech_metab-u-lrpneg,gtech_metab-u-lrppos #> 5532                               mayo_metab-t-amines,broad_met_metab-u-hilicpos #> 6299      broad_met_metab-u-hilicpos,umichigan_metab-u-rppos,gtech_metab-u-lrppos #> 8112 broad_met_metab-u-hilicpos,umichigan_metab-u-ionpneg,umichigan_metab-u-rppos #>      is_targeted      p_value      logFC   logFC_se    zscore #> 108        FALSE 4.841644e-04 -0.5758692 0.16503541 -3.489368 #> 2099       FALSE 6.544064e-04  0.4686258 0.13750754  3.408001 #> 2862       FALSE 3.406216e-04  0.3060600 0.08543744  3.582270 #> 3432        TRUE 9.536402e-04 -0.3046291 0.09220404 -3.303858 #> 4429       FALSE 7.826054e-04  0.3640958 0.10839816  3.358875 #> 4432       FALSE 5.159665e-04  0.4174081 0.12020989  3.472327 #> 4446       FALSE 6.450540e-04 -1.1678238 0.34227691 -3.411927 #> 5249       FALSE 1.792113e-04  0.4447678 0.11871077  3.746651 #> 5478       FALSE 4.179376e-04  0.3531405 0.10008262  3.528490 #> 5532        TRUE 9.629043e-04 -0.3405629 0.10316502 -3.301147 #> 6299       FALSE 3.349122e-05  0.4924512 0.11871077  4.148328 #> 8112       FALSE 8.632438e-04  0.3061200 0.09188165  3.331677 #>      comparison_average_intensity reference_average_intensity          cv I2 #> 108                    -4.1092037                 -3.53090938 -0.10893402  0 #> 2099                    1.8168518                  1.30986661  0.03913089  0 #> 2862                    2.8271107                  2.51087905  0.18007120  0 #> 3432                   -0.7270632                 -0.41528566  0.38359076  0 #> 4429                    0.6793974                  0.30164023  0.55245674  0 #> 4432                    1.2316318                  0.80838007 -0.35725084  0 #> 4446                   -2.2427630                 -0.96682118  0.50344964  0 #> 5249                    1.8369527                  1.35632835  0.03913089  0 #> 5478                   -1.2236410                 -1.58092761 -0.25444384  0 #> 5532                   -0.2696902                  0.09878938  0.38359076  0 #> 6299                    1.8599337                  1.35632835  0.03913089  0 #> 8112                    3.4759829                  3.15871906  0.18007120  0 #>            QEp min_nominal_p #> 108  0.7004254    0.01278231 #> 2099 0.5622604    0.02531945 #> 2862 0.4013032    0.01064808 #> 3432 0.8463470    0.01541556 #> 4429 0.7875212    0.01330945 #> 4432 0.8283815    0.01716247 #> 4446 0.4944695    0.01984936 #> 5249 0.5973926    0.02049050 #> 5478 0.8959178    0.01109714 #> 5532 0.6280688    0.01631298 #> 6299 0.7921142    0.01300881 #> 8112 0.9411143    0.03725202 forest_plot(res, metabolite_refmet=\"Hydroxyproline\")          # Look at meta-regression results for a feature in the plasma res = metab_meta_regression(\"PLASMA\") #> Warning: PLASMA differential analysis results have ref standard results. Excluding them from meta-analysis. #> Performing meta-regression for 121 redundant metabolites in PLASMA... #> Done. #> Number of models that were fit for PLASMA:  #>                                                                 metareg_nplatform #> metareg_calls                                                     2  3  4  5 #>   list(~analysis_group | platform, ~analysis_group | istargeted)  0 26 10  4 #>   x_subset                                                        2  1  0  1 #>   FE                                                             77  0  0  0 #> Total number of cases with high heterogeneity: 9 #> Total number of cases with low heterogeneity: 112 #>  #> Summary of the number of PLASMA metabolites in each category:  #>                                 PLASMA #> unique_metabs                      961 #> high_het_metabs_targeted             8 #> high_het_metabs_untargeted_only      1 #> meta_anal_metabs                   112 forest_plot(res, metabolite_refmet=\"CAR(18:2)\")   res = metab_meta_regression(\"BAT\") #> Warning: BAT differential analysis results have ref standard results. Excluding them from meta-analysis. #> Performing meta-regression for 111 redundant metabolites in BAT... #> Done. #> Number of models that were fit for BAT:  #>                                                                 metareg_nplatform #> metareg_calls                                                     2  3  4  5 #>   list(~analysis_group | platform, ~analysis_group | istargeted)  0 29  8  4 #>   x_subset                                                        0  4  1  0 #>   FE                                                             65  0  0  0 #> Total number of cases with high heterogeneity: 11 #> Total number of cases with low heterogeneity: 100 #>  #> Summary of the number of BAT metabolites in each category:  #>                                  BAT #> unique_metabs                   1024 #> high_het_metabs_targeted           9 #> high_het_metabs_untargeted_only    2 #> meta_anal_metabs                 100 forest_plot(res, metabolite_refmet=\"Aspartic acid\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Format gene lists — format_gene_lists","title":"Format gene lists — format_gene_lists","text":"Apply add_line_breaks() points$enriched column. Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format gene lists — format_gene_lists","text":"","code":"format_gene_lists(x)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format gene lists — format_gene_lists","text":"x value points$enriched column","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format gene lists — format_gene_lists","text":"character, new value additional line breaks","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Format gene symbols — format_gene_symbols","title":"Format gene symbols — format_gene_symbols","text":"Format string comma-separated gene symbols use enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format gene symbols — format_gene_symbols","text":"","code":"format_gene_symbols(x, return_N = TRUE, collapse = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format gene symbols — format_gene_symbols","text":"x character, comma-separated gene symbols return_N boolean, whether prepend concatenated gene symbols number unique gene symbols. TRUE default. collapse boolean, whether collapse gene symbols comma-separated string. , return vector unique gene symbols. TRUE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/format_gene_symbols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format gene symbols — format_gene_symbols","text":"either string comma-separated gene symbols, vector unique gene symbols, named list two values (\"N\" \"genes\") depending values return_N collapse.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/gene_pathway_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene pathway enrichment — gene_pathway_enrichment","title":"Gene pathway enrichment — gene_pathway_enrichment","text":"Perform pathway enrichment list genes. Wrapper gprofiler2::gost().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/gene_pathway_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene pathway enrichment — gene_pathway_enrichment","text":"","code":"gene_pathway_enrichment(   input,   background,   organism = \"rnorvegicus\",   databases = c(\"REAC\", \"WP\", \"KEGG\"),   min_pw_set_size = 10,   max_pw_set_size = 200,   return_gem = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/gene_pathway_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene pathway enrichment — gene_pathway_enrichment","text":"input vector gene identifiers background vector gene identifiers universe/background. Must include input. include genes candidates input, e.g., expressed genes. performing pathway enrichment genes identified MotrpacRatTraining6moData, see MotrpacRatTraining6moData::GENE_UNIVERSES. See custom_bg argument gprofiler2::gost(). organism character, species name. Default: \"rnorvegicus\" See organism argument gprofiler2::gost(). databases character, vector databases search. See sources argument gprofiler2::gost(). min_pw_set_size integer, exclude pathways smaller . Default: 10 max_pw_set_size integer, exclude pathways larger . Default: 200 return_gem bool, whether return data frame compatible Generic Enrichment Map (GEM) file format, can used input Cytoscape EnrichmentMap application. Default: FALSE","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/gene_pathway_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene pathway enrichment — gene_pathway_enrichment","text":"data frame pathway enrichment results. return_gem=TRUE, column names changed add added compatible Generic Enrichment Map (GEM) file format. Otherwise, columns defined follows: query character, name input query default order query prefix \"query_\" significant bool, whether gprofiler2::gost() enrichment p-value less 0.05 term_size integer, number genes annotated term query_size integer, number genes included query (gprofiler2::gost()) intersection_size integer, number genes input query annotated corresponding term precision double, proportion genes input list annotated function, defined intersection_size/query_size recall double, proportion functionally annotated genes query recovers, defined intersection_size/term_size term_id character, unique term/pathway identifier source character, abbreviation data source term/pathway term_name character, term/pathway name effective_domain_size integer, total number genes universe used hypergeometric test source_order integer, numeric order term within data source parents list term IDs hierarchically directly term. non-hierarchical data sources points artificial root node evidence_codes character, comma-separated evidence codes intersection character, input gene IDs intersect term/pathway gost_adj_p_value double, improperly adjusted hypergeometric p-value gprofiler2::gost(). reference ; used filter results unless single list genes input. computed_p_value double, nominal hypergeometric p-value, computed gprofiler2::gost() output BH_adj_p_value double, BH-adjusted p-values, calculated computed_p_value","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/gene_pathway_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene pathway enrichment — gene_pathway_enrichment","text":"","code":"# Perform pathway enrichment for differential transcripts in the liver diff = MotrpacRatTraining6moData::TRAINING_REGULATED_FEATURES input_feat = diff$feature_ID[diff$tissue == \"LIVER\" & diff$assay == \"TRNSCRPT\"] map = MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT input = unique(map$gene_symbol[map$feature_ID %in% input_feat]) background = MotrpacRatTraining6moData::GENE_UNIVERSES$gene_symbol$TRNSCRPT$LIVER res = gene_pathway_enrichment(input, background) head(res) #>     query significant term_size query_size intersection_size  precision #> 1 query_1        TRUE        18        266                 8 0.03007519 #> 2 query_1        TRUE        17        266                 8 0.03007519 #> 3 query_1        TRUE       126        266                15 0.05639098 #> 4 query_1        TRUE        18        266                 6 0.02255639 #> 5 query_1        TRUE        70        266                10 0.03759398 #> 6 query_1        TRUE        44        266                 8 0.03007519 #>      recall            term_id source #> 1 0.4444444         KEGG:00100   KEGG #> 2 0.4705882           WP:WP632     WP #> 3 0.1190476  REAC:R-RNO-211859   REAC #> 4 0.3333333  REAC:R-RNO-191273   REAC #> 5 0.1428571 REAC:R-RNO-8957322   REAC #> 6 0.1818182          WP:WP2562     WP #>                                    term_name effective_domain_size source_order #> 1                       Steroid biosynthesis                 13653           13 #> 2                     Cholesterol metabolism                 13653           60 #> 3                      Biological oxidations                 13653          169 #> 4                   Cholesterol biosynthesis                 13653          272 #> 5                     Metabolism of steroids                 13653          816 #> 6 Relationship between glutathione and NADPH                 13653          128 #>              parents #> 1         KEGG:00000 #> 2          WP:000000 #> 3 REAC:R-RNO-1430728 #> 4 REAC:R-RNO-8957322 #> 5  REAC:R-RNO-556833 #> 6          WP:000000 #>                                                               evidence_codesintersection #> 1                                                         Hsd17b7,Cyp51,Sqle,Dhcr7,Tm7sf2,Fdft1,Msmo1,Lss #> 2                                                               Idi1,Apoc2,Dhcr7,Fdft1,Msmo1,Fdps,Mvk,Lss #> 3 Tpst1,Ugt2a3,Nnmt,Cyp51,Ugp2,Cyb5r3,Cyp7b1,Glyat,Gclm,Slc26a2,Hsp90ab1,Cyp2a1,Cyp2a2,Cyp4f39,AC123346.1 #> 4                                                                     Cyp51,Sqle,Dhcr7,Tm7sf2,Fdft1,Msmo1 #> 5                                      Cyp51,Serpina6,Sqle,Cyp7b1,Slc27a5,Stard4,Dhcr7,Tm7sf2,Fdft1,Msmo1 #> 6                                                                Ltc4s,Ugp2,Txn1,Gclm,Ptgr1,Fas,Ftl1,G6pd #>   gost_adj_p_value computed_p_value BH_adj_p_value #> 1     8.913588e-08     6.909758e-10   2.152390e-07 #> 2     2.576828e-08     3.904285e-10   2.152390e-07 #> 3     4.970778e-06     2.224062e-08   4.618635e-06 #> 4     1.054690e-04     7.883838e-07   1.175967e-04 #> 5     1.054690e-04     9.437938e-07   1.175967e-04 #> 6     3.968764e-05     1.803984e-06   1.873137e-04"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_all_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all non-empty trajectories — get_all_trajectories","title":"Remove all non-empty trajectories — get_all_trajectories","text":"Remove non-empty trajectories","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_all_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all non-empty trajectories — get_all_trajectories","text":"","code":"get_all_trajectories(   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,   node_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$node_sets,   tissues = MotrpacRatTraining6moData::TISSUE_ABBREV,   omes = MotrpacRatTraining6moData::ASSAY_ABBREV )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_all_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all non-empty trajectories — get_all_trajectories","text":"edge_sets named list edge (state) sets analytes/features. GRAPH_COMPONENTS$edge_sets default. node_sets named list node (state) sets analytes/features. GRAPH_COMPONENTS$node_sets default. tissues string vector, optional. tissue subset. tissues default omes string vector, optional. ome subset. omes default","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_all_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all non-empty trajectories — get_all_trajectories","text":"named list one element per trajectories. members features path","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_all_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove all non-empty trajectories — get_all_trajectories","text":"","code":"# Get lists of features belonging to all trajectories in the liver liver = get_all_trajectories(tissues = \"LIVER\") lapply(liver[1:5], head) #> $`1w_F0_M1->2w_F0_M1->4w_F0_M1->8w_F1_M1` #> [1] \"ACETYL;LIVER;AP_004896.1_K54k\"     \"ACETYL;LIVER;NP_001004258.1_K350k\" #> [3] \"ACETYL;LIVER;NP_001006971.1_K41k\"  \"ACETYL;LIVER;NP_001006971.1_K434k\" #> [5] \"ACETYL;LIVER;NP_001006982.2_K278k\" \"ACETYL;LIVER;NP_001006982.2_K441k\" #>  #> $`1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F1_M1` #> [1] \"ACETYL;LIVER;NP_001004250.1_K85k\"  \"ACETYL;LIVER;NP_001007667.1_K213k\" #> [3] \"ACETYL;LIVER;NP_001007804.1_K126k\" \"ACETYL;LIVER;NP_001013175.1_K224k\" #> [5] \"ACETYL;LIVER;NP_001014183.1_K106k\" \"ACETYL;LIVER;NP_001014183.1_K155k\" #>  #> $`1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F-1_M-1` #> [1] \"ACETYL;LIVER;NP_001009706.1_K59k\"  \"ACETYL;LIVER;NP_001014157.1_K569k\" #> [3] \"ACETYL;LIVER;NP_001014262.3_K171k\" \"ACETYL;LIVER;NP_001014262.3_K246k\" #> [5] \"ACETYL;LIVER;NP_001014262.3_K75k\"  \"ACETYL;LIVER;NP_001041307.1_K648k\" #>  #> $`1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1` #> [1] \"ACETYL;LIVER;NP_001013175.1_K397k\" \"ACETYL;LIVER;NP_001014181.2_K32k\"  #> [3] \"ACETYL;LIVER;NP_001094009.1_K125k\" \"ACETYL;LIVER;NP_001101972.2_K531k\" #> [5] \"ACETYL;LIVER;NP_001101972.2_K538k\" \"ACETYL;LIVER;NP_001101972.2_K545k\" #>  #> $`1w_F0_M0->2w_F0_M0->4w_F0_M0->8w_F0_M-1` #> [1] \"ACETYL;LIVER;NP_001012177.1_K141k\" \"ACETYL;LIVER;NP_001014262.3_K68k\"  #> [3] \"ACETYL;LIVER;NP_001093972.1_K578k\" \"ACETYL;LIVER;NP_001102492.1_K211k\" #> [5] \"ACETYL;LIVER;NP_001102492.1_K97k\"  \"ACETYL;LIVER;NP_001102560.1_K215k\" #>"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_file_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load file from GCS — get_file_from_url","title":"Load file from GCS — get_file_from_url","text":"Function download text file web.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_file_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load file from GCS — get_file_from_url","text":"","code":"get_file_from_url(url, scratchdir = \".\", return_data_table = FALSE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_file_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load file from GCS — get_file_from_url","text":"url character, Google Cloud Storage URL, e.g., \"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/training-da/PHOSPHO/pass1b-06_t70-white-adipose_prot-ph_training-dea-fdr.txt\" scratchdir character, local directory download data web. Current working directory default. Downloaded files deleted returning result. return_data_table bool, whether return data table. FALSE, return data frame. FALSE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_file_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load file from GCS — get_file_from_url","text":"data frame, data table return_data_table = TRUE","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_file_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load file from GCS — get_file_from_url","text":"","code":"# Get phosphoproteomics training differential analysis results for white adipose  res = get_file_from_url(paste0(c(\"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/\",   \"training-da/PHOSPHO/pass1b-06_t70-white-adipose_prot-ph_training-dea-fdr.txt\"),collapse=\"\"))"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get genomic peak annotations — get_peak_annotations","title":"Get genomic peak annotations — get_peak_annotations","text":"Get fix peak annotations ChIPseeker::annotatePeak()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get genomic peak annotations — get_peak_annotations","text":"","code":"get_peak_annotations(   counts,   species = \"Rattus norvegicus\",   release = 96,   txdb = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get genomic peak annotations — get_peak_annotations","text":"counts data table data frame columns 'chrom','start','end', 'feature_ID' ATAC , data frame row names feature IDs format format 'chrom:start-end' species character, scientific name organism create Ensembl database GenomicFeatures::makeTxDbFromEnsembl() release integer, Ensembl release query. set NA, current release used. txdb optional GenomicFeatures::TxDb object, case database regenerated","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get genomic peak annotations — get_peak_annotations","text":"data frame formatted ChIPseeker::annotatePeak() output additional columns \"custom_annotation\" \"relationship_to_gene\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get genomic peak annotations — get_peak_annotations","text":"\"relationship_to_gene\" shortest distance feature start end closest gene. 0 feature overlap gene. \"custom_annotation\" fixes many issues ChIPseeker annotation (v1.22.1).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_peak_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get genomic peak annotations — get_peak_annotations","text":"","code":"if (FALSE) { # Load raw ATAC-seq counts for one tissue  raw_counts = load_sample_data(\"SKM-GN\",                               \"ATAC\",                               normalized = FALSE,                               scratchdir = \"/tmp\") pa = get_peak_annotations(raw_counts) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load RData from GCS — get_rdata_from_url","title":"Load RData from GCS — get_rdata_from_url","text":"Function download RData web. Intended download epigenetic data Google Cloud Storage can used public URL points RData file.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load RData from GCS — get_rdata_from_url","text":"","code":"get_rdata_from_url(   tissue = NULL,   assay = NULL,   suffix = NULL,   scratchdir = \".\",   url = NULL,   obj_name = NULL,   nrows = Inf )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load RData from GCS — get_rdata_from_url","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV. used url NULL. assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV. used url NULL. suffix character, object suffix. used url NULL. scratchdir character, local directory download data web. Current working directory default. Downloaded files deleted returning result. url character, RData URL. Optional URL constructed tissue, assay, suffix. obj_name character, name object saved within RData file. required one object saved RData file. nrows integer, number rows return. Defaults Inf.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load RData from GCS — get_rdata_from_url","text":"object saved RData file, optionally specified obj_name","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load RData from GCS — get_rdata_from_url","text":"See readme repository available files: https://github.com/MoTrPAC/MotrpacRatTraining6moData/blob/main/README.md","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_rdata_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load RData from GCS — get_rdata_from_url","text":"","code":"if (FALSE) { # return gastrocnemius chromatin accessibility differential analysis results  data = get_rdata_from_url(tissue=\"SKM-GN\", assay=\"ATAC\", suffix=\"DA\", scratchdir=\"/tmp\")  # return brown adipose DNA methylation raw counts  data = get_rdata_from_url(tissue=\"BAT\", assay=\"METHYL\", suffix=\"RAW_COUNTS\", scratchdir=\"/tmp\")  # return DNA methylation feature annotation data = get_rdata_from_url(   url=paste0(\"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/\",              \"epigen-rda/METHYL_FEATURE_ANNOT.rda\"),    scratchdir=\"/tmp\" )  # return raw DNA methylation data for brown adipose data = get_rdata_from_url(   url=paste0(\"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/\",              \"epigen-rda/METHYL_BAT_RAW_DATA.rda\"),    scratchdir=\"/tmp\" ) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"Auxiliary function getting largest paths graphical solution.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"","code":"get_trajectory_sizes_from_edge_sets(   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,   min_size = 10 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"edge_sets named list string vectors. name edge [node_id]---[node_id] edges analytes NULL set (set size zero, still represented), node ids [timepoint]_F[x]_M[y] x y represent /state sex. GRAPH_COMPONENTS$edge_sets default. min_size integer specifying minimal path size considered.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"NULL paths size least min_size found, otherwise return data frame represents paths size min_size greater, ranked largest path smallest one.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"implemented using dynamic programming approach iteratively add data next edge. analyzing edge (x,y) set analytes s, extend trajectories end x using new edge, also trajectories start y. end, examine edges extensions guaranteed covered full paths. min_size parameter important, since interested paths edges least number analytes, know current trajectory least min_size analytes, since set extension can smaller can ignore paths moving forward. However, parameter considered care, specifying number high result paths output. See bayesian_graphical_clustering details graphical analysis.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_trajectory_sizes_from_edge_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get trajectory sizes — get_trajectory_sizes_from_edge_sets","text":"","code":"if (FALSE) { ### Example 1: Simulate data with a single cluster zcolnames = c(   paste(\"female\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\"),   paste(\"male\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\") ) zscores = matrix(rnorm(80000),ncol=8,dimnames = list(1:10000,zcolnames)) # now add a cluster with a strong signal and rerun zscores[1:500,1:4] = zscores[1:500,1:4] + 5  # run the clustering solution wrapper clustering_sol = bayesian_graphical_clustering(zscores)  # extract the top full trajectories in the data # these should be the clusters with at least 10 features min_cluster_size=10 get_trajectory_sizes_from_edge_sets(clustering_sol$edge_sets,                                      min_size = min_cluster_size)  # extract the edges of the top two full trajectories # this step \"cleans\" the edge sets by removing edges of trajectories with very few features top2traj_edge_sets = filter_edge_sets_by_trajectories(   clustering_sol$edge_sets,    topk = 2,    min_path_size = 10 ) # examine the new edge set sizes, excluded edges should have zero size sapply(top2traj_edge_sets,length) }  ### Example 2: Use published data  get_trajectory_sizes_from_edge_sets() #>     X1         X2         X3         X4         X5   X6 #> 18  0w  1w_F-1_M1  2w_F-1_M0  4w_F-1_M0  8w_F-1_M0 1459 #> 146 0w   1w_F0_M1   2w_F0_M1   4w_F0_M1   8w_F1_M1 1112 #> 190 0w   1w_F1_M1   2w_F1_M1   4w_F1_M1   8w_F1_M1 1078 #> 122 0w   1w_F0_M0   2w_F0_M0   4w_F0_M0   8w_F1_M1  987 #> 66  0w   1w_F0_M0   2w_F0_M0   4w_F0_M0 8w_F-1_M-1  946 #> 139 0w   1w_F0_M1   2w_F0_M1   4w_F0_M1   8w_F0_M1  824 #> 1   0w 1w_F-1_M-1 2w_F-1_M-1 4w_F-1_M-1 8w_F-1_M-1  718 #> 36  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M0   8w_F0_M1  698 #> 106 0w   1w_F0_M0   2w_F0_M0   4w_F0_M0   8w_F0_M1  594 #> 82  0w   1w_F0_M0   2w_F0_M0   4w_F0_M0  8w_F0_M-1  578 #> 52  0w  1w_F0_M-1  2w_F0_M-1  4w_F0_M-1  8w_F0_M-1  478 #> 74  0w   1w_F0_M1   2w_F0_M1   4w_F0_M0  8w_F-1_M0  476 #> 14  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M0 8w_F-1_M-1  460 #> 184 0w   1w_F0_M1   2w_F0_M1   4w_F1_M1   8w_F1_M1  423 #> 173 0w   1w_F1_M0   2w_F1_M0   4w_F1_M0   8w_F1_M1  403 #> 112 0w  1w_F0_M-1  2w_F0_M-1   4w_F0_M0   8w_F1_M0  396 #> 158 0w   1w_F1_M0   2w_F1_M0   4w_F1_M0   8w_F0_M0  396 #> 159 0w   1w_F1_M0   2w_F1_M1   4w_F1_M0   8w_F0_M0  384 #> 167 0w  1w_F1_M-1   2w_F1_M0   4w_F1_M0   8w_F1_M0  340 #> 144 0w   1w_F0_M0   2w_F0_M0   4w_F0_M1   8w_F1_M1  330 #> 99  0w   1w_F1_M0   2w_F1_M0   4w_F0_M0   8w_F0_M0  327 #> 34  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M0   8w_F0_M0  322 #> 136 0w   1w_F0_M0   2w_F0_M0   4w_F0_M1   8w_F0_M1  303 #> 90  0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0   8w_F0_M0  282 #> 5   0w  1w_F0_M-1  2w_F0_M-1 4w_F-1_M-1 8w_F-1_M-1  278 #> 110 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0   8w_F1_M0  266 #> 57  0w  1w_F0_M-1  2w_F0_M-1  4w_F0_M-1   8w_F0_M0  264 #> 168 0w   1w_F1_M0   2w_F1_M0   4w_F1_M0   8w_F1_M0  251 #> 31  0w 1w_F-1_M-1 2w_F-1_M-1  4w_F-1_M0   8w_F0_M0  250 #> 189 0w   1w_F1_M0   2w_F1_M1   4w_F1_M1   8w_F1_M1  230 #> 76  0w   1w_F1_M0   2w_F1_M0   4w_F0_M0  8w_F-1_M0  223 #> 49  0w   1w_F0_M0   2w_F0_M0  4w_F0_M-1 8w_F-1_M-1  209 #> 6   0w   1w_F0_M0   2w_F0_M0 4w_F-1_M-1 8w_F-1_M-1  208 #> 97  0w   1w_F0_M1   2w_F0_M1   4w_F0_M0   8w_F0_M0  197 #> 43  0w  1w_F-1_M1  2w_F-1_M1  4w_F-1_M1  8w_F-1_M1  196 #> 182 0w   1w_F0_M0   2w_F0_M0   4w_F1_M1   8w_F1_M1  191 #> 187 0w   1w_F1_M0   2w_F1_M0   4w_F1_M1   8w_F1_M1  190 #> 131 0w   1w_F1_M1   2w_F0_M1   4w_F0_M1   8w_F0_M0  185 #> 140 0w   1w_F1_M1   2w_F0_M1   4w_F0_M1   8w_F0_M1  185 #> 130 0w   1w_F0_M1   2w_F0_M1   4w_F0_M1   8w_F0_M0  177 #> 155 0w   1w_F1_M0   2w_F1_M0   4w_F1_M0  8w_F0_M-1  176 #> 177 0w   1w_F1_M1   2w_F1_M1   4w_F1_M1   8w_F0_M0  176 #> 32  0w  1w_F-1_M0 2w_F-1_M-1  4w_F-1_M0   8w_F0_M0  173 #> 16  0w   1w_F0_M0   2w_F0_M0  4w_F-1_M0 8w_F-1_M-1  171 #> 126 0w   1w_F0_M1   2w_F0_M1   4w_F0_M1  8w_F-1_M0  159 #> 166 0w  1w_F0_M-1   2w_F1_M0   4w_F1_M0   8w_F1_M0  159 #> 170 0w   1w_F0_M0   2w_F0_M0   4w_F1_M0   8w_F1_M1  157 #> 4   0w  1w_F-1_M0  2w_F-1_M0 4w_F-1_M-1 8w_F-1_M-1  152 #> 87  0w 1w_F-1_M-1 2w_F-1_M-1   4w_F0_M0   8w_F0_M0  152 #> 101 0w   1w_F1_M1   2w_F1_M1   4w_F0_M0   8w_F0_M0  151 #> 154 0w  1w_F1_M-1  2w_F1_M-1   4w_F1_M0  8w_F0_M-1  151 #> 25  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M0  8w_F-1_M1  149 #> 88  0w  1w_F-1_M0 2w_F-1_M-1   4w_F0_M0   8w_F0_M0  148 #> 64  0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0 8w_F-1_M-1  146 #> 72  0w   1w_F1_M0   2w_F0_M0   4w_F0_M0  8w_F-1_M0  143 #> 100 0w   1w_F1_M0   2w_F1_M1   4w_F0_M0   8w_F0_M0  143 #> 17  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M0  8w_F-1_M0  141 #> 44  0w  1w_F-1_M0  2w_F-1_M0  4w_F-1_M1   8w_F0_M1  138 #> 12  0w 1w_F-1_M-1 2w_F-1_M-1 4w_F-1_M-1   8w_F0_M0  136 #> 165 0w  1w_F1_M-1  2w_F1_M-1   4w_F1_M0   8w_F1_M0  132 #> 21  0w  1w_F-1_M1  2w_F-1_M1  4w_F-1_M0  8w_F-1_M0  128 #> 85  0w   1w_F0_M1   2w_F0_M1   4w_F0_M0  8w_F0_M-1  122 #> 188 0w   1w_F0_M1   2w_F1_M1   4w_F1_M1   8w_F1_M1  120 #> 53  0w   1w_F0_M0   2w_F0_M0  4w_F0_M-1  8w_F0_M-1  116 #> 7   0w 1w_F-1_M-1 2w_F-1_M-1 4w_F-1_M-1  8w_F-1_M0  113 #> 86  0w   1w_F1_M0   2w_F1_M0   4w_F0_M0  8w_F0_M-1  113 #> 83  0w   1w_F1_M0   2w_F0_M0   4w_F0_M0  8w_F0_M-1  112 #> 38  0w   1w_F0_M0   2w_F0_M0  4w_F-1_M0   8w_F0_M1  110 #> 102 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0   8w_F0_M1  109 #> 103 0w  1w_F0_M-1  2w_F0_M-1   4w_F0_M0   8w_F0_M1  108 #> 54  0w  1w_F1_M-1  2w_F1_M-1  4w_F0_M-1  8w_F0_M-1  106 #> 2   0w  1w_F-1_M0 2w_F-1_M-1 4w_F-1_M-1 8w_F-1_M-1  105 #> 124 0w   1w_F1_M0   2w_F1_M0   4w_F0_M0   8w_F1_M1  104 #> 9   0w  1w_F0_M-1  2w_F0_M-1 4w_F-1_M-1  8w_F-1_M0  100 #> 24  0w   1w_F0_M1   2w_F0_M1  4w_F-1_M0  8w_F-1_M0   97 #> 51  0w 1w_F-1_M-1 2w_F-1_M-1  4w_F0_M-1  8w_F0_M-1   96 #> 142 0w   1w_F1_M1   2w_F1_M1   4w_F0_M1   8w_F0_M1   92 #> 11  0w 1w_F-1_M-1 2w_F-1_M-1 4w_F-1_M-1  8w_F0_M-1   88 #> 109 0w  1w_F-1_M0 2w_F-1_M-1   4w_F0_M0   8w_F1_M0   86 #> 125 0w  1w_F-1_M0  2w_F-1_M1   4w_F0_M1  8w_F-1_M0   86 #> 48  0w  1w_F0_M-1  2w_F0_M-1  4w_F0_M-1 8w_F-1_M-1   85 #> 134 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M1   8w_F0_M1   84 #> 186 0w   1w_F1_M1   2w_F0_M1   4w_F1_M1   8w_F1_M1   84 #> 28  0w  1w_F-1_M1  2w_F-1_M1  4w_F-1_M0  8w_F-1_M1   83 #> 133 0w   1w_F1_M1   2w_F1_M1   4w_F0_M1   8w_F0_M0   83 #> 20  0w   1w_F0_M1  2w_F-1_M0  4w_F-1_M0  8w_F-1_M0   82 #> 50  0w  1w_F1_M-1  2w_F1_M-1  4w_F0_M-1 8w_F-1_M-1   81 #> 92  0w  1w_F0_M-1  2w_F0_M-1   4w_F0_M0   8w_F0_M0   81 #> 40  0w  1w_F-1_M1  2w_F-1_M1  4w_F-1_M1  8w_F-1_M0   80 #> 56  0w 1w_F-1_M-1 2w_F-1_M-1  4w_F0_M-1   8w_F0_M0   79 #> 150 0w  1w_F1_M-1  2w_F1_M-1  4w_F1_M-1   8w_F1_M0   76 #> 181 0w   1w_F1_M1   2w_F1_M1   4w_F1_M1   8w_F1_M0   75 #> 143 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M1   8w_F1_M1   74 #> 69  0w   1w_F0_M1  2w_F-1_M0   4w_F0_M0  8w_F-1_M0   72 #> 157 0w  1w_F1_M-1   2w_F1_M0   4w_F1_M0   8w_F0_M0   71 #> 81  0w  1w_F0_M-1  2w_F0_M-1   4w_F0_M0  8w_F0_M-1   70 #> 22  0w   1w_F0_M0   2w_F0_M0  4w_F-1_M0  8w_F-1_M0   68 #> 10  0w   1w_F0_M0   2w_F0_M0 4w_F-1_M-1  8w_F-1_M0   66 #> 29  0w 1w_F-1_M-1 2w_F-1_M-1  4w_F-1_M0  8w_F0_M-1   66 #> 116 0w   1w_F0_M0   2w_F0_M0   4w_F0_M0   8w_F1_M0   65 #> 164 0w   1w_F1_M0   2w_F0_M0   4w_F1_M0   8w_F1_M0   64 #> 148 0w  1w_F1_M-1  2w_F1_M-1  4w_F1_M-1  8w_F1_M-1   63 #> 163 0w   1w_F0_M0   2w_F0_M0   4w_F1_M0   8w_F1_M0   63 #> 62  0w  1w_F0_M-1  2w_F0_M-1  4w_F0_M-1   8w_F1_M0   61 #> 95  0w   1w_F1_M0   2w_F0_M0   4w_F0_M0   8w_F0_M0   57 #> 160 0w   1w_F1_M1   2w_F1_M1   4w_F1_M0   8w_F0_M0   57 #> 117 0w  1w_F0_M-1   2w_F1_M0   4w_F0_M0   8w_F1_M0   56 #> 55  0w   1w_F1_M0   2w_F1_M0  4w_F0_M-1  8w_F0_M-1   55 #> 59  0w  1w_F1_M-1  2w_F1_M-1  4w_F0_M-1   8w_F0_M0   54 #> 60  0w   1w_F1_M0   2w_F1_M0  4w_F0_M-1   8w_F0_M0   54 #> 178 0w   1w_F0_M1   2w_F0_M1   4w_F1_M1   8w_F0_M1   54 #> 15  0w   1w_F0_M0  2w_F-1_M0  4w_F-1_M0 8w_F-1_M-1   53 #> 93  0w 1w_F-1_M-1   2w_F0_M0   4w_F0_M0   8w_F0_M0   51 #> 104 0w  1w_F-1_M0   2w_F0_M0   4w_F0_M0   8w_F0_M1   51 #> 179 0w   1w_F1_M1   2w_F1_M1   4w_F1_M1   8w_F0_M1   51 #> 3   0w  1w_F0_M-1 2w_F-1_M-1 4w_F-1_M-1 8w_F-1_M-1   50 #> 65  0w   1w_F0_M0  2w_F-1_M0   4w_F0_M0 8w_F-1_M-1   50 #> 94  0w  1w_F-1_M0   2w_F0_M0   4w_F0_M0   8w_F0_M0   49 #> 8   0w  1w_F-1_M0  2w_F-1_M0 4w_F-1_M-1  8w_F-1_M0   48 #> 107 0w   1w_F0_M1   2w_F0_M1   4w_F0_M0   8w_F0_M1   48 #> 105 0w  1w_F0_M-1   2w_F0_M0   4w_F0_M0   8w_F0_M1   47 #> 132 0w   1w_F0_M1   2w_F1_M1   4w_F0_M1   8w_F0_M0   47 #> 39  0w   1w_F0_M1   2w_F0_M1  4w_F-1_M0   8w_F0_M1   46 #> 120 0w   1w_F1_M1   2w_F1_M1   4w_F0_M0   8w_F1_M0   46 #> 135 0w  1w_F-1_M1  2w_F-1_M1   4w_F0_M1   8w_F0_M1   46 #> 169 0w   1w_F1_M1   2w_F1_M1   4w_F1_M0   8w_F1_M0   46 #> 171 0w   1w_F1_M0   2w_F0_M0   4w_F1_M0   8w_F1_M1   46 #> 156 0w  1w_F1_M-1  2w_F1_M-1   4w_F1_M0   8w_F0_M0   45 #> 26  0w  1w_F-1_M1  2w_F-1_M0  4w_F-1_M0  8w_F-1_M1   44 #> 61  0w  1w_F0_M-1  2w_F0_M-1  4w_F0_M-1   8w_F0_M1   43 #> 58  0w   1w_F1_M0   2w_F0_M0  4w_F0_M-1   8w_F0_M0   42 #> 121 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0   8w_F1_M1   42 #> 137 0w   1w_F1_M0   2w_F0_M0   4w_F0_M1   8w_F0_M1   42 #> 70  0w   1w_F0_M0   2w_F0_M0   4w_F0_M0  8w_F-1_M0   41 #> 162 0w  1w_F0_M-1  2w_F0_M-1   4w_F1_M0   8w_F1_M0   41 #> 30  0w 1w_F-1_M-1  2w_F-1_M0  4w_F-1_M0  8w_F0_M-1   40 #> 27  0w   1w_F0_M0  2w_F-1_M0  4w_F-1_M0  8w_F-1_M1   39 #> 13  0w  1w_F0_M-1  2w_F0_M-1 4w_F-1_M-1   8w_F0_M0   38 #> 78  0w   1w_F0_M0  2w_F-1_M0   4w_F0_M0  8w_F-1_M1   38 #> 84  0w   1w_F0_M0   2w_F0_M1   4w_F0_M0  8w_F0_M-1   38 #> 175 0w   1w_F0_M1   2w_F0_M1   4w_F1_M1   8w_F0_M0   38 #> 123 0w   1w_F0_M1   2w_F0_M1   4w_F0_M0   8w_F1_M1   37 #> 180 0w   1w_F1_M0   2w_F0_M0   4w_F1_M1   8w_F1_M0   37 #> 79  0w   1w_F0_M1  2w_F-1_M1   4w_F0_M0  8w_F-1_M1   35 #> 152 0w   1w_F0_M0   2w_F0_M0   4w_F1_M0  8w_F0_M-1   35 #> 141 0w   1w_F1_M0   2w_F1_M0   4w_F0_M1   8w_F0_M1   34 #> 176 0w   1w_F1_M1   2w_F0_M1   4w_F1_M1   8w_F0_M0   34 #> 183 0w   1w_F0_M0   2w_F0_M1   4w_F1_M1   8w_F1_M1   34 #> 19  0w   1w_F0_M0  2w_F-1_M0  4w_F-1_M0  8w_F-1_M0   33 #> 111 0w   1w_F0_M0  2w_F-1_M0   4w_F0_M0   8w_F1_M0   33 #> 68  0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0  8w_F-1_M0   31 #> 80  0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M0  8w_F0_M-1   31 #> 47  0w  1w_F0_M-1 2w_F-1_M-1  4w_F0_M-1 8w_F-1_M-1   29 #> 63  0w  1w_F0_M-1  2w_F1_M-1  4w_F0_M-1   8w_F1_M0   29 #> 75  0w   1w_F0_M0   2w_F1_M0   4w_F0_M0  8w_F-1_M0   29 #> 153 0w   1w_F1_M0   2w_F0_M0   4w_F1_M0  8w_F0_M-1   29 #> 33  0w 1w_F-1_M-1  2w_F-1_M0  4w_F-1_M0   8w_F0_M0   28 #> 98  0w  1w_F0_M-1   2w_F1_M0   4w_F0_M0   8w_F0_M0   28 #> 119 0w   1w_F1_M0   2w_F1_M1   4w_F0_M0   8w_F1_M0   28 #> 128 0w  1w_F-1_M0  2w_F-1_M0   4w_F0_M1   8w_F0_M0   28 #> 138 0w   1w_F0_M0   2w_F0_M1   4w_F0_M1   8w_F0_M1   28 #> 37  0w   1w_F0_M0  2w_F-1_M0  4w_F-1_M0   8w_F0_M1   27 #> 114 0w  1w_F-1_M0   2w_F0_M0   4w_F0_M0   8w_F1_M0   27 #> 149 0w  1w_F0_M-1  2w_F0_M-1  4w_F1_M-1   8w_F1_M0   27 #> 185 0w   1w_F1_M0   2w_F0_M1   4w_F1_M1   8w_F1_M1   27 #> 41  0w   1w_F0_M1  2w_F-1_M1  4w_F-1_M1  8w_F-1_M0   26 #> 45  0w   1w_F0_M1  2w_F-1_M1  4w_F-1_M1   8w_F0_M1   26 #> 129 0w  1w_F-1_M0   2w_F0_M1   4w_F0_M1   8w_F0_M0   26 #> 161 0w   1w_F1_M0   2w_F1_M0   4w_F1_M0  8w_F1_M-1   26 #> 71  0w   1w_F0_M1   2w_F0_M0   4w_F0_M0  8w_F-1_M0   25 #> 115 0w  1w_F0_M-1   2w_F0_M0   4w_F0_M0   8w_F1_M0   25 #> 147 0w  1w_F1_M-1  2w_F1_M-1  4w_F1_M-1  8w_F0_M-1   25 #> 23  0w  1w_F-1_M1   2w_F0_M1  4w_F-1_M0  8w_F-1_M0   24 #> 127 0w  1w_F-1_M1  2w_F-1_M1   4w_F0_M1  8w_F-1_M1   24 #> 145 0w   1w_F0_M0   2w_F0_M1   4w_F0_M1   8w_F1_M1   24 #> 174 0w   1w_F1_M0   2w_F1_M1   4w_F1_M0   8w_F1_M1   24 #> 113 0w   1w_F0_M0  2w_F0_M-1   4w_F0_M0   8w_F1_M0   23 #> 151 0w   1w_F1_M0   2w_F1_M0  4w_F1_M-1   8w_F1_M0   23 #> 46  0w   1w_F0_M1   2w_F0_M1  4w_F-1_M1   8w_F0_M1   22 #> 35  0w 1w_F-1_M-1  2w_F-1_M0  4w_F-1_M0   8w_F0_M1   21 #> 96  0w   1w_F1_M1   2w_F0_M0   4w_F0_M0   8w_F0_M0   21 #> 172 0w   1w_F0_M0   2w_F1_M0   4w_F1_M0   8w_F1_M1   21 #> 108 0w   1w_F1_M0   2w_F1_M0   4w_F0_M0   8w_F0_M1   20 #> 118 0w   1w_F1_M0   2w_F1_M0   4w_F0_M0   8w_F1_M0   18 #> 42  0w   1w_F0_M1   2w_F0_M1  4w_F-1_M1  8w_F-1_M0   17 #> 73  0w   1w_F0_M0   2w_F0_M1   4w_F0_M0  8w_F-1_M0   17 #> 91  0w  1w_F-1_M0  2w_F0_M-1   4w_F0_M0   8w_F0_M0   17 #> 67  0w   1w_F0_M1   2w_F0_M1   4w_F0_M0 8w_F-1_M-1   14 #> 89  0w  1w_F0_M-1 2w_F-1_M-1   4w_F0_M0   8w_F0_M0   13 #> 77  0w   1w_F1_M0   2w_F1_M1   4w_F0_M0  8w_F-1_M0   11"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph representation of feature trajectories — get_tree_plot_for_tissue","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"main function obtaining graphical (tree) representation differential analysis results.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"","code":"get_tree_plot_for_tissue(   tissues,   omes = NULL,   node_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$node_sets,   edge_sets = MotrpacRatTraining6moData::GRAPH_COMPONENTS$edge_sets,   min_size = 20,   parallel_edges_by_ome = FALSE,   parallel_edges_by_tissue = FALSE,   edge_width_range = c(0, 10),   edge_alpha_range = c(0, 1),   color_nodes_by_states = TRUE,   max_trajectories = NULL,   highlight_subset = NULL,   curvature = 0.1 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"tissues character vector values MotrpacRatTraining6moData::TISSUE_ABBREV. set tissues take analysis. NULL take . omes character vector values MotrpacRatTraining6moData::ASSAY_ABBREV. set omes take analysis. NULL take . node_sets named list node (state) sets analytes/features, see details analyte name convention. GRAPH_COMPONENTS$node_sets default. edge_sets named list edge (state) sets analytes/features, see details analyte name convention. GRAPH_COMPONENTS$edge_sets default. min_size numeric. threshold set sizes considered. parallel_edges_by_ome logical. TRUE means want added parallel edges different omes. parallel_edges_by_tissue logical. TRUE means want added parallel edges different tissues. edge_width_range numeric vector size 2, parameter ggraph edge_alpha_range numeric vector size 2, parameter ggraph color_nodes_by_states logical. TRUE, nodes colored states. Red -reg, blue -reg, green discrepancy sexes. max_trajectories numeric NULL. NULL specifies number pathways keep looking edge sets filtering omes tissues.  parallel_edges_by_tissue = TRUE take top trajectories tissue. highlight_subset character string NULL. NULL specifies name node, edge, path highlight tree. curvature number 0 1, larger values yield curved edges.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"graph object","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"function filters input set include analytes given tissues omes (tissues/omes null). parallel edges requested relevant edge sizes computed internally used within ggraph output plot. Analyte names ASSAY_ABBREV;TISSUE_ABBREV;[feature_ID] format. Node set names [{1,2,4,8}]w_F[{-1,0,1}]_M[{-1,0,1}] format example: 1w_F-1_M0. Edge set names [node_a]---[node_b] format, e.g., 4w_F0_M0---8w_F0_M1.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/get_tree_plot_for_tissue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph representation of feature trajectories — get_tree_plot_for_tissue","text":"","code":"if (FALSE) { ### Example 1: redo the analysis using the rat data differential analysis results (z-scores) data(REPFDR_INPUTS, package=\"MotrpacRatTraining6moData\") zscores = REPFDR_INPUTS$zs_smoothed rat_data_clustering_sol = bayesian_graphical_clustering(zscores) # extract the largest trajectories get_trajectory_sizes_from_edge_sets(rat_data_clustering_sol$edge_sets,min_size = 50) # plot the top trajectories of the muscle tissues, color edges by tissue get_tree_plot_for_tissue(tissues = c(\"SKM-GN\",\"HEART\",\"SKM-VL\"),                          omes = \"TRNSCRPT\",                          node_sets = rat_data_clustering_sol$node_sets,                           edge_sets = rat_data_clustering_sol$edge_sets,                           min_size = 20,                          parallel_edges_by_tissue = TRUE,                          max_trajectories = 3) }  ### Example 2: load the graphical solutions from MotrpacRatTraining6moData  ### and plot without rerunning the algorithm get_tree_plot_for_tissue(   tissues=c(\"SKM-GN\",\"HEART\",\"SKM-VL\"),   omes=\"TRNSCRPT\",   min_size = 20,   parallel_edges_by_tissue = TRUE,   max_trajectories = 3 ) #> Using \"sugiyama\" as default layout #> Warning: Ignoring `graph` as layout is already calculated #> ℹ Pass the calculated layout to the `graph` argument to silence this warning"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_timewise_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Immunoassay timewise differential analysis — immuno_timewise_da","title":"Immunoassay timewise differential analysis — immuno_timewise_da","text":"panel tissue, perform pairwise contrasts group trained animals sex-matched control group. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_timewise_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Immunoassay timewise differential analysis — immuno_timewise_da","text":"","code":"immuno_timewise_da()"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_timewise_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Immunoassay timewise differential analysis — immuno_timewise_da","text":"data frame one row per immunoassay feature per contrast (usually 8 rows per feature): feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. dataset character, LUMINEX panel tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. covariates character, comma-separated list adjustment variables logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_timewise_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Immunoassay timewise differential analysis — immuno_timewise_da","text":"","code":"res = immuno_timewise_da() #> Group 2w in rat-mag27plex:GCSF:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:EOTAXIN:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:GMCSF:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL1A:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:MIP1A:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL4:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL2:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL6:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:EGF:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL13:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL12P70:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IFNY:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL5:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL17:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:IL18:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:MCP1:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:KC:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:VEGF:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:FRACTALKINE:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:LIX:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:MIP2:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:TNFA:COLON:male has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex:RANTES:COLON:male has less than 2 values. Removing remaining samples in this group."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Immunoassay training differential analysis — immuno_training_da","title":"Immunoassay training differential analysis — immuno_training_da","text":"panel tissue, perform likelihood ratio test test effect training across time points. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Immunoassay training differential analysis — immuno_training_da","text":"","code":"immuno_training_da()"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Immunoassay training differential analysis — immuno_training_da","text":"data frame one row per feature: feature_ID character, MoTrPAC feature identifier assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. dataset character, LUMINEX panel tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. removed_samples_male character, comma-separated list male samples (vial labels) removed differential analysis removed_samples_female character, comma-separated list female samples (vial labels) removed differential analysis lrt_male double, likelihood ratio test statistic males lrt_female double, likelihood ratio test statistic females p_value_male double, nominal LRT p-value males p_value_female double, nominal LRT p-value females full_model character, full model used LRT males females reduced_model character, reduced model used LRT males females p_value double, combined male female nominal p-value using sum logs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/immuno_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Immunoassay training differential analysis — immuno_training_da","text":"","code":"res = immuno_training_da() #> Group 2w in rat-mag27plex COLON male GCSF has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male TNFA has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL18 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL17 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL4 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL5 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male LIX has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male FRACTALKINE has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL12P70 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male VEGF has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male GMCSF has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL13 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male MCP1 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male RANTES has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL6 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male MIP2 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male EOTAXIN has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL1A has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male MIP1A has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IL2 has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male EGF has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male KC has less than 2 values. Removing remaining samples in this group. #> Group 2w in rat-mag27plex COLON male IFNY has less than 2 values. Removing remaining samples in this group."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a list of sets by a regex — limit_sets_by_regex","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"auxiliary function useful filtering differential analyte sets tissues omes.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"","code":"limit_sets_by_regex(sets, regs, append_semicol = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"sets named list character vectors. regs character vector regular expressions append_semicol logical. TRUE (default): append ';' suffix regex.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"named list filtered sets","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"function added helping managing output Bayesian clustering real data. takes list analyte (e.g., gene ids) sets removes items match regular expressions regs.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limit_sets_by_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce a list of sets by a regex — limit_sets_by_regex","text":"","code":"sets = list(   \"cluster1\" = c(\"muscle;g1\",\"heart;g1\",\"muscle;g2\"),   \"cluster2\" = c(\"muscle;g11\",\"heart;g11\",\"muscle;g12\") ) # remove non muscle analytes from the clustering solution above: limit_sets_by_regex(sets,\"muscle\") #> $cluster1 #> [1] \"muscle;g1\" \"muscle;g2\" #>  #> $cluster2 #> [1] \"muscle;g11\" \"muscle;g12\" #>"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limma_res_extract_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract standard errors — limma_res_extract_se","title":"Extract standard errors — limma_res_extract_se","text":"Extract standard errors limma results","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limma_res_extract_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract standard errors — limma_res_extract_se","text":"","code":"limma_res_extract_se(limma_res, effect_col = \"logFC\", t_col = \"t\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limma_res_extract_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract standard errors — limma_res_extract_se","text":"limma_res data frame returned limma::topTable() effect_col character, name column containing effect size t_col character, column name containing t statistic","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/limma_res_extract_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract standard errors — limma_res_extract_se","text":"numeric vector standard errors effect sizes","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/list_available_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List available data — list_available_data","title":"List available data — list_available_data","text":"List available data, including lazily-loaded data. Useful gather split data frames.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/list_available_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available data — list_available_data","text":"","code":"list_available_data(package = NULL)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/list_available_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available data — list_available_data","text":"package optional string specify package","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/list_available_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available data — list_available_data","text":"character vector names data objects available load","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/list_available_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available data — list_available_data","text":"","code":"list_available_datairPassengers\"                            #> [209] \"BJsales\"                                  #> [210] \"BOD\"                                      #> [211] \"CO2\"                                      #> [212] \"ChickWeight\"                              #> [213] \"DNase\"                                    #> [214] \"EuStockMarkets\"                           #> [215] \"Formaldehyde\"                             #> [216] \"HairEyeColor\"                             #> [217] \"Harman23.cor\"                             #> [218] \"Harman74.cor\"                             #> [219] \"Indometh\"                                 #> [220] \"InsectSprays\"                             #> [221] \"JohnsonJohnson\"                           #> [222] \"LakeHuron\"                                #> [223] \"LifeCycleSavings\"                         #> [224] \"Loblolly\"                                 #> [225] \"Nile\"                                     #> [226] \"Orange\"                                   #> [227] \"OrchardSprays\"                            #> [228] \"PlantGrowth\"                              #> [229] \"Puromycin\"                                #> [230] \"Seatbelts\"                                #> [231] \"Theoph\"                                   #> [232] \"Titanic\"                                  #> [233] \"ToothGrowth\"                              #> [234] \"UCBAdmissions\"                            #> [235] \"UKDriverDeaths\"                           #> [236] \"UKgas\"                                    #> [237] \"USAccDeaths\"                              #> [238] \"USArrests\"                                #> [239] \"USJudgeRatings\"                           #> [240] \"USPersonalExpenditure\"                    #> [241] \"UScitiesD\"                                #> [242] \"VADeaths\"                                 #> [243] \"WWWusage\"                                 #> [244] \"WorldPhones\"                              #> [245] \"ability.cov\"                              #> [246] \"airmiles\"                                 #> [247] \"airquality\"                               #> [248] \"anscombe\"                                 #> [249] \"attenu\"                                   #> [250] \"attitude\"                                 #> [251] \"austres\"                                  #> [252] \"cars\"                                     #> [253] \"chickwts\"                                 #> [254] \"co2\"                                      #> [255] \"crimtab\"                                  #> [256] \"discoveries\"                              #> [257] \"esoph\"                                    #> [258] \"euro\"                                     #> [259] \"eurodist\"                                 #> [260] \"faithful\"                                 #> [261] \"freeny\"                                   #> [262] \"infert\"                                   #> [263] \"iris\"                                     #> [264] \"iris3\"                                    #> [265] \"islands\"                                  #> [266] \"lh\"                                       #> [267] \"longley\"                                  #> [268] \"lynx\"                                     #> [269] \"morley\"                                   #> [270] \"mtcars\"                                   #> [271] \"nhtemp\"                                   #> [272] \"nottem\"                                   #> [273] \"npk\"                                      #> [274] \"occupationalStatus\"                       #> [275] \"precip\"                                   #> [276] \"presidents\"                               #> [277] \"pressure\"                                 #> [278] \"quakes\"                                   #> [279] \"randu\"                                    #> [280] \"rivers\"                                   #> [281] \"rock\"                                     #> [282] \"sleep\"                                    #> [283] \"stackloss\"                                #> [284] \"sunspot.month\"                            #> [285] \"sunspot.year\"                             #> [286] \"sunspots\"                                 #> [287] \"swiss\"                                    #> [288] \"treering\"                                 #> [289] \"trees\"                                    #> [290] \"uspop\"                                    #> [291] \"volcano\"                                  #> [292] \"warpbreaks\"                               #> [293] \"women\"                                    list_available_data(\"MotrpacRatTraining6moData},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load ATAC feature annotation — load_atac_feature_annotation","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"Load ATAC feature annotation Google Cloud Storage. See ATAC_FEATURE_ANNOT details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"","code":"load_atac_feature_annotation(scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/feature-annot/ATAC_FEATURE_ANNOT.rda","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"scratchdir character, local directory download data Google Cloud Storage. Current working directory default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"data frame. See MotrpacRatTraining6moData::ATAC_FEATURE_ANNOT details.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_atac_feature_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load ATAC feature annotation — load_atac_feature_annotation","text":"","code":"if (FALSE) { feature_annot = load_atac_feature_annotation(\"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_epigen_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Load epigenetic differential analysis results — load_epigen_da","title":"Load epigenetic differential analysis results — load_epigen_da","text":"Load ATAC METHYL timewise differential analysis results tissue Google Cloud Storage. See ATAC_DA METHYL_DA details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_epigen_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load epigenetic differential analysis results — load_epigen_da","text":"","code":"load_epigen_da(tissue, assay, scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_epigen_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load epigenetic differential analysis results — load_epigen_da","text":"tissue character, tissue abbreviation, one \"BAT\", \"HEART\", \"HIPPOC\", \"KIDNEY\", \"LIVER\", \"LUNG\", \"SKM-GN\", \"WAT-SC\" assay character, one \"METHYL\" (RRBS) \"ATAC\" scratchdir character, local directory download data Google Cloud Storage. Current working directory default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_epigen_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load epigenetic differential analysis results — load_epigen_da","text":"data frame. See ATAC_DA METHYL_DA details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_epigen_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load epigenetic differential analysis results — load_epigen_da","text":"","code":"if (FALSE) { # Return ATAC-seq differential analysis results for gastrocnemius skeletal muscle data = load_epigen_da(\"SKM-GN\", \"METHYL\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_feature_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load feature annotation — load_feature_annotation","title":"Load feature annotation — load_feature_annotation","text":"Load feature annotation","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_feature_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load feature annotation — load_feature_annotation","text":"","code":"load_feature_annotation(assay, scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_feature_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load feature annotation — load_feature_annotation","text":"assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV scratchdir character, local directory download data Google Cloud Storage. Current working directory default. used assay \"TRNSCRPT\", \"IMMUNO\", \"METAB\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_feature_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load feature annotation — load_feature_annotation","text":"data frame one row per feature unique metadata","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_feature_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load feature annotation — load_feature_annotation","text":"","code":"head(load_feature_annotation(\"UBIQ\", scratchdir=\"/tmp\")) #>       protein_id                 redundant_ids is_contaminant peptide_score #> 1 XP_017456475.1 XP_017447817.1|XP_017456475.1          FALSE    0.04957858 #> 2 XP_017456475.1 XP_017456475.1|XP_017447817.1          FALSE    0.05035247 #> 3 XP_017456475.1 XP_017456475.1|XP_017447817.1          FALSE    0.03248863 #> 4 XP_017456475.1 XP_017456475.1|XP_017447817.1          FALSE    0.04591368 #> 5 XP_017456475.1 XP_017447817.1|XP_017456475.1          FALSE    0.06269592 #> 6 XP_017456475.1 XP_017447817.1|XP_017456475.1          FALSE    0.03202049 #>                  sequence     organism_name               ptm_id #> 1           LMIPAVTkANSGR RATTUS NORVEGICUS  XP_017456475.1_K72k #> 2           VTGIPTPVVkFYR RATTUS NORVEGICUS XP_017456475.1_K136k #> 3     ATSTADLLVQGEEVVPAkK RATTUS NORVEGICUS XP_017456475.1_K202k #> 4          TkTIVSTAQISETR RATTUS NORVEGICUS XP_017456475.1_K205k #> 5               kIEAHFDAR RATTUS NORVEGICUS XP_017456475.1_K224k #> 6 SIATVEMVIDGATGQLPHkTPPR RATTUS NORVEGICUS XP_017456475.1_K251k #>                                    ptm_peptide confident_score confident_site #> 1            XP_017456475.1_K72k-LMIPAVTkANSGR          99.000           TRUE #> 2           XP_017456475.1_K136k-VTGIPTPVVkFYR          99.000           TRUE #> 3     XP_017456475.1_K202k-ATSTADLLVQGEEVVPAkK           1.636           TRUE #> 4          XP_017456475.1_K205k-TkTIVSTAQISETR          99.000           TRUE #> 5               XP_017456475.1_K224k-kIEAHFDAR          99.000           TRUE #> 6 XP_017456475.1_K251k-SIATVEMVIDGATGQLPHkTPPR          99.000           TRUE #>   tissue assay #> 1  HEART  UBIQ #> 2  HEART  UBIQ #> 3  HEART  UBIQ #> 4  HEART  UBIQ #> 5  HEART  UBIQ #> 6  HEART  UBIQ head(load_feature_annotation(\"TRNSCRPT\", scratchdir=\"/tmp\")) #>          seqname  source feature start   end score strand frame #> 1 AABR07022258.1 ensembl    gene   405   848     .      -     . #> 2 AABR07022620.1 ensembl    gene   122   427     .      -     . #> 3 AABR07022926.1 ensembl    gene    18    85     .      +     . #> 4 AABR07024031.1 ensembl    gene 18673 58717     .      -     . #> 5 AABR07024032.1 ensembl    gene 17425 17528     .      -     . #> 6 AABR07024040.1 ensembl    gene  4281  5213     .      +     . #>              gene_id gene_version      gene_name gene_source   gene_biotype #> 1 ENSRNOG00000055633            1   LOC100910067     ensembl protein_coding #> 2 ENSRNOG00000058846            1 AABR07022620.1     ensembl protein_coding #> 3 ENSRNOG00000055717            1 AABR07022926.1     ensembl          miRNA #> 4 ENSRNOG00000017648            7         Vom2r8     ensembl protein_coding #> 5 ENSRNOG00000056404            1        RF00026     ensembl          snRNA #> 6 ENSRNOG00000061350            1   LOC103690271     ensembl protein_coding head(load_feature_annotation(\"METAB\")) #> Using FEATURE_TO_GENE_FILT and METAB_FEATURE_ID_MAP #>          feature_ID kegg_id          dataset metabolite_refmet #> 1 1-Methylhistidine  C01152   metab-t-amines 1-Methylhistidine #> 2 1-methyladenosine  C02494 metab-u-hilicpos 1-Methyladenosine #> 3 1-methyladenosine  C02494 metab-u-hilicpos 1-Methyladenosine #> 4 1-methyladenosine  C02494 metab-u-hilicpos 1-Methyladenosine #> 5 1-methyladenosine  C02494 metab-u-hilicpos 1-Methyladenosine #> 6 1-methyladenosine  C02494 metab-u-hilicpos 1-Methyladenosine #>   feature_ID_sample_data     feature_ID_da feature_ID_metareg  dataset_metareg #> 1      1-Methylhistidine 1-Methylhistidine  1-Methylhistidine   metab-t-amines #> 2      1-methyladenosine 1-methyladenosine  1-methyladenosine metab-u-hilicpos #> 3      1-methyladenosine 1-methyladenosine  1-methyladenosine metab-u-hilicpos #> 4      1-methyladenosine 1-methyladenosine  1-methyladenosine metab-u-hilicpos #> 5      1-methyladenosine 1-methyladenosine  1-methyladenosine metab-u-hilicpos #> 6      1-methyladenosine 1-methyladenosine  1-methyladenosine metab-u-hilicpos #>     rt       mz neutral_mass    formula #> 1 4.10 340.6000     169.0851  C7H11N3O2 #> 2 7.63 282.1189     281.1124 C11H15N5O4 #> 3 7.66 282.1191     281.1124 C11H15N5O4 #> 4 7.63 282.1191     281.1124 C11H15N5O4 #> 5 7.64 282.1192     281.1124 C11H15N5O4 #> 6 7.67 282.1190     281.1124 C11H15N5O4 #>                                                    tissue #> 1 BAT,HEART,HIPPOC,KIDNEY,LIVER,LUNG,PLASMA,SKM-GN,WAT-SC #> 2                                            ADRNL,VENACV #> 3                                                     BAT #> 4                                                   COLON #> 5                                            CORTEX,OVARY #> 6                                                   HEART head(load_feature_annotation(\"IMMUNO\")) #> Using FEATURE_TO_GENE_FILT and IMMUNO_NORM_DATA_FLAT #>    feature_ID                   dataset entrez_gene rgd_gene gene_symbol #> 1        ACTH             rat-pituitary      282839   628649        Mc2r #> 2 ADIPONECTIN               ADIPONECTIN      246253   628748      Adipoq #> 3      AMYLIN             rat-metabolic       24476     2854        Iapp #> 4        BDNF rat-myokine,rat-pituitary       24225     2202        Bdnf #> 5   C Peptide             rat-metabolic       24505     2915        Ins1 #> 6         EGF             rat-mag27plex       25313     2542         Egf #>    old_gene_symbol       ensembl_gene #> 1             <NA> ENSRNOG00000016681 #> 2 Acdc;Acrp30;Adid ENSRNOG00000001821 #> 3              DAP ENSRNOG00000012417 #> 4        MGC105254 ENSRNOG00000047466 #> 5             <NA> ENSRNOG00000012052 #> 6     LOC103691699 ENSRNOG00000053979"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_metab_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Load metabolomics differential analysis — load_metab_da","title":"Load metabolomics differential analysis — load_metab_da","text":"Load training timewise metabolomics differential analysis results single tissue. timewise results, load MotrpacRatTraining6moData::METAB_DA. training results, load GCS. redundant, non-meta-analyzed differential analysis used input metabolomics meta-analysis meta-regression otherwise directly used manuscript. differential analysis results provided MotrpacRatTraining6moData::METAB_DA_METAREG non-redundant, meta-regression analysis results used manuscript.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_metab_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load metabolomics differential analysis — load_metab_da","text":"","code":"load_metab_da(tissue, type = \"timewise\", ...)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_metab_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load metabolomics differential analysis — load_metab_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV type character, type differential analysis summary statistics return. One 'timewise', 'training'. Note adjusted p-value type=\"training\" already include type=\"timewise\" selection_fdr. ... additional arguments passed get_file_from_url()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_metab_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load metabolomics differential analysis — load_metab_da","text":"data frame. detailed column descriptions, see MotrpacRatTraining6moData::METAB_DA MotrpacRatTraining6moData::TRAINING_DA.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_metab_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load metabolomics differential analysis — load_metab_da","text":"","code":"# Get timewise differential analysis results for the liver res = load_metab_da(\"LIVER\")  # Get training differential analysis results for the liver res = load_metab_da(\"LIVER\", type=\"training\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load METHYL feature annotation — load_methyl_feature_annotation","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"Load METHYL feature annotation Google Cloud Storage. See METHYL_FEATURE_ANNOT details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"","code":"load_methyl_feature_annotation(scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/feature-annot/METHYL_FEATURE_ANNOT.rda","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"scratchdir character, local directory download data Google Cloud Storage. Current working directory default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"data frame. See MotrpacRatTraining6moData::METHYL_FEATURE_ANNOT details.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_feature_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load METHYL feature annotation — load_methyl_feature_annotation","text":"","code":"if (FALSE) { feature_annot = load_methyl_feature_annotation(\"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raw METHYL data — load_methyl_raw_data","title":"Load raw METHYL data — load_methyl_raw_data","text":"Load METHYL raw data tissue Google Cloud Storage. See MotrpacRatTraining6moData::METHYL_RAW_DATA details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raw METHYL data — load_methyl_raw_data","text":"","code":"load_methyl_raw_data(tissue, scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load raw METHYL data — load_methyl_raw_data","text":"tissue character, tissue abbreviation, one \"BAT\", \"HEART\", \"HIPPOC\", \"KIDNEY\", \"LIVER\", \"LUNG\", \"SKM-GN\", \"WAT-SC\" scratchdir character, local directory download data Google Cloud Storage. Current working directory default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raw METHYL data — load_methyl_raw_data","text":"named list three items: counts data frame raw counts features rows samples (unmethylated methylated) columns samples data frame sample-level metadata, including group, lib.size, norm.factors genes data frame feature-level gene information, including Chr Locus","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_methyl_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load raw METHYL data — load_methyl_raw_data","text":"","code":"if (FALSE) { # Load raw METHYL data for gastrocnemius  data = load_methyl_raw_data(\"SKM-GN\", \"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load sample-level data — load_sample_data","title":"Load sample-level data — load_sample_data","text":"Load raw counts normalized sample-level data. Optionally filter training-regulated features. epigenetic data (ATAC METHYL), training_regulated_only = FALSE, sample-level data downloaded Google Cloud Storage.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load sample-level data — load_sample_data","text":"","code":"load_sample_data(   tissue,   assay,   normalized = TRUE,   training_regulated_only = FALSE,   exclude_outliers = FALSE,   scratchdir = \".\",   nrows = Inf,   warnings = TRUE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load sample-level data — load_sample_data","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV normalized bool, whether return normalized data. FALSE, return raw counts. training_regulated_only bool, whether filter features training-regulated 5% FDR exclude_outliers bool, whether remove sample outliers specified MotrpacRatTraining6moData::OUTLIERS scratchdir character, local directory download data Google Cloud Storage. Current working directory default. applies assay ATAC METHYL. nrows integer, number rows return. Defaults Inf. Useful return subset large data frame tests. warnings bool, whether print warnings console. TRUE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load sample-level data — load_sample_data","text":"data.frame features rows numeric columns correspond sample identifiers (vial labels)","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_sample_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load sample-level data — load_sample_data","text":"","code":"# Load RNA-seq raw counts for liver data = load_sample_data(\"LIVER\", \"TRNSCRPT\", normalized = FALSE) #> TRNSCRPT_LIVER_RAW_COUNTS  # Load normalized metabolomics data for gastrocnemius data = load_sample_data(\"SKM-GN\", \"METAB\") #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT  # Load normalized protein abundance data for heart data = load_sample_data(\"HEART\", \"PROT\") #> PROT_HEART_NORM_DATA  if (FALSE) { # Load ATAC-seq raw counts for hippocampus, excluding outliers  data = load_sample_data(\"HIPPOC\",                          \"ATAC\",                          exclude_outliers = TRUE,                          normalized = FALSE,                          scratchdir = \"/tmp\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Load training differential analysis results — load_training_da","title":"Load training differential analysis results — load_training_da","text":"Load training summary statistics differential analysis (DA) tests effect training feature within sex. Results downloaded public Google Cloud Storage bucket.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load training differential analysis results — load_training_da","text":"","code":"load_training_da(assay, tissue, metareg = TRUE, ...)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_training_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load training differential analysis results — load_training_da","text":"assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV metareg bool, whether return meta-regression results METAB. Return upstream differential analysis results FALSE. TRUE default. ... additional arguments passed get_file_from_url()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load training differential analysis results — load_training_da","text":"data frame, data table argument return_data_table = TRUE","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load training differential analysis results — load_training_da","text":"","code":"res = load_training_da(\"ACETYL\", \"HEART\") if (FALSE) res = load_training_da(\"ATAC\", \"SKM-GN\") res = load_training_da(\"IMMUNO\", \"ADRNL\") res = load_training_da(\"METAB\", \"SKM-GN\", metareg = TRUE) res = load_training_da(\"METAB\", \"SKM-GN\", metareg = FALSE) if (FALSE) res = load_training_da(\"METHYL\", \"SKM-GN\") res = load_training_da(\"PHOSPHO\", \"LIVER\") res = load_training_da(\"PROT\", \"KIDNEY\") res = load_training_da(\"TRNSCRPT\", \"BLOOD\") res = load_training_da(\"UBIQ\", \"HEART\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"Load UniProt human canonical protein FASTA file","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"","code":"load_uniprot_human_fasta(scratchdir = \".\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"scratchdir character, directory file Google Cloud Storage downloaded","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"Biostrings::XStringSet object returned reading FASTA file Biostrings::readAAStringSet()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"human proteome FATSA canonical proteins downloaded UniProt 2/3/2021 (UniProtKB query \"reviewed:true proteome:up000005640\").","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/load_uniprot_human_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load UniProt human canonical protein FASTA file — load_uniprot_human_fasta","text":"","code":"fasta = load_uniprot_human_fasta() #> Found more than one class \"file\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘RJSONIO’ #> Found more than one class \"file\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘RJSONIO’ head(fasta) #> AAStringSet object of length 6: #>     width seq                                               names                #> [1]   349 MKGLYFQQSSTDEEITFVFQEKE...YEAKVSMEAVQKNQGRKKQVVQF O95825 #> [2]   694 MTDTVFSNSSNRWMYPSDRPLQS...LKNKDKKIERWHQLQNENHVSSD Q9Y2J0 #> [3]  1077 MDTDSQRSHLSSFTMKLMDKFHS...WELSLKIKPRNITRRKTDREEKT Q13905 #> [4]   716 MEDSTSPKQEKENQEELGETRRP...EAVLLAAENEESEEDEDEEDDYD Q5TD94 #> [5]   442 MALPGARARGWAAAARAAQRRRR...LLTLLPQLQEAWQQRTPSPVPGG Q9HA92 #> [6]    77 MSVAFVPDWLRGKAEVNQETIQR...HRNLIYLATIADASPTSTSKAME Q9UHA2"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/make_kegg_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Make KEGG database — make_kegg_db","title":"Make KEGG database — make_kegg_db","text":"Make KEGG database FELLA pathway enrichment metabolites. Run internally cluster_pathway_enrichment().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/make_kegg_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make KEGG database — make_kegg_db","text":"","code":"make_kegg_db(kegg_db_destination)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/make_kegg_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make KEGG database — make_kegg_db","text":"kegg_db_destination character, target directory KEGG database. Parent directories created yet exist.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/make_kegg_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make KEGG database — make_kegg_db","text":"","code":"if (FALSE) { make_kegg_db(\"KEGGDB/20220921\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_sites_by_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sites by cluster — merge_sites_by_clusters","title":"Merge sites by cluster — merge_sites_by_clusters","text":"Merge edgeR edgeR::DGEList() object using clustering sites.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_sites_by_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sites by cluster — merge_sites_by_clusters","text":"","code":"merge_sites_by_clusters(yall, new_clusters)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_sites_by_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sites by cluster — merge_sites_by_clusters","text":"yall edgeR::DGEList() object, yall$genes metadata data frame locus coordinates (see details), fields minimum: \"Chr\", \"EntrezID\", \"Symbol\", \"Strand\". new_clusters character vector. Contains clustering solution sites yall.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_sites_by_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sites by cluster — merge_sites_by_clusters","text":"new edgeR::DGEList() object represents clusters","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_sites_by_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge sites by cluster — merge_sites_by_clusters","text":"yall object metadata framework yall$genes. data frame either \"Locus\" field pair fields (\"LocStart\", \"LocEnd\"). Assuming clusters merge sites across different chromosomes clusters represent continuous window genome, function goes clustering solutions new_clusters merges sites cluster. new genomic features contain sum counts sites, merged metadata sites (e.g., comma separated character gene symbols associated cluster). See example full RRBS read count data pre-processing pipeline analyze_tile().","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_two_dea_dfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate data frames — merge_two_dea_dfs","title":"Concatenate data frames — merge_two_dea_dfs","text":"Concatenate (rbind) two data frames expand result include columns tables.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_two_dea_dfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate data frames — merge_two_dea_dfs","text":"","code":"merge_two_dea_dfs(x1, x2)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_two_dea_dfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate data frames — merge_two_dea_dfs","text":"x1 data frame x2 data frame","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/merge_two_dea_dfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate data frames — merge_two_dea_dfs","text":"","code":"merge_two_dea_dfs(   data.frame(a=1:3,b=5:7),   data.frame(a=1:3,b=5:7) ) #>   a b #> 1 1 5 #> 2 2 6 #> 3 3 7 #> 4 1 5 #> 5 2 6 #> 6 3 7 merge_two_dea_dfs(   data.frame(a=1:3,b=5:7),   data.frame(a=1:3,b=5:7,c=10:12) ) #>   a b  c #> 1 1 5 NA #> 2 2 6 NA #> 3 3 7 NA #> 4 1 5 10 #> 5 2 6 11 #> 6 3 7 12 merge_two_dea_dfs(   data.frame(a=1:3,b=5:7,d=10:12),   data.frame(a=1:3,b=5:7,c=10:12) ) #>   a b  d  c #> 1 1 5 10 NA #> 2 2 6 11 NA #> 3 3 7 12 NA #> 4 1 5 NA 10 #> 5 2 6 NA 11 #> 6 3 7 NA 12"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics timewise meta-analysis — metab_meta_analysis","title":"Metabolomics timewise meta-analysis — metab_meta_analysis","text":"Perform meta-analysis repeated measurements return non-redundant results. repeated measurements feature, input summary statistics returned. results used manuscript.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics timewise meta-analysis — metab_meta_analysis","text":"","code":"metab_meta_analysis(tissue, input = NULL)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolomics timewise meta-analysis — metab_meta_analysis","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV input r data frame, custom input. see expected format, look table returned load_metab_da() type=\"timewise\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metabolomics timewise meta-analysis — metab_meta_analysis","text":"named list, res$meta_analysis_res list one metafor::rma.uni() object per meta-analyzed feature, res$merged_res data frame non-redundant measurements input features following columns: feature_ID character, MoTrPAC feature identifier tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV dataset character, metabolomics platform (metab-u-ionpneg, metab-u-lrpneg, metab-u-lrppos, metab-u-hilicpos, metab-u-rpneg, metab-u-rppos, metab-t-amines, metab-t-oxylipneg, metab-t-tca, metab-t-nuc, metab-t-acoa, metab-t-ka) feature measured . 'meta-reg' specifies results metabolomics meta-regression repeated features. assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV (\"METAB\") sex character, one 'male' 'female' is_targeted logical, targeted platform? site character, Chemical Analysis Site (CAS) name metabolite_refmet character, RefMet name metabolite logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change zscore numeric, z-score (either original t-score z-score meta-analysis) cv double, feature coefficient variation dataset comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals I2 double, heterogeneity coefficient. Higher values mean measurements sites/platforms discordant. QEp double, heterogeneity p-value. smaller p-value means measurements sites/platforms discordant. min_nominal_p double, minimum nominal p-value sex time point across potentially multiple measurements input","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics timewise meta-analysis — metab_meta_analysis","text":"","code":"# Perform meta-analysis on gastrocnemius timewise summary statistics res = metab_meta_analysis(\"SKM-GN\") #> Computed 1000 meta-analysis results."},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics meta-regression — metab_meta_regression","title":"Metabolomics meta-regression — metab_meta_regression","text":"Perform meta-regression repeated measurements. Return merged timewise training differential analysis summary statistics, results features multiple measurements replaced meta-regression results appropriate. method used generate MotrpacRatTraining6moData::METAB_DA_METAREG differential analysis results, version results used manuscript analyses.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics meta-regression — metab_meta_regression","text":"","code":"metab_meta_regression(   tissue,   timewise_input = NULL,   training_input = NULL,   het_p_threshold = 0.001 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolomics meta-regression — metab_meta_regression","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV timewise_input r data frame, custom input. see expected format, look table returned load_metab_da() type=\"timewise\". training_input r data frame, custom input. see expected format, look table returned load_metab_da() type=\"training\". het_p_threshold numeric, meta-regression cases heterogeneity p-value considered high heterogeneity. Default: 0.001","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metabolomics meta-regression — metab_meta_regression","text":"named list meta_reg_timewise_dea data frame adjusted timewise results, training_meta_regression data frame adjusted training results, meta_regression_results named list meta-regression results per redundant metabolite, meta_regression_models table number type model used meta-regression, metabolite_categories named list RefMet IDs metabolites corresponding category described details.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metabolomics meta-regression — metab_meta_regression","text":"try multiple models per repeated analyte: Model 1:Two random effects factors platform is_targeted redundant. Default optimization. Model 2:Two random effects factors platform is_targeted redundant alternative optimization. Model 3:platform is_targeted redundant. Use single RE factor default optimization. Also, use QMp NA, indication -parameterization model. Model 4:platform is_targeted redundant. Use single RE factor alternative optimization. Model 5:previous analyses failed, use simple fixed-effects approach. performing meta-regression, define four categories metabolites: measured measured multiple times, high heterogeneity, targeted platform measured multiple times, high heterogeneity, targeted platform measured multiple times, low heterogeneity categories 1 3 keep results . category 2 take targeted data . Finally, category 4 take meta-regression results.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_meta_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics meta-regression — metab_meta_regression","text":"","code":"# Perform meta-regression for gastrocnemius res = metab_meta_regression(\"SKM-GN\") #> Warning: SKM-GN differential analysis results have ref standard results. Excluding them from meta-analysis. #> Performing meta-regression for 117 redundant metabolites in SKM-GN... #> Done. #> Number of models that were fit for SKM-GN:  #>                                                                 metareg_nplatform #> metareg_calls                                                     2  3  4  5 #>   list(~analysis_group | platform, ~analysis_group | istargeted)  0 22  8  5 #>   x_subset                                                        2  5  1  0 #>   FE                                                             74  0  0  0 #> Total number of cases with high heterogeneity: 6 #> Total number of cases with low heterogeneity: 111 #>  #> Summary of the number of SKM-GN metabolites in each category:  #>                                 SKM-GN #> unique_metabs                      933 #> high_het_metabs_targeted             5 #> high_het_metabs_untargeted_only      1 #> meta_anal_metabs                   111 names(res) #> [1] \"timewise_meta_regression\" \"training_meta_regression\" #> [3] \"meta_regression_results\"  \"meta_regression_models\"   #> [5] \"metabolite_categories\""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_timewise_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics timewise differential analysis — metab_timewise_da","title":"Metabolomics timewise differential analysis — metab_timewise_da","text":"Use limma perform pairwise contrasts group trained animals sex-matched control group single tissue. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_timewise_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics timewise differential analysis — metab_timewise_da","text":"","code":"metab_timewise_da(tissue)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_timewise_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolomics timewise differential analysis — metab_timewise_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_timewise_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metabolomics timewise differential analysis — metab_timewise_da","text":"data frame one row per metabolite, time, sex combination: feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' cv double, coefficient variation case samples control_cv double, coefficient variation control samples logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change tscore double, t statistic covariates character, comma-separated list adjustment variables NA comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals dataset character, metabolomics platform metabolite detected","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_timewise_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics timewise differential analysis — metab_timewise_da","text":"","code":"# Perform timewise differential analysis for metabolites in heart tissue res = metab_timewise_da(\"HEART\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics training differential analysis — metab_training_da","title":"Metabolomics training differential analysis — metab_training_da","text":"Use limma test effect training across timepoints. analysis performed separately male female rats combined single p-value using sum logs.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics training differential analysis — metab_training_da","text":"","code":"metab_training_da(tissue)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_training_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolomics training differential analysis — metab_training_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metabolomics training differential analysis — metab_training_da","text":"data frame one row per metabolite: feature_ID character, MoTrPAC feature identifier dataset character, metabolomics platform metabolite detected groups_tested_female character, timepoints used perform F-test females. tissues assays missing timepoints. groups_tested_male character, timepoints used perform F-test males. tissues assays missing timepoints. fscore_male double, F-statistic males fscore_female double, F-statistic females p_value_male double, nominal p-value males p_value_female double, nominal  p-value females full_model character, full model used limma reduced_model character, representation reduced model, though used limma p_value double, combined male female nominal p-value using sum logs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metab_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics training differential analysis — metab_training_da","text":"","code":"# Perform training differential analysis for metabolites in heart tissue res = metab_training_da(\"HEART\")"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metabolite_meta_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-regression for a metabolite — metabolite_meta_regression","title":"Meta-regression for a metabolite — metabolite_meta_regression","text":"Worker function wrapped metab_meta_regression().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metabolite_meta_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-regression for a metabolite — metabolite_meta_regression","text":"","code":"metabolite_meta_regression(metabolite_refmet, timewise, training = NULL)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metabolite_meta_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta-regression for a metabolite — metabolite_meta_regression","text":"metabolite_refmet character, RefMet name metabolite timewise data frame timewise summary statistics training optional data frame training summary statistics","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metabolite_meta_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta-regression for a metabolite — metabolite_meta_regression","text":"named list meta-regression results, metabolite metadata, training summary statistics training NULL.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/metabolite_meta_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Meta-regression for a metabolite — metabolite_meta_regression","text":"try multiple models per analyte: Model 1:Two random effects factors platform is_targeted redundant. Default optimization. Model 2:Two random effects factors platform is_targeted redundant alternative optimization. Model 3:platform is_targeted redundant. Use single RE factor default optimization. Also, use QMp NA, indication -parameterization model. Model 4:platform is_targeted redundant. Use single RE factor alternative optimization. Model 5:previous analyses failed, use simple fixed-effects approach. See https://www.metafor-project.org/doku.php/tips:models_with_or_without_intercept explanations. See https://www.publichealth.columbia.edu/research/population-health-methods/meta-regression general background, including discussion FE models replicated experiments (case). \"Use fixed effect meta-analysis model assumes studies estimating (common) treatment effect.\": Riley et al. https://www-bmj-com.stanford.idm.oclc.org/content/342/bmj.d549 Hypothetically, studies infinite sample size, differences due chance differences study estimates completely disappear. Unlike assays, greater sampling variance one sexes problem model therefore need split sexes. longitudinal meta-analyses include random effect terms per study. examples see https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0164898, https://metafor-project.org/doku.php/tips:two_stage_analysis.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/pathway_hypergeom_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom pathway enrichment test — pathway_hypergeom_test","title":"Custom pathway enrichment test — pathway_hypergeom_test","text":"Worker function run custom_cluster_pathway_enrichment(). intended run independently.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/pathway_hypergeom_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom pathway enrichment test — pathway_hypergeom_test","text":"","code":"pathway_hypergeom_test(   feature_to_gene,   universe,   cluster_res,   pathway_member_list,   source,   gene_identifier_type,   iterations,   i,   min_input_set_size,   logfile,   add_ensembl_intersection )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/pathway_hypergeom_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom pathway enrichment test — pathway_hypergeom_test","text":"feature_to_gene data frame, map intersection_id_type gene symbols. Columns must include \"feature_ID\", \"gene_symbol\", \"ensembl_gene\", \"kegg_id\". universe list lists character vectors, named first assay (.e., MotrpacRatTraining6moData::ASSAY_ABBREV) tissue (.e., MotrpacRatTraining6moData::TISSUE_ABBREV). Vectors provide full set gene symbols associated features tested differential analysis. example, universe$TRNSCRPT$LUNG character vector expressed genes lung, type gene identifier matches gene_identifier_type. [MotrpacRatTraining6moData::GENE_UNIVERSES]$gene_symbol default. cluster_res Either data frame list lists. data frame, needs least two columns: \"feature\" \"cluster\". \"feature\" column format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. list lists, sublist must named cluster name (character string), values must features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. pathway_member_list named list character vectors names pathway names values pathway members. Pathway members must match values gene_identifer_type column feature_to_gene. source optional character string define source pathway_member_list gene_identifier_type character, column feature_to_gene matches gene identifier type universe. \"gene_symbol\" default. iterations data frame passed custom_cluster_pathway_enrichment() defines iteration function integer index passed custom_cluster_pathway_enrichment() specifies row iterations use min_input_set_size integer, input must minimum number unique mappable gene IDs attempt enrichment logfile optional character, path log failed iterations add_ensembl_intersection bool, whether add intersection_ensembl column, converts gene IDs intersection Ensembl IDs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/pathway_hypergeom_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom pathway enrichment test — pathway_hypergeom_test","text":"data table enrichment results, NULL enrichment results returned: term_size integer, number genes annotated term query_size integer, number genes included query intersection_size integer, number genes input query annotated corresponding term term_id character, unique term/pathway identifier source character, abbreviation data source term/pathway term_name character, term/pathway name effective_domain_size integer, total number genes universe used hypergeometric test intersection character, input gene IDs intersect term/pathway computed_p_value double, nominal hypergeometric p-value cluster character, cluster label tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV ome character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_logfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot differential analysis results for a feature — plot_feature_logfc","title":"Plot differential analysis results for a feature — plot_feature_logfc","text":"Plot timewise differential analysis results single feature. Points log fold-changes, error bars indicate standard errors.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_logfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot differential analysis results for a feature — plot_feature_logfc","text":"","code":"plot_feature_logfc(   assay = NULL,   tissue = NULL,   feature_ID = NULL,   feature = NULL,   title = NULL,   add_gene_symbol = FALSE,   facet_by_sex = FALSE,   scale_x_by_time = TRUE,   add_adj_p = TRUE,   metareg = TRUE,   return_data = FALSE,   ... )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_logfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot differential analysis results for a feature — plot_feature_logfc","text":"assay NULL character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV tissue NULL character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV feature_ID NULL character, MoTrPAC feature identifier metabolite RefMet ID feature NULL character, unique feature identifier format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training-regulated features 5% IHW FDR. redundant differential features, 'feature_ID' prepended specific platform make unique identifiers. See MotrpacRatTraining6moData::REPEATED_FEATURES details.. NULL, assay, tissue, feature_ID must specified. title character, plot title. default, plot ID feature. add_gene_symbol = TRUE, gene symbol also added plot title. add_gene_symbol bool, whether add corresponding gene symbol plot title. Default: FALSE facet_by_sex bool, whether facet plot sex. TRUE, lines colored tissue. FALSE, lines colored sex. Default: FALSE scale_x_by_time bool, whether scale x-axis time. FALSE, space time points (0w, 1w, 2w, 4w, 8w) evenly. Default: TRUE add_adj_p bool, whether include training adjusted p-value (AKA selection FDR) plot subtitle. Default: TRUE metareg bool, whether use meta-regression version differential analysis results metabolomics data. FALSE, use redundant, non-meta-analyzed results. Default: TRUE return_data bool, whether return data instead plot. Default: FALSE ... additional arguments passed get_file_from_url()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_logfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot differential analysis results for a feature — plot_feature_logfc","text":"ggplot2::ggplot() object data frame return_data = TRUE NULL data found","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_logfc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot differential analysis results for a feature — plot_feature_logfc","text":"","code":"# Plot a differential feature and add gene symbol plot_feature_logfc(feature = \"ACETYL;HEART;NP_001003673.1_K477k\",                    add_gene_symbol = TRUE)                                # Plot a differential epigenetic feature and facet by sex plot_feature_logfc(feature = \"METHYL;HEART;chr20-38798_cluster11\",                    add_gene_symbol = TRUE,                    facet_by_sex = TRUE)   # Plot a redundant differential feature plot_feature_logfc(assay = \"IMMUNO\",                    tissue = \"PLASMA\",                    feature_ID = \"BDNF\",                    facet_by_sex = TRUE) #> IMMUNO_PLASMA_DA #> Multiple measurements for feature 'IMMUNO;PLASMA;BDNF'. Taking the smallest training-dea FDR for the plot label.                                # Plot one measurement of a redundant feature plot_feature_logfc(assay = \"IMMUNO\",                    tissue = \"PLASMA\",                    feature_ID = \"rat-myokine:BDNF\",                    facet_by_sex = TRUE)                                # Plot a non-differential feature plot_feature_logfc(assay = \"PROT\",                    tissue = \"SKM-GN\",                    feature_ID = \"YP_665629.1\") #> PROT_SKMGN_DA                                # Plot a merged feature from meta-regression, facet by sex,  # don't scale the x-axis, and exclude the training p-value plot_feature_logfc(assay = \"METAB\",                    tissue = \"PLASMA\",                    feature_ID = \"glucose\",                    scale_x_by_time = FALSE,                    facet_by_sex = TRUE,                    add_adj_p = FALSE) #> METAB_PLASMA_DA_METAREG"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_normalized_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample-level data for a feature — plot_feature_normalized_data","title":"Plot sample-level data for a feature — plot_feature_normalized_data","text":"Plot normalized sample-level data single feature. Points mean values across samples group, error bars indicate standard deviations.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_normalized_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample-level data for a feature — plot_feature_normalized_data","text":"","code":"plot_feature_normalized_data(   assay = NULL,   tissue = NULL,   feature_ID = NULL,   feature = NULL,   title = NULL,   add_gene_symbol = FALSE,   facet_by_sex = FALSE,   scale_x_by_time = TRUE,   return_data = FALSE,   exclude_outliers = TRUE,   add_adj_p = FALSE,   ... )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_normalized_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample-level data for a feature — plot_feature_normalized_data","text":"assay NULL character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV tissue NULL character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV feature_ID NULL character, MoTrPAC feature identifier metabolite RefMet ID feature NULL character, unique feature identifier format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training-regulated features 5% IHW FDR. redundant differential features, 'feature_ID' prepended specific platform make unique identifiers. See MotrpacRatTraining6moData::REPEATED_FEATURES details.. NULL, assay, tissue, feature_ID must specified. title character, plot title. default, plot ID feature. add_gene_symbol = TRUE, gene symbol also added plot title. add_gene_symbol bool, whether add corresponding gene symbol plot title. Default: FALSE facet_by_sex bool, whether facet plot sex. TRUE, lines colored tissue. FALSE, lines colored sex. Default: FALSE scale_x_by_time bool, whether scale x-axis time. FALSE, space time points (0w, 1w, 2w, 4w, 8w) evenly. Default: TRUE return_data bool, whether return data instead plot. Default: FALSE exclude_outliers bool, whether exclude data sample outliers. Default: TRUE (see MotrpacRatTraining6moData::OUTLIERS) add_adj_p bool, whether include training adjusted p-value (AKA selection FDR) plot subtitle. Default: TRUE ... additional arguments passed load_sample_data()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_normalized_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample-level data for a feature — plot_feature_normalized_data","text":"ggplot2::ggplot() object data frame return_data = TRUE NULL data found","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_normalized_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot sample-level data for a feature — plot_feature_normalized_data","text":"","code":"# Plot a differential feature and add gene symbol plot_feature_normalized_data(feature = \"ACETYL;HEART;NP_001003673.1_K477k\",                              add_gene_symbol = TRUE)                                # Plot a differential epigenetic feature and facet by sex plot_feature_normalized_data(feature = \"METHYL;HEART;chr20-38798_cluster11\",                              add_gene_symbol = TRUE,                              facet_by_sex = TRUE)   # Plot a redundant differential feature plot_feature_normalized_data(assay = \"IMMUNO\",                              tissue = \"PLASMA\",                              feature_ID = \"BDNF\",                              facet_by_sex = TRUE) #> Multiple features correspond to 'IMMUNO;PLASMA;BDNF'. Plotting them together.                                # Plot one measurement of a redundant feature plot_feature_normalized_data(assay = \"IMMUNO\",                              tissue = \"PLASMA\",                              feature_ID = \"rat-myokine:BDNF\",                              facet_by_sex = TRUE)                                # Plot a non-differential feature plot_feature_normalized_data(assay = \"PROT\",                              tissue = \"SKM-GN\",                              feature_ID = \"YP_665629.1\") #> 'PROT;SKM-GN;YP_665629.1' is not a training-regulated feature. Looking in all sample-level data. #> PROT_SKMGN_NORM_DATA                                # Plot a merged feature from meta-regression, # don't scale the x-axis, facet by sex, and include the training p-value plot_feature_normalized_data(assay = \"METAB\",                              tissue = \"PLASMA\",                              feature_ID = \"glucose\",                              scale_x_by_time = FALSE,                              add_adj_p = TRUE,                              facet_by_sex = TRUE) #> Multiple features correspond to 'METAB;PLASMA;glucose'. Plotting them together. #> Adding differential analysis p-value... #> METAB_PLASMA_DA_METAREG"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature trajectories — plot_feature_trajectories","title":"Plot feature trajectories — plot_feature_trajectories","text":"Plot group means set features normalized sample-level data.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature trajectories — plot_feature_trajectories","text":"","code":"plot_feature_trajectories(   features,   training_regulated_only = FALSE,   exclude_outliers = TRUE,   center = TRUE,   scale = TRUE,   title = NULL,   return_data = FALSE,   scratchdir = \".\" )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature trajectories — plot_feature_trajectories","text":"features character vector features plot format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' training_regulated_only bool, whether input features training-regulated 5% FDR. FALSE default. TRUE, data loaded MotrpacRatTraining6moData::TRAINING_REGULATED_NORM_DATA instead load_sample_data(), dramatically improves performance. exclude_outliers bool, whether remove sample outliers specified MotrpacRatTraining6moData::OUTLIERS. TRUE default. center bool, whether center trajectories. TRUE default. scale bool, whether scale trajectories. TRUE default. title optional character, plot title return_data bool, whether return normalized sample-level data corresponding features instead plot. FALSE default. scratchdir character, local directory download data web. Current working directory default. relevant features includes ATAC METHYL features.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot feature trajectories — plot_feature_trajectories","text":"ggplot2::ggplot() object return_data=FALSE data frame otherwise","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot feature trajectories — plot_feature_trajectories","text":"Note features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID' given training-regulated features data objects provided MotrpacRatTraining6moData, one specify non-training-regulated features concatenating MotrpacRatTraining6moData::ASSAY_ABBREV, MotrpacRatTraining6moData::TISSUE_ABBREV, feature_ID features interest (semi-colon-separated).","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_feature_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot feature trajectories — plot_feature_trajectories","text":"","code":"# Pick largest cluster in gastrocnemius  clust = extract_tissue_sets(\"SKM-GN\", k=1, add_week8=FALSE) # Extract features  names(clust) #> [1] \"8w_F1_M1\"                               #> [2] \"4w_F1_M1---8w_F1_M1\"                    #> [3] \"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\" features = clust[[\"1w_F1_M1->2w_F1_M1->4w_F1_M1->8w_F1_M1\"]] plot_feature_trajectories(features)   # Since we're only considering training-regulated features in this example, # set training_regulated_only to TRUE to make it slightly faster  plot_feature_trajectories(features, training_regulated_only=TRUE)   # Plot a mix of training-regulated and non-training-regulated features # Note this takes longer because the original datasets are downloaded  features = c(features, \"TRNSCRPT;SKM-GN;ENSRNOG00000000008\") plot_feature_trajectories(features) #> Identifying data sets... #> Compiling sample-level data... #> ATAC_SKMGN_NORM_DATA_05FDR #> METAB SKM-GN normalized data from METAB_NORM_DATA_FLAT #> PHOSPHO_SKMGN_NORM_DATA #> PROT_SKMGN_NORM_DATA #> TRNSCRPT_SKMGN_NORM_DATA"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_features_per_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature composition of clusters — plot_features_per_cluster","title":"Plot feature composition of clusters — plot_features_per_cluster","text":"Plot number features cluster fractions features belong ome tissue.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_features_per_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature composition of clusters — plot_features_per_cluster","text":"","code":"plot_features_per_cluster(cluster_res)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_features_per_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature composition of clusters — plot_features_per_cluster","text":"cluster_res Either data frame list lists. data frame, needs least two columns: \"feature\" \"cluster\". \"feature\" column format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'. list lists, sublist must named cluster name (character string), values must features format 'MotrpacRatTraining6moData::ASSAY_ABBREV;MotrpacRatTraining6moData::TISSUE_ABBREV;feature_ID'.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_features_per_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot feature composition of clusters — plot_features_per_cluster","text":"ggplot2::ggplot() object","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_features_per_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot feature composition of clusters — plot_features_per_cluster","text":"","code":"# Get top 10 largest paths, nodes, edges in gastrocnemius  # Exclude additional 8-week nodes clusters = extract_tissue_sets(\"SKM-GN\", k=10, add_week8=FALSE) # Select paths only  clusters = clusters[grepl(\"->\", names(clusters))]  # Plot distribution of features plot_features_per_cluster(clusters)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_pcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 2D scatter plot of principal components — plot_pcs","title":"Plot 2D scatter plot of principal components — plot_pcs","text":"Plot pairs principal components highlight indicated outliers. point sample.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_pcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 2D scatter plot of principal components — plot_pcs","text":"","code":"plot_pcs(pcA, pcB, pcax, outliers, pca, title = NULL)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_pcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 2D scatter plot of principal components — plot_pcs","text":"pcA character, PC x-axis, e.g. \"PC1\"; also column name pcax pcB character, PC y-axis, e.g. \"PC2\"; also column name pcax pcax e.g., prcomp(data)$x outliers vector viallabels corresponding PC outliers pca result returned prcomp() title optional character, plot title","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/plot_pcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot 2D scatter plot of principal components — plot_pcs","text":"ggplot object","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare GCT file for GSEA — prepare_gsea_input","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"Take set differential analysis results, either specific tissue ome user-supplied table, convert GCT format, write file GSEA.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"","code":"prepare_gsea_input(   tissue = NULL,   assay = NULL,   gene_id_type = \"gene_symbol\",   outdir = \".\",   outfile_prefix = NULL,   input = NULL,   cast_vars = c(\"sex\", \"comparison_group\"),   feature_to_gene_map = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV. Must specified cusotm input provided. assay character, assay abbreviation, one \"PROT\", \"PHOSPHO\", \"TRNSCRPT\", \"ACETYL\", \"UBIQ\" gene_id_type character, gene identifier type. Must match gene ID type gene set database plan using GSEA. One \"gene_symbol\", \"entrez\", \"ensembl\", \"refseq\". Default: \"gene_symbol\" outdir character, output directory GCT file. directory created already exist. Current directory default. outfile_prefix character, prefix output GCT file. default, prefix includes specified tissue assay current date. Must specified custom input data. input optional data frame user wants perform analysis custom set differential analysis results. Required columns \"tscore\", \"feature_ID\", cast_vars \"tscore\", cast_vars, gene identifier indicated gene_id_type. \"feature_ID\" column exists column corresponding gene_id_type, feature_to_gene_map must map \"feature_ID\" gene_id_type. cast_vars character vector column names differential analysis results used convert table long wide format, t-scores value variable. See data.table::dcast() details. Default: \"sex\", \"comparison_group\" feature_to_gene_map data frame, map \"feature_ID\" gene_id_type. MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT otherwise specified.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"character, path GCT file","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"T-scores timewise differential analysis results used scores. Feature-level data summarized gene-level data using maximum absolute t-score.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_gsea_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare GCT file for GSEA — prepare_gsea_input","text":"","code":"# Input for GSEA where gene set databases use gene symbols as IDs. # This applies for the default gene set database  # when 'method=\"gsea\"' in 'ssGSEA2_wrapper()'. prepare_gsea_input(\"HEART\",\"PROT\",outdir=\"/tmp\") #> PROT_HEART_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_HEART_PROT_20230912.gct  #> Dimensions of matrix: [8760x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_HEART_PROT_20230912.gct\" prepare_gsea_input(\"LIVER\",\"PHOSPHO\",outdir=\"/tmp\") #> PHOSPHO_LIVER_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_LIVER_PHOSPHO_20230912.gct  #> Dimensions of matrix: [8120x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_LIVER_PHOSPHO_20230912.gct\" prepare_gsea_input(\"LIVER\",\"ACETYL\",outdir=\"/tmp\") #> ACETYL_LIVER_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_LIVER_ACETYL_20230912.gct  #> Dimensions of matrix: [2403x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_LIVER_ACETYL_20230912.gct\" prepare_gsea_input(\"LIVER\",\"UBIQ\",outdir=\"/tmp\") #> UBIQ_LIVER_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_LIVER_UBIQ_20230912.gct  #> Dimensions of matrix: [2529x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_LIVER_UBIQ_20230912.gct\" prepare_gsea_input(\"LIVER\",\"TRNSCRPT\",outdir=\"/tmp\") #> TRNSCRPT_LIVER_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_LIVER_TRNSCRPT_20230912.gct  #> Dimensions of matrix: [14276x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_LIVER_TRNSCRPT_20230912.gct\"  # Input for GSEA with Mitocarta (i.e., 'method=\"gsea_mitocarta\"'  # in 'ssGSEA2_wrapper()'), which uses RefSeq IDs  prepare_gsea_input(\"LIVER\",\"TRNSCRPT\",outdir=\"/tmp\",gene_id_type=\"refseq\") #> TRNSCRPT_LIVER_DA #> Saving file to  /tmp/MotrpacRatTraining6mo_gsea_LIVER_TRNSCRPT_20230912.gct  #> Dimensions of matrix: [17079x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/MotrpacRatTraining6mo_gsea_LIVER_TRNSCRPT_20230912.gct\"  # \"Custom\" input res = combine_da_results(tissues = \"KIDNEY\", assays = \"PROT\") #> PROT_KIDNEY_DA # add dummy column res$gene_symbol = res$feature_ID prepare_gsea_input(input=res, outdir=\"/tmp\", outfile_prefix=\"KIDNEY_PROT\") #> Saving file to  /tmp/KIDNEY_PROT.gct  #> Dimensions of matrix: [9852x8] #> Setting precision to 4 #> Saved. #> [1] \"/tmp/KIDNEY_PROT.gct\""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_ptmsea_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare PTM-SEA input — prepare_ptmsea_input","title":"Prepare PTM-SEA input — prepare_ptmsea_input","text":"Write GCT file timewise differential analysis t-scores values human flanking sequences IDs. rat_to_human_ptm_map used map rat human phosphosites, human protein FASTA file used add human flanking sequences.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_ptmsea_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare PTM-SEA input — prepare_ptmsea_input","text":"","code":"prepare_ptmsea_input(   tissue = NULL,   fasta = NULL,   rat_to_human_ptm_map = MotrpacRatTraining6moData::RAT_TO_HUMAN_PHOSPHO,   outdir = \".\",   outfile_prefix = NULL,   input = NULL,   cast_vars = c(\"sex\", \"comparison_group\") )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_ptmsea_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare PTM-SEA input — prepare_ptmsea_input","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV. Must specified cusotm input provided. fasta Biostrings::XStringSet object returned reading human protein FASTA file Biostrings::readAAStringSet(). Names Biostrings::XStringSet object set human protein accession, e.g., \"Q96QG7\". specified, result load_uniprot_human_fasta() used, returns version UniProt human protein FASTA used manuscript. rat_to_human_ptm_map data frame columns \"ptm_id_rat_refseq\" \"ptm_id_human_uniprot\" used map PTMs rat human. Default: MotrpacRatTraining6moData::RAT_TO_HUMAN_PHOSPHO outdir character, output directory GCT file. directory created already exist. Current directory default. outfile_prefix character, prefix output GCT file. default, prefix includes specified tissue current date. Must specified custom input data. input optional data frame user wants perform analysis custom set differential analysis results. Required columns \"feature_ID\", \"tscore\", cast_vars. cast_vars character vector column names differential analysis results used convert table long wide format, t-scores value variable. See tidyr::pivot_wider() details. Default: \"sex\", \"comparison_group\"","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_ptmsea_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare PTM-SEA input — prepare_ptmsea_input","text":"character, full path GCT file","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/prepare_ptmsea_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare PTM-SEA input — prepare_ptmsea_input","text":"","code":"if (FALSE) { # Using existing differential analysis results prepare_ptmsea_input(\"HEART\", outdir=\"/tmp\")  # Using a \"custom\" input res = combine_da_results(tissues = \"HEART\", assays = \"PHOSPHO\") # add dummy column prepare_ptmsea_input(input=res, outdir=\"/tmp\", outfile_prefix=\"HEART_PHOSPHO\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_timewise_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteomics timewise differential analysis — proteomics_timewise_da","title":"Proteomics timewise differential analysis — proteomics_timewise_da","text":"Timewise differential analysis proteome, phosphoproteome, acetylome, ubiquitylome. Use limma perform pairwise contrasts group trained animals sex-matched control group single tissue proteomics assay. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_timewise_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteomics timewise differential analysis — proteomics_timewise_da","text":"","code":"proteomics_timewise_da(assay, tissue, exclude_outliers = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_timewise_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteomics timewise differential analysis — proteomics_timewise_da","text":"assay character, abbreviation proteomics assay analyzed defined MotrpacRatTraining6moData::ASSAY_ABBREV. One following: PROT, PHOSPHO, ACETYL, UBIQ tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV exclude_outliers bool, whether remove sample outliers specified MotrpacRatTraining6moData::OUTLIERS. TRUE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_timewise_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proteomics timewise differential analysis — proteomics_timewise_da","text":"data frame one row per proteomics feature per contrast (usually 8 rows per feature): feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. removed_samples character, comma-separated list outliers (vial labels) removed differential analysis logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change tscore double, t statistic p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals numNAs integer, number missing values current 'comparison_group' sex-matched sedentary control animals","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_timewise_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteomics timewise differential analysis — proteomics_timewise_da","text":"","code":"# Run timewise differential analysis for heart proteins res = proteomics_timewise_da(\"PROT\",\"HEART\") #> PROT_HEART_NORM_DATA"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteomics training differential analysis — proteomics_training_da","title":"Proteomics training differential analysis — proteomics_training_da","text":"Training differential analysis proteome, phosphoproteome, acetylome, ubiquitylome. Use limma perform F-test test effect training across time points. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteomics training differential analysis — proteomics_training_da","text":"","code":"proteomics_training_da(assay, tissue, exclude_outliers = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_training_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteomics training differential analysis — proteomics_training_da","text":"assay character, abbreviation proteomics assay analyzed defined MotrpacRatTraining6moData::ASSAY_ABBREV. One following: PROT, PHOSPHO, ACETYL, UBIQ tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV exclude_outliers bool, whether remove sample outliers specified MotrpacRatTraining6moData::OUTLIERS. TRUE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proteomics training differential analysis — proteomics_training_da","text":"data frame one row per proteomics feature: feature_ID character, MoTrPAC feature identifier assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. removed_samples character, comma-separated list outliers (vial labels) removed differential analysis fscore_male double, F statistic males fscore_female double, F statistic females p_value_male double, nominal F-test p-value males p_value_female double, nominal F-test p-value females full_model character, full model used F-test reduced_model character, reduced model used F-test p_value double, combined male female nominal p-value using sum logs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/proteomics_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteomics training differential analysis — proteomics_training_da","text":"","code":"# Run training differential analysis for heart proteins res = proteomics_training_da(\"PROT\",\"HEART\") #> PROT_HEART_NORM_DATA"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"repfdr wrapper — repfdr_wrapper","title":"repfdr wrapper — repfdr_wrapper","text":"general wrapper running repfdr matrix z-scores.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"repfdr wrapper — repfdr_wrapper","text":"","code":"repfdr_wrapper(zscores, min_prior_for_config = 0.001, df = 20)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"repfdr wrapper — repfdr_wrapper","text":"zscores numeric matrix. Rows analytes, columns conditions (e.g., male week 1). Entries z-scores. min_prior_for_config number. minimal prior probability configuration priors. df Integer. Degrees freedom fitting estimated density f(z)","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"repfdr wrapper — repfdr_wrapper","text":"named list two objects: repfdr_clusters binary matrix representation clusters repfdr_cluster_posteriors matrix cluster posteriors","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"repfdr wrapper — repfdr_wrapper","text":"wrapper runs inference two groups model column zscores, run repfdr's EM process. extract fuzzy clustering solution, exclude configurations whose prior probability lower min_prior_for_config.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/repfdr_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"repfdr wrapper — repfdr_wrapper","text":"","code":"# Simulate data with a single cluster zcolnames = c(   paste(\"male\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\"),   paste(\"female\",c(\"1w\",\"2w\",\"4w\",\"8w\"),sep=\"_\") ) zscores = matrix(rnorm(80000),ncol=8,dimnames = list(1:10000,zcolnames)) repfdr_results = repfdr_wrapper(zscores, df=5) #> Warning: In column 5 female_1w the estimated fraction of nulls is 1. #> Warning: In column 7 female_4w the estimated fraction of nulls is 1. #> Warning: In column 8 female_8w the estimated fraction of nulls is 1. #> EM iteration 2 #> Converged after 1 EM iterations. #> Warning: In column 5 female_1w the estimated fraction of nulls is 1. #> Warning: In column 7 female_4w the estimated fraction of nulls is 1. #> Warning: In column 8 female_8w the estimated fraction of nulls is 1. #> EM iteration 2 #> EM iteration 3 #> EM iteration 4 #> EM iteration 5 #> EM iteration 6 #> EM iteration 7 #> EM iteration 8 #> EM iteration 9 #> EM iteration 10 #> EM iteration 11 #> EM iteration 12 #> EM iteration 13 #> EM iteration 14 #> EM iteration 15 #> EM iteration 16 #> EM iteration 17 #> EM iteration 18 #> EM iteration 19 #> EM iteration 20 #> EM iteration 21 #> EM iteration 22 #> EM iteration 23 #> EM iteration 24 #> EM iteration 25 #> EM iteration 26 #> EM iteration 27 #> EM iteration 28 #> EM iteration 29 #> EM iteration 30 #> EM iteration 31 #> EM iteration 32 #> EM iteration 33 #> EM iteration 34 #> EM iteration 35 #> EM iteration 36 #> EM iteration 37 #> EM iteration 38 #> EM iteration 39 #> EM iteration 40 #> EM iteration 41 #> EM iteration 42 #> EM iteration 43 #> EM iteration 44 #> EM iteration 45 #> EM iteration 46 #> EM iteration 47 #> EM iteration 48 #> EM iteration 49 #> EM iteration 50 #> EM iteration 51 #> EM iteration 52 #> EM iteration 53 #> EM iteration 54 #> EM iteration 55 #> EM iteration 56 #> EM iteration 57 #> EM iteration 58 #> EM iteration 59 #> EM iteration 60 #> EM iteration 61 #> EM iteration 62 #> EM iteration 63 #> EM iteration 64 #> EM iteration 65 #> EM iteration 66 #> EM iteration 67 #> EM iteration 68 #> EM iteration 69 #> EM iteration 70 #> EM iteration 71 #> EM iteration 72 #> EM iteration 73 #> EM iteration 74 #> EM iteration 75 #> EM iteration 76 #> EM iteration 77 #> EM iteration 78 #> EM iteration 79 #> EM iteration 80 #> EM iteration 81 #> EM iteration 82 #> EM iteration 83 #> EM iteration 84 #> EM iteration 85 #> EM iteration 86 #> EM iteration 87 #> EM iteration 88 #> EM iteration 89 #> EM iteration 90 #> EM iteration 91 #> EM iteration 92 #> EM iteration 93 #> EM iteration 94 #> EM iteration 95 #> EM iteration 96 #> EM iteration 97 #> EM iteration 98 #> EM iteration 99 #> EM iteration 100 #> EM iteration 101 #> EM iteration 102 #> EM iteration 103 #> EM iteration 104 #> EM iteration 105 #> EM iteration 106 #> EM iteration 107 #> EM iteration 108 #> EM iteration 109 #> EM iteration 110 #> EM iteration 111 #> EM iteration 112 #> EM iteration 113 #> EM iteration 114 #> EM iteration 115 #> EM iteration 116 #> EM iteration 117 #> EM iteration 118 #> EM iteration 119 #> EM iteration 120 #> EM iteration 121 #> EM iteration 122 #> EM iteration 123 #> EM iteration 124 #> EM iteration 125 #> EM iteration 126 #> EM iteration 127 #> EM iteration 128 #> EM iteration 129 #> EM iteration 130 #> EM iteration 131 #> EM iteration 132 #> EM iteration 133 #> EM iteration 134 #> EM iteration 135 #> EM iteration 136 #> EM iteration 137 #> EM iteration 138 #> EM iteration 139 #> EM iteration 140 #> EM iteration 141 #> EM iteration 142 #> EM iteration 143 #> EM iteration 144 #> EM iteration 145 #> EM iteration 146 #> EM iteration 147 #> EM iteration 148 #> EM iteration 149 #> EM iteration 150 #> EM iteration 151 #> EM iteration 152 #> EM iteration 153 #> EM iteration 154 #> EM iteration 155 #> EM iteration 156 #> EM iteration 157 #> EM iteration 158 #> EM iteration 159 #> EM iteration 160 #> EM iteration 161 #> EM iteration 162 #> EM iteration 163 #> EM iteration 164 #> EM iteration 165 #> EM iteration 166 #> EM iteration 167 #> EM iteration 168 #> EM iteration 169 #> EM iteration 170 #> EM iteration 171 #> EM iteration 172 #> EM iteration 173 #> EM iteration 174 #> EM iteration 175 #> EM iteration 176 #> EM iteration 177 #> EM iteration 178 #> EM iteration 179 #> EM iteration 180 #> EM iteration 181 #> EM iteration 182 #> EM iteration 183 #> EM iteration 184 #> EM iteration 185 #> EM iteration 186 #> EM iteration 187 #> EM iteration 188 #> EM iteration 189 #> EM iteration 190 #> EM iteration 191 #> EM iteration 192 #> EM iteration 193 #> EM iteration 194 #> EM iteration 195 #> EM iteration 196 #> EM iteration 197 #> EM iteration 198 #> EM iteration 199 #> EM iteration 200 #> EM iteration 201 #> EM iteration 202 #> EM iteration 203 #> EM iteration 204 #> EM iteration 205 #> EM iteration 206 #> EM iteration 207 #> EM iteration 208 #> EM iteration 209 #> EM iteration 210 #> EM iteration 211 #> EM iteration 212 #> EM iteration 213 #> EM iteration 214 #> EM iteration 215 #> EM iteration 216 #> EM iteration 217 #> EM iteration 218 #> EM iteration 219 #> EM iteration 220 #> EM iteration 221 #> EM iteration 222 #> EM iteration 223 #> EM iteration 224 #> EM iteration 225 #> EM iteration 226 #> EM iteration 227 #> EM iteration 228 #> EM iteration 229 #> EM iteration 230 #> EM iteration 231 #> EM iteration 232 #> EM iteration 233 #> EM iteration 234 #> EM iteration 235 #> EM iteration 236 #> EM iteration 237 #> EM iteration 238 #> EM iteration 239 #> EM iteration 240 #> EM iteration 241 #> EM iteration 242 #> EM iteration 243 #> EM iteration 244 #> EM iteration 245 #> EM iteration 246 #> EM iteration 247 #> EM iteration 248 #> EM iteration 249 #> EM iteration 250 #> EM iteration 251 #> EM iteration 252 #> EM iteration 253 #> EM iteration 254 #> EM iteration 255 #> EM iteration 256 #> EM iteration 257 #> EM iteration 258 #> EM iteration 259 #> EM iteration 260 #> EM iteration 261 #> EM iteration 262 #> EM iteration 263 #> EM iteration 264 #> EM iteration 265 #> EM iteration 266 #> EM iteration 267 #> EM iteration 268 #> EM iteration 269 #> EM iteration 270 #> EM iteration 271 #> EM iteration 272 #> EM iteration 273 #> EM iteration 274 #> EM iteration 275 #> EM iteration 276 #> EM iteration 277 #> EM iteration 278 #> EM iteration 279 #> EM iteration 280 #> EM iteration 281 #> EM iteration 282 #> EM iteration 283 #> EM iteration 284 #> EM iteration 285 #> EM iteration 286 #> EM iteration 287 #> EM iteration 288 #> EM iteration 289 #> EM iteration 290 #> EM iteration 291 #> EM iteration 292 #> EM iteration 293 #> EM iteration 294 #> EM iteration 295 #> EM iteration 296 #> EM iteration 297 #> EM iteration 298 #> EM iteration 299 #> EM iteration 300 #> EM iteration 301 #> EM iteration 302 #> EM iteration 303 #> EM iteration 304 #> EM iteration 305 #> EM iteration 306 #> EM iteration 307 #> EM iteration 308 #> EM iteration 309 #> EM iteration 310 #> EM iteration 311 #> EM iteration 312 #> EM iteration 313 #> EM iteration 314 #> EM iteration 315 #> EM iteration 316 #> EM iteration 317 #> EM iteration 318 #> EM iteration 319 #> EM iteration 320 #> EM iteration 321 #> EM iteration 322 #> EM iteration 323 #> EM iteration 324 #> EM iteration 325 #> EM iteration 326 #> EM iteration 327 #> EM iteration 328 #> EM iteration 329 #> EM iteration 330 #> EM iteration 331 #> EM iteration 332 #> EM iteration 333 #> EM iteration 334 #> EM iteration 335 #> EM iteration 336 #> EM iteration 337 #> EM iteration 338 #> EM iteration 339 #> EM iteration 340 #> EM iteration 341 #> EM iteration 342 #> EM iteration 343 #> EM iteration 344 #> EM iteration 345 #> EM iteration 346 #> EM iteration 347 #> EM iteration 348 #> EM iteration 349 #> EM iteration 350 #> EM iteration 351 #> EM iteration 352 #> EM iteration 353 #> EM iteration 354 #> EM iteration 355 #> EM iteration 356 #> EM iteration 357 #> EM iteration 358 #> EM iteration 359 #> EM iteration 360 #> EM iteration 361 #> EM iteration 362 #> EM iteration 363 #> EM iteration 364 #> EM iteration 365 #> EM iteration 366 #> EM iteration 367 #> EM iteration 368 #> EM iteration 369 #> EM iteration 370 #> EM iteration 371 #> EM iteration 372 #> EM iteration 373 #> EM iteration 374 #> EM iteration 375 #> EM iteration 376 #> EM iteration 377 #> EM iteration 378 #> EM iteration 379 #> EM iteration 380 #> EM iteration 381 #> EM iteration 382 #> EM iteration 383 #> EM iteration 384 #> EM iteration 385 #> EM iteration 386 #> EM iteration 387 #> EM iteration 388 #> EM iteration 389 #> EM iteration 390 #> EM iteration 391 #> EM iteration 392 #> EM iteration 393 #> EM iteration 394 #> EM iteration 395 #> EM iteration 396 #> EM iteration 397 #> EM iteration 398 #> EM iteration 399 #> EM iteration 400 #> EM iteration 401 #> EM iteration 402 #> EM iteration 403 #> EM iteration 404 #> EM iteration 405 #> EM iteration 406 #> EM iteration 407 #> EM iteration 408 #> EM iteration 409 #> EM iteration 410 #> EM iteration 411 #> EM iteration 412 #> EM iteration 413 #> EM iteration 414 #> EM iteration 415 #> EM iteration 416 #> EM iteration 417 #> EM iteration 418 #> EM iteration 419 #> EM iteration 420 #> EM iteration 421 #> EM iteration 422 #> EM iteration 423 #> EM iteration 424 #> EM iteration 425 #> EM iteration 426 #> EM iteration 427 #> EM iteration 428 #> EM iteration 429 #> EM iteration 430 #> EM iteration 431 #> EM iteration 432 #> EM iteration 433 #> EM iteration 434 #> EM iteration 435 #> EM iteration 436 #> EM iteration 437 #> EM iteration 438 #> EM iteration 439 #> EM iteration 440 #> EM iteration 441 #> EM iteration 442 #> EM iteration 443 #> EM iteration 444 #> EM iteration 445 #> EM iteration 446 #> EM iteration 447 #> EM iteration 448 #> EM iteration 449 #> EM iteration 450 #> EM iteration 451 #> EM iteration 452 #> EM iteration 453 #> EM iteration 454 #> EM iteration 455 #> EM iteration 456 #> EM iteration 457 #> EM iteration 458 #> EM iteration 459 #> EM iteration 460 #> EM iteration 461 #> EM iteration 462 #> EM iteration 463 #> EM iteration 464 #> EM iteration 465 #> EM iteration 466 #> EM iteration 467 #> EM iteration 468 #> EM iteration 469 #> EM iteration 470 #> EM iteration 471 #> EM iteration 472 #> EM iteration 473 #> EM iteration 474 #> EM iteration 475 #> EM iteration 476 #> EM iteration 477 #> EM iteration 478 #> EM iteration 479 #> EM iteration 480 #> EM iteration 481 #> EM iteration 482 #> EM iteration 483 #> EM iteration 484 #> EM iteration 485 #> EM iteration 486 #> EM iteration 487 #> EM iteration 488 #> EM iteration 489 #> EM iteration 490 #> EM iteration 491 #> EM iteration 492 #> EM iteration 493 #> EM iteration 494 #> EM iteration 495 #> EM iteration 496 #> EM iteration 497 #> EM iteration 498 #> EM iteration 499 #> EM iteration 500 #> Warning: EM did not converge within tolerance after maximum number of iterations specified. # in this example all configurations are null,  # thus the  posteriors of the null cluster (all zeroes) are very high: quantile(repfdr_results$repfdr_cluster_posteriors[,\"00000000\"]) #>         0%        25%        50%        75%       100%  #> 0.04542362 0.95560012 0.98366441 0.99696815 1.00000000  # now add a cluster with a strong signal and rerun zscores[1:500,1:4] = zscores[1:500,1:4] + 5 # When the data are \"clean\" (e.g., a mixture of two gaussians), we do not # need a high df in the two-groups model estimation # (default is 20, consider at least 10 when analyzing real data) repfdr_results = repfdr_wrapper(zscores, df=5) #> Warning: In column  1   male_1w ,f(z) misfit =  2.7 . Rerun with increased df #> Warning: In column  4   male_8w ,f(z) misfit =  1.9 . Rerun with increased df #> Warning: In column 5 female_1w the estimated fraction of nulls is 1. #> Warning: In column 7 female_4w the estimated fraction of nulls is 1. #> Warning: In column 8 female_8w the estimated fraction of nulls is 1. #> EM iteration 2 #> EM iteration 3 #> EM iteration 4 #> EM iteration 5 #> EM iteration 6 #> EM iteration 7 #> EM iteration 8 #> EM iteration 9 #> EM iteration 10 #> EM iteration 11 #> EM iteration 12 #> EM iteration 13 #> EM iteration 14 #> EM iteration 15 #> EM iteration 16 #> EM iteration 17 #> EM iteration 18 #> EM iteration 19 #> EM iteration 20 #> EM iteration 21 #> EM iteration 22 #> EM iteration 23 #> EM iteration 24 #> EM iteration 25 #> EM iteration 26 #> EM iteration 27 #> EM iteration 28 #> EM iteration 29 #> EM iteration 30 #> EM iteration 31 #> EM iteration 32 #> EM iteration 33 #> EM iteration 34 #> EM iteration 35 #> EM iteration 36 #> EM iteration 37 #> EM iteration 38 #> EM iteration 39 #> EM iteration 40 #> EM iteration 41 #> EM iteration 42 #> EM iteration 43 #> EM iteration 44 #> EM iteration 45 #> EM iteration 46 #> EM iteration 47 #> EM iteration 48 #> EM iteration 49 #> EM iteration 50 #> EM iteration 51 #> EM iteration 52 #> EM iteration 53 #> EM iteration 54 #> EM iteration 55 #> EM iteration 56 #> EM iteration 57 #> EM iteration 58 #> EM iteration 59 #> EM iteration 60 #> EM iteration 61 #> EM iteration 62 #> EM iteration 63 #> EM iteration 64 #> EM iteration 65 #> EM iteration 66 #> EM iteration 67 #> EM iteration 68 #> EM iteration 69 #> EM iteration 70 #> EM iteration 71 #> EM iteration 72 #> EM iteration 73 #> EM iteration 74 #> EM iteration 75 #> EM iteration 76 #> EM iteration 77 #> EM iteration 78 #> EM iteration 79 #> EM iteration 80 #> EM iteration 81 #> EM iteration 82 #> EM iteration 83 #> EM iteration 84 #> EM iteration 85 #> EM iteration 86 #> EM iteration 87 #> EM iteration 88 #> EM iteration 89 #> EM iteration 90 #> EM iteration 91 #> EM iteration 92 #> EM iteration 93 #> EM iteration 94 #> EM iteration 95 #> EM iteration 96 #> EM iteration 97 #> EM iteration 98 #> EM iteration 99 #> EM iteration 100 #> EM iteration 101 #> EM iteration 102 #> EM iteration 103 #> EM iteration 104 #> EM iteration 105 #> EM iteration 106 #> EM iteration 107 #> EM iteration 108 #> EM iteration 109 #> EM iteration 110 #> EM iteration 111 #> EM iteration 112 #> EM iteration 113 #> EM iteration 114 #> EM iteration 115 #> EM iteration 116 #> EM iteration 117 #> EM iteration 118 #> EM iteration 119 #> EM iteration 120 #> EM iteration 121 #> EM iteration 122 #> EM iteration 123 #> EM iteration 124 #> EM iteration 125 #> EM iteration 126 #> EM iteration 127 #> EM iteration 128 #> EM iteration 129 #> EM iteration 130 #> EM iteration 131 #> EM iteration 132 #> EM iteration 133 #> EM iteration 134 #> EM iteration 135 #> EM iteration 136 #> EM iteration 137 #> EM iteration 138 #> EM iteration 139 #> EM iteration 140 #> EM iteration 141 #> EM iteration 142 #> EM iteration 143 #> EM iteration 144 #> EM iteration 145 #> EM iteration 146 #> EM iteration 147 #> EM iteration 148 #> EM iteration 149 #> EM iteration 150 #> EM iteration 151 #> EM iteration 152 #> EM iteration 153 #> EM iteration 154 #> EM iteration 155 #> EM iteration 156 #> EM iteration 157 #> EM iteration 158 #> EM iteration 159 #> EM iteration 160 #> EM iteration 161 #> EM iteration 162 #> EM iteration 163 #> EM iteration 164 #> EM iteration 165 #> EM iteration 166 #> EM iteration 167 #> EM iteration 168 #> EM iteration 169 #> EM iteration 170 #> EM iteration 171 #> EM iteration 172 #> EM iteration 173 #> EM iteration 174 #> EM iteration 175 #> EM iteration 176 #> EM iteration 177 #> EM iteration 178 #> EM iteration 179 #> EM iteration 180 #> EM iteration 181 #> EM iteration 182 #> EM iteration 183 #> EM iteration 184 #> EM iteration 185 #> EM iteration 186 #> EM iteration 187 #> EM iteration 188 #> EM iteration 189 #> EM iteration 190 #> EM iteration 191 #> EM iteration 192 #> EM iteration 193 #> EM iteration 194 #> EM iteration 195 #> EM iteration 196 #> EM iteration 197 #> EM iteration 198 #> EM iteration 199 #> EM iteration 200 #> EM iteration 201 #> EM iteration 202 #> EM iteration 203 #> EM iteration 204 #> EM iteration 205 #> EM iteration 206 #> EM iteration 207 #> EM iteration 208 #> EM iteration 209 #> EM iteration 210 #> EM iteration 211 #> EM iteration 212 #> EM iteration 213 #> EM iteration 214 #> EM iteration 215 #> EM iteration 216 #> EM iteration 217 #> EM iteration 218 #> EM iteration 219 #> EM iteration 220 #> EM iteration 221 #> EM iteration 222 #> EM iteration 223 #> EM iteration 224 #> EM iteration 225 #> EM iteration 226 #> EM iteration 227 #> EM iteration 228 #> EM iteration 229 #> EM iteration 230 #> EM iteration 231 #> EM iteration 232 #> EM iteration 233 #> EM iteration 234 #> EM iteration 235 #> EM iteration 236 #> EM iteration 237 #> EM iteration 238 #> EM iteration 239 #> EM iteration 240 #> EM iteration 241 #> EM iteration 242 #> EM iteration 243 #> EM iteration 244 #> EM iteration 245 #> EM iteration 246 #> Converged after 245 EM iterations. # look at the null cluster after adding the signal above quantile(repfdr_results$repfdr_cluster_posteriors[,\"00000000\"],probs=c(0.05,0.1,0.5)) #>         5%        10%        50%  #> 0.07926923 0.92329821 0.99725019  # now the posteriors of the first 500 rows,  # with respect to the \"planted\" cluster should have high posteriors: quantile(repfdr_results$repfdr_cluster_posteriors[1:500,\"11110000\"]) #>        0%       25%       50%       75%      100%  #> 0.0000000 0.9830629 0.9991024 1.0000000 1.0000000"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/replace_ensembl_with_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Ensembl ID with gene symbol — replace_ensembl_with_symbol","title":"Replace Ensembl ID with gene symbol — replace_ensembl_with_symbol","text":"Function used internally enrichment_network_vis().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/replace_ensembl_with_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Ensembl ID with gene symbol — replace_ensembl_with_symbol","text":"","code":"replace_ensembl_with_symbol(x, map, return_N = TRUE, collapse = TRUE)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/replace_ensembl_with_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Ensembl ID with gene symbol — replace_ensembl_with_symbol","text":"x character, comma-separated Ensembl IDs map data table, mapping Ensembl IDs gene symbols. Must include columns \"ensembl_gene\" \"gene_symbol\". return_N boolean, whether prepend concatenated gene symbols number unique gene symbols. TRUE default. collapse boolean, whether collapse gene symbols comma-separated string. , return vector unique gene symbols. TRUE default.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/replace_ensembl_with_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Ensembl ID with gene symbol — replace_ensembl_with_symbol","text":"either string comma-separated gene symbols, vector unique gene symbols, named list two values (\"N\" \"genes\") depending values return_N collapse.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/rrbs_differential_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"RRBS differential anlaysis — rrbs_differential_analysis","title":"RRBS differential anlaysis — rrbs_differential_analysis","text":"Timewise training differential analysis wrapper RRBS data.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/rrbs_differential_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RRBS differential anlaysis — rrbs_differential_analysis","text":"","code":"rrbs_differential_analysis(   y,   PHENO = MotrpacRatTraining6moData::PHENO,   METHYL_META = MotrpacRatTraining6moData::METHYL_META,   verbose = TRUE,   adj_pct_unaligned = FALSE,   samples_to_remove = data.table::data.table(MotrpacRatTraining6moData::OUTLIERS)[assay     == \"METHYL\", viallabel],   edger_tol = 1e-05,   dataset_name = \"\" )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/rrbs_differential_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RRBS differential anlaysis — rrbs_differential_analysis","text":"y edgeR::DGEList() object. yall$genes metadata data frame locus coordinates (see details), fields minimum: Chr, EntrezID, Symbol, Strand PHENO data frame row per sample. Contains least following columns: \"sex\", \"group\". MotrpacRatTraining6moData::PHENO default. METHYL_META data frame row per sample. Contains RRBS pipeline QA/QC scores. Contains least following columns: \"pct_Unaligned\". MotrpacRatTraining6moData::METHYL_META default. verbose logical. TRUE: comments pipeline progress printed. adj_pct_unaligned logical. TRUE: adjust percent unaligned reads. Default FALSE. samples_to_remove character vector. Contains ids samples removed (e.g., identified outliers failed samples). METHYL samples MotrpacRatTraining6moData::OUTLIERS default. edger_tol number. internal parameter edgeR. Default 1e-05. Consider increasing algorithm takes long. dataset_name character. name current dataset. added output.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/rrbs_differential_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RRBS differential anlaysis — rrbs_differential_analysis","text":"list.First item called timewise contain contrast-specific differential analysis results. Second item called training contains overall training-level significance per locus.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/rrbs_differential_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RRBS differential anlaysis — rrbs_differential_analysis","text":"","code":"if (FALSE) { data(PHENO) data(METHYL_META)  # Raw data by tissue are available as RData files in Google Cloud Storage with the following URLs:    # Brown adipose: # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_BAT_RAW_DATA.rda # Heart:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_HEART_RAW_DATA.rda # Hippocampus:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_HIPPOC_RAW_DATA.rda # Kidney:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_KIDNEY_RAW_DATA.rda # Lung:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_LUNG_RAW_DATA.rda # Liver:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_LIVER_RAW_DATA.rda # Gastrocnemius:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_SKMGN_RAW_DATA.rda # White adipose:  # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/METHYL_WATSC_RAW_DATA.rda  # load_methyl_raw_data() can be used to download data for a tissue, e.g., # download the gastrocnemius data and load the data object into this session: yall = load_methyl_raw_data(\"SKM-GN\")  # for the simplicity of this example, we subset the data to 5000 loci y = yall[1:5000,] dea_res = rrbs_differential_analysis(y,PHENO,METHYL_META,adj_pct_unaligned=T) head(dea_res$timewise) head(dea_res$training)  # Alternatively, you can use the processed datasets. # These are also available through the Google Cloud directory: # https://storage.googleapis.com/motrpac-rat-training-6mo-extdata/ # File formats are \\code{METHYL_XXX_NORM_DATA.rda} and \\code{METHYL_XXX_DA.rda}  # where XXX is the tissue name: # BAT (brown adipose), HEART, HIPPOC (hippocampus), KIDNEY, LUNG, LIVER,  # SKMGN (gastrocnemius skeletal muscle), and WATSC (white adipose)  # You can use load_sample_data() to download and load the normalized data, e.g.: y_processed = load_sample_data(\"SKM-GN\", \"METHYL\", normalized = TRUE) # again, for the simplicity of this example, we subset the data to 5000 loci y = y_processed[1:5000,-c(1:4)] da_res = rrbs_differential_analysis(y, adj_pct_unaligned=TRUE) head(da_res$timewise) head(da_res$training) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_deseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for DESeq2::DESeq() — run_deseq","title":"Wrapper for DESeq2::DESeq() — run_deseq","text":"Wrapper perform multiple pairwise contrasts DESeq2::DESeq()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_deseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for DESeq2::DESeq() — run_deseq","text":"","code":"run_deseq(   counts,   meta,   covar,   outcome_of_interest,   contrasts,   dds = NULL,   shrink = FALSE,   verbose = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_deseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for DESeq2::DESeq() — run_deseq","text":"counts data frame raw filtered RNA-seq counts. Row names gene IDs column names sample IDs. Column names must correspond values meta$viallabel meta data frame metadata columns c(outcome_of_interest, covar, 'viallabel') minimum. counts subset meta$viallabel. covar character vector, adjustment variables include DESeq model outcome_of_interest character, outcome interest include model. meta must include variable column. contrasts must include levels variable. contrasts list vectors, vector form c(outcome_of_interest, numerator, denominator), e.g. c('sex_group','female.1w','female.control') dds optional DESeq2::DESeqResults() object previously generated shrink bool, whether apply DESeq2::lfcShrink() verbose bool, whether print design string","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_deseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for DESeq2::DESeq() — run_deseq","text":"named list two items: res data frame results dds DESeq2::DESeqResults() object","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_deseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for DESeq2::DESeq() — run_deseq","text":"","code":"if (FALSE) { # Get 1- and 2- week training effects in female gastrocnemius data = transcript_prep_data(\"SKM-GN\", sex = \"female\") deseq_res = run_deseq(data$filt_counts,                        data$metadata,                       data$covariates,                       \"group\",                       list(c(\"group\",\"1w\",\"control\"), c(\"group\",\"2w\",\"control\"))) head(deseq_res$res)                        # Get shrunken effects using the DESeqResults objects generated in the previous step deseq_res_shrunk = run_deseq(data$filt_counts,                              data$metadata,                             data$covariates,                             \"group\",                             list(c(\"group\",\"1w\",\"control\"), c(\"group\",\"2w\",\"control\")),                             dds = deseq_res$dds,                             shrink = TRUE) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_fella.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics pathway enrichment — run_fella","title":"Metabolomics pathway enrichment — run_fella","text":"Run FELLA metabolomics enrichment KEGG pathways. Return results format similar gprofiler2::gost() results.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_fella.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics pathway enrichment — run_fella","text":"","code":"run_fella(input, background, fella.data, method = \"hypergeom\", niter = 1e+05)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_fella.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolomics pathway enrichment — run_fella","text":"input character vector, input features (KEGG IDs) background character vector, background features (KEGG IDs) fella.data FELLA database returned FELLA::loadKEGGdata() method character, FELLA enrichment method, one \"hypergeom\", \"diffusion\" niter integer, number iterations estimate p-values simulation. applies diffusion method enrichment.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_fella.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metabolomics pathway enrichment — run_fella","text":"data table pathway enrichment results: term_size double, number KEGG IDs annotated term query_size integer, number KEGG IDs included query intersection_size double, number KEGG IDs input query annotated corresponding term term_id character, unique term/pathway identifier source character, database source term/pathway computed_p_value double, nominal enrichment p-value kegg_id character, KEGG ID term_id","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_fella.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics pathway enrichment — run_fella","text":"","code":"if (FALSE) { # Make KEGG database kegg_db = \"~/KEGGdb/test\" make_kegg_db(kegg_db)  # Get FELLA data  fella.data = FELLA::loadKEGGdata(databaseDir = kegg_db,                                   internalDir = FALSE,                                  loadMatrix = c(\"hypergeom\",\"diffusion\"))  # Get input features # Metabolites in SKM-GN:8w_F1_M1 that map to a KEGG ID input = c(\"C02918\",\"C00195\",\"C01967\",\"C00016\",\"C04438\",\"C02294\",\"C00003\",\"C00006\",           \"C00157\",\"C00350\",\"C04475\",\"C00344\",\"C06125\",\"C00550\",\"C00387\",\"C04230\",           \"C00073\",\"C00864\",\"C00670\",\"C00836\",\"C00319\")  # Get universe/background list  background = MotrpacRatTraining6moData::GENE_UNIVERSES$gene_symbol$METAB$`SKM-GN`  # Example 1: method \"hypergeom\" res = run_fella(input, background, fella.data, method=\"hypergeom\")  # Example 2: method \"diffusion\" (more powerful but slower and more difficult to interpret) res = run_fella(input, background, fella.data, method=\"diffusion\") }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_single_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Run single iteration of pathway enrichment — run_single_enrichment","title":"Run single iteration of pathway enrichment — run_single_enrichment","text":"Run single iteration pathway enrichment (FELLA METAB gprofiler omes) intended run directly. Run within cluster_pathway_enrichment().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_single_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run single iteration of pathway enrichment — run_single_enrichment","text":"","code":"run_single_enrichment(   feature_to_gene_map,   universe,   cluster_res,   gene_identifier_type,   databases,   iterations,   i,   min_input_set_size,   fella.data,   fella_method,   logfile = \"/dev/null\",   maxattempt = 50 )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_single_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run single iteration of pathway enrichment — run_single_enrichment","text":"feature_to_gene_map data table, map intersection_id_type gene symbols. Columns must include \"feature_ID\", \"gene_symbol\", \"ensembl_gene\", \"kegg_id\". universe character vector genes universe background cluster_res data frame output check_cluster_res_format() gene_identifier_type column feature_to_gene_map matches gene identifier type universe databases character vector g:Profiler pathway databases query. \"KEGG\" \"REAC\" (REACTOME) default. Current options include: GO (GO:BP, GO:MF, GO:CC select particular GO branch), KEGG, REAC, TF, MIRNA, CORUM, HP, HPA, WP. See gprofiler2 documentation --date list. iterations data frame passed cluster_pathway_enrichment() defines iteration function integer index passed cluster_pathway_enrichment() specifies row iterations use min_input_set_size integer, input must minimum number unique mappable gene IDs attempt enrichment gprofiler2::gost() fella.data FELLA database returned FELLA::loadKEGGdata() passed run_fella() fella_method character, enrichment method FELLA::enrich(), one \"hypergeom\" \"diffusion\", passed run_fella() logfile optional character, path log failed iterations maxattempt integer, max number consecutive null results gprofiler2::gost() giving ","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/run_single_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run single iteration of pathway enrichment — run_single_enrichment","text":"data table enrichment results, NULL enrichment results returned","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"Run ssGSEA PTM-SEA ssGSEA2.0. GCT files results written outdir.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"","code":"ssGSEA2_wrapper(   input_gct_path,   method = c(\"gsea\", \"gsea_mitocarta\", \"ptmsea\"),   gene_set_db_path = NULL,   output_prefix = NULL,   outdir = \".\",   nperm = NULL,   ... )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"input_gct_path character, path GCT file used input, e.g., prepare_gsea_input() prepare_ptmsea_input() method character, one \"gsea\",\"gsea_mitocarta\",\"ptmsea\". Must \"gsea\" \"ptmsea\" gene_set_db_path specified. gene_set_db_path optional character character vector GMT files used gene set database(s). specified, corresponding database used manuscript analyses used (see details). output_prefix character, prefix results. default, prefix taken input_gct_path. outdir character, output directory results. directory created already exist. Current directory default. nperm integer, number permutations. Default 10000 methods \"gsea\", \"gsea_mitocarta\" 1000 method \"ptmsea\". ... arguments passed ssGSEA2::run_ssGSEA2(), e.g., parallelization","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"Large named list full GSEA output. Documentation list currently available. users interested GCT files written outdir instead.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"Gene set databases: gene_set_db_path specified, following gene set databases used given method: gsea: c2.cp.v7.0.symbols.RAT.gmt gsea_mitocarta: Rat.Refseq.MitoPathways3.0.gmt ptmsea: ptm.sig.db..flanking.human.v1.9.0.gmt","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/ssGSEA2_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ssGSEA2 or PTM-SEA — ssGSEA2_wrapper","text":"","code":"if (FALSE) { # For these examples, we use a single permutation for the sake of running # the example quickly. In practice, a large number of permutations should  # be used, e.g., 1000, 10000  # Run GSEA with differential analysis results from liver global proteome input = prepare_gsea_input(tissue = \"LIVER\",                            assay = \"PROT\",                             outdir = \"/tmp\") res = ssGSEA2_wrapper(input, method = \"gsea\", outdir = \"/tmp\", nperm = 1)  # Run GSEA with Mitocarta database, # which uses RefSeq IDs as pathway members input = prepare_gsea_input(tissue = \"SKM-GN\",                            assay = \"TRNSCRPT\",                             outdir = \"/tmp\",                            gene_id_type = \"refseq\") res = ssGSEA2_wrapper(input, method = \"gsea_mitocarta\", outdir = \"/tmp\", nperm = 1)  # Use example from the Broad # Download example input download.file(url = paste0(\"https://raw.githubusercontent.com/nicolerg/ssGSEA2.0/\",     \"master/example/PI3K_pert_logP_n2x23936.gct\"),   destfile = \"/tmp/PI3K_pert_logP_n2x23936.gct\") # Download gene set database download.file(url = paste0(\"https://raw.githubusercontent.com/nicolerg/ssGSEA2.0/\",     \"master/example/ptm.sig.db.all.flanking.human.v1.8.1.gmt\"),   destfile = \"/tmp/ptm.sig.db.all.flanking.human.v1.8.1.gmt\") # Using a small number of permutations for the sake of the example. 1000 recommended res = ssGSEA2_wrapper(\"/tmp/PI3K_pert_logP_n2x23936.gct\",                      method = \"ptmsea\",                       gene_set_db_path = \"/tmp/ptm.sig.db.all.flanking.human.v1.8.1.gmt\",                      outdir = \"/tmp\",                      nperm = 1) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_call_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Call RNA-seq sample outliers — transcript_call_outliers","title":"Call RNA-seq sample outliers — transcript_call_outliers","text":"Identify samples outside 5 times interquartile range principal components explain least 5% variance tissue. Use 1000 variable genes. specifies RNA-seq outliers excluded differential analysis MoTrPAC.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_call_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call RNA-seq sample outliers — transcript_call_outliers","text":"","code":"transcript_call_outliers(tissues)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_call_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call RNA-seq sample outliers — transcript_call_outliers","text":"tissues character vector tissue abbreviations call RNA-seq outliers. See MotrpacRatTraining6moData::TISSUE_ABBREV accepted values.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_call_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call RNA-seq sample outliers — transcript_call_outliers","text":"NULL outliers, data frame three columns one row per outlier: viallabel character, sample identifier tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV reason character, PC(s) sample flagged","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_call_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call RNA-seq sample outliers — transcript_call_outliers","text":"","code":"transcript_call_outliers(\"SKM-VL\") #> TRNSCRPT_SKMVL_RAW_COUNTS #> TRNSCRPT_SKMVL_NORM_DATA #> SKM-VL: #>     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8     PC9    PC10  #> 0.29908 0.09707 0.06524 0.03299 0.03006 0.02044 0.01973 0.01866 0.01758 0.01625  #> The first 3 PCs were selected to identify outliers. #> PC outliers: #>      PC    viallabel     PC value  #> [1,] \"PC1\" \"90252015603\" \"-118.23\" #> [2,] \"PC3\" \"90217015603\" \"-48.868\" #> Plotting PCs with outliers flagged...  #> Plotting PCs with outliers removed...    #>     viallabel tissue reason #> 1 90252015603 SKM-VL    PC1 #> 2 90217015603 SKM-VL    PC3 if (FALSE) { transcript_call_outliers(c(\"SKM-GN\",\"BLOOD\")) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"Load raw counts return filtered normalized data. Alternatively, user can provide numeric data frame raw RNA-seq counts.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"","code":"transcript_normalize_counts(   tissue,   min_cpm = 0.5,   min_num_samples = 2,   norm_method = \"TMM\",   counts = NULL )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV min_cpm double, retain genes min_cpm counts per million least min_num_samples samples min_num_samples double, retain genes min_cpm counts per million least min_num_samples samples norm_method character, one c(\"TMM\",\"TMMwsp\",\"RLE\",\"upperquartile\",\"none\"). \"TMM\" default. counts optional user-supplied numeric data frame matrix row names gene IDs column names sample identifiers","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"data frame row names feature_ID column names viallabel","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"Note function identical code used generate normalized RNA-seq data tables (MotrpacRatTraining6moData::TRNSCRPT_NORM_DATA) normalized RNA-seq data available MoTrPAC Data Hub, transcript_normalize_counts(tissue) yields slightly fewer genes corresponding MotrpacRatTraining6moData::TRNSCRPT_NORM_DATA object. Investigation discrepancy suggests minor functional differences version edgeR::cpm() used ~2.5 years apart. Find details GitHub issue.","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_normalize_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter and normalize raw RNA-seq counts — transcript_normalize_counts","text":"","code":"norm_data = transcript_normalize_counts(\"LUNG\")  # Simulate \"user-supplied data\" counts = load_sample_data(\"LUNG\", \"TRNSCRPT\", normalized=FALSE) #> TRNSCRPT_LUNG_RAW_COUNTS counts = df_to_numeric(counts) norm_data = transcript_normalize_counts(counts = counts)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess RNA-seq data — transcript_prep_data","title":"Preprocess RNA-seq data — transcript_prep_data","text":"Collect filtered raw counts, normalized sample-level data, phenotypic data, RNA-seq metadata, covariates, outliers associated given tissue.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess RNA-seq data — transcript_prep_data","text":"","code":"transcript_prep_data(   tissue,   sex = NULL,   covariates = c(\"pct_globin\", \"RIN\", \"pct_umi_dup\", \"median_5_3_bias\"),   outliers = na.omit(MotrpacRatTraining6moData::OUTLIERS$viallabel),   adjust_covariates = TRUE,   center_scale = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess RNA-seq data — transcript_prep_data","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV sex character, one 'male' 'female' covariates character vector covariates correspond column names MotrpacRatTraining6moData::TRNSCRPT_META. Defaults covariates used manuscript. outliers vector viallabels exclude returned data. Defaults [MotrpacRatTraining6moData::OUTLIERS]$viallabel adjust_covariates boolean, whether adjust covariates using fix_covariates(). applies covariates NULL. center_scale boolean, whether center scale continuous covariates within fix_covariates(). applies adjust_covariates also TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess RNA-seq data — transcript_prep_data","text":"named list five items: metadata data frame combined MotrpacRatTraining6moData::PHENO MotrpacRatTraining6moData::TRNSCRPT_META, filtered samples tissue. adjust_covariates = TRUE, missing values covariates imputed. also center_scale = TRUE, continuous variables named covariates centered scaled. covariates character vector covariates adjust differential analysis. tissues except VENACV, vector (sub)set input list covariates. Covariates removed vector many missing values values constant. See fix_covariates() details. tissue = \"VENACV\", Ensembl ID Ucp1 also added covariate. counts data frame raw counts Ensembl IDs (also TRNSCRPT feature_IDs) row names vial labels column names. See MotrpacRatTraining6moData::TRNSCRPT_RAW_COUNTS details. norm_data data frame TMM-normalized data Ensembl IDs (also TRNSCRPT feature_IDs) row names vial labels column names. See MotrpacRatTraining6moData::TRNSCRPT_NORM_DATA details. outliers subset outliers input removed data","code":""},{"path":[]},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess RNA-seq data — transcript_prep_data","text":"","code":"# Process gastrocnemius RNA-seq data with default parameters, i.e., return data from both  # sexes, remove established outliers, impute missing values in default covariates  gastroc_data1 = transcript_prep_data(\"SKM-GN\") #> TRNSCRPT_SKMGN_RAW_COUNTS #> TRNSCRPT_SKMGN_NORM_DATA  # Same as above but do not remove outliers if they exist  gastroc_data2 = transcript_prep_data(\"SKM-GN\", outliers = NULL) #> TRNSCRPT_SKMGN_RAW_COUNTS #> TRNSCRPT_SKMGN_NORM_DATA  # Same as above but do not adjust existing variables in the metadata   gastroc_data3 = transcript_prep_data(\"SKM-GN\", covariates = NULL, outliers = NULL) #> TRNSCRPT_SKMGN_RAW_COUNTS #> TRNSCRPT_SKMGN_NORM_DATA  # Same as above but only return data from male samples gastroc_data4 = transcript_prep_data(\"SKM-GN\", covariates = NULL, outliers = NULL, sex = \"male\") #> TRNSCRPT_SKMGN_RAW_COUNTS #> TRNSCRPT_SKMGN_NORM_DATA  # Same as gastroc_data2 but also center and scale default continuous covariates  # in the returned metadata, which is also done within [run_deseq()]  # (called by [transcript_timewise_dea()])  gastroc_data4 = transcript_prep_data(\"SKM-GN\", outliers = NULL, center_scale = TRUE) #> TRNSCRPT_SKMGN_RAW_COUNTS #> TRNSCRPT_SKMGN_NORM_DATA"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_timewise_da.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA-seq timewise differential analysis — transcript_timewise_da","title":"RNA-seq timewise differential analysis — transcript_timewise_da","text":"Use DESeq2 perform pairwise contrasts group trained animals sex-matched control group single tissue. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_timewise_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA-seq timewise differential analysis — transcript_timewise_da","text":"","code":"transcript_timewise_da(   tissue,   covariates = c(\"pct_globin\", \"RIN\", \"pct_umi_dup\", \"median_5_3_bias\"),   outliers = na.omit(MotrpacRatTraining6moData::OUTLIERS$viallabel),   add_shrunk_logfc = TRUE,   rdata_outfile = NULL,   overwrite = FALSE,   verbose = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_timewise_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RNA-seq timewise differential analysis — transcript_timewise_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV covariates character vector covariates correspond column names MotrpacRatTraining6moData::TRNSCRPT_META. Defaults covariates used manuscript. outliers vector viallabels exclude differential analysis. Defaults [MotrpacRatTraining6moData::OUTLIERS\\$viallabel[[MotrpacRatTraining6moData::OUTLIERS]$assay == \"TRNSCRPT\"] add_shrunk_logfc boolean, whether calculate shrunk log fold-changes addition standard log fold-changes rdata_outfile NULL path save DESeq2 objects RData file overwrite boolean, whether overwrite file rdata_outfile exists verbose boolean, whether print messages","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_timewise_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RNA-seq timewise differential analysis — transcript_timewise_da","text":"data frame one row per gene per contrast (usually 8 rows per gene): feature_ID character, MoTrPAC feature identifier sex character, one 'male' 'female' comparison_group character, time point trained animals compared sex-matched sedentary control animals, one '1w', '2w', '4w', '8w' assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. covariates character, comma-separated list adjustment variables removed_samples character, comma-separated list outliers (vial labels) removed differential analysis logFC double, log fold-change numerator 'comparison_group', e.g., '1w', denominator group sex-matched sedentary control animals logFC_se double, standard error log fold-change shrunk_logFC double, log fold-change shrunk type = 'ashr' optmethod = 'mixSQP', add_shrunk_logfc = TRUE shrunk_logFC_se double, standard error shrunk_logFC, add_shrunk_logfc = TRUE zscore double, Wald statistic p_value double, unadjusted p-value difference 'comparison_group' group sex-matched sedentary control animals comparison_average_intensity double, average intensity among replicates 'comparison_group' comparison_average_intensity_se double, standard error 'comparison_average_intensity' reference_average_intensity double, average intensity among replicates group sex-matched sedentary control animals reference_average_intensity_se double, standard error 'reference_average_intensity'","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_timewise_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RNA-seq timewise differential analysis — transcript_timewise_da","text":"","code":"if (FALSE) { # Perform differential analysis for expressed genes in brown adipose tissue  # with default parameters, i.e., outliers and covariates used for the manuscript;  # calculate both standard and shrunk log fold-changes da = transcript_timewise_da(\"BAT\")  # Same as above but don't calculate shrunk log fold-changes da = transcript_timewise_da(\"BAT\", add_shrunk_logfc = FALSE)  # Same as the first example but save the [DESeq2::DESeq2()] DESeqResults objects in an RData file  da = transcript_timewise_da(\"BAT\", rdata_outfile = \"~/test/BAT_RNA_DA.RData\", overwrite = TRUE) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_training_da.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA-seq training differential analysis — transcript_training_da","title":"RNA-seq training differential analysis — transcript_training_da","text":"Use DESeq2 perform likelihood ratio test test effect training across time points. Analysis performed separately males females.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_training_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA-seq training differential analysis — transcript_training_da","text":"","code":"transcript_training_da(   tissue,   covariates = c(\"pct_globin\", \"RIN\", \"pct_umi_dup\", \"median_5_3_bias\"),   outliers = na.omit(MotrpacRatTraining6moData::OUTLIERS$viallabel),   rdata_outfile = NULL,   overwrite = FALSE,   verbose = FALSE )"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_training_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RNA-seq training differential analysis — transcript_training_da","text":"tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV covariates character vector covariates correspond column names MotrpacRatTraining6moData::TRNSCRPT_META. Defaults covariates used manuscript. outliers vector viallabels exclude differential analysis. Defaults [MotrpacRatTraining6moData::OUTLIERS]$viallabel rdata_outfile NULL path save DESeq2 objects RData file overwrite boolean, whether overwrite file rdata_outfile exists verbose boolean, whether print messages","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_training_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RNA-seq training differential analysis — transcript_training_da","text":"data frame one row per gene: feature_ID character, MoTrPAC feature identifier assay character, assay abbreviation, one MotrpacRatTraining6moData::ASSAY_ABBREV assay_code character, assay code used data release. See MotrpacBicQC::assay_codes. tissue character, tissue abbreviation, one MotrpacRatTraining6moData::TISSUE_ABBREV tissue_code character, tissue code used data release. See MotrpacBicQC::bic_animal_tissue_code. removed_samples_male character, comma-separated list male outliers (vial labels) removed differential analysis removed_samples_female character, comma-separated list female outliers (vial labels) removed differential analysis lrt_male double, likelihood ratio test statistic males lrt_female double, likelihood ratio test statistic females p_value_male double, nominal LRT p-value males p_value_female double, nominal LRT p-value females full_model_male character, full model used LRT males full_model_female character, full model used LRT females reduced_model_male character, reduced model used LRT males reduced_model_female character, reduced model used LRT females p_value double, combined male female nominal p-value using sum logs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/transcript_training_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RNA-seq training differential analysis — transcript_training_da","text":"","code":"if (FALSE) { # Perform differential analysis for expressed genes in brown adipose tissue  # with default parameters, i.e., outliers and covariates used for the manuscript da = transcript_training_da(\"BAT\")  # Same as above but save the [DESeq2::DESeq2()] DESeqResults objects in an RData file  da = transcript_training_da(\"BAT\",                              rdata_outfile = \"~/test/BAT_RNA_training-da.RData\",                              overwrite = TRUE) }"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/viallabel_to_pid.html","id":null,"dir":"Reference","previous_headings":"","what":"Map vial labels to PIDs — viallabel_to_pid","title":"Map vial labels to PIDs — viallabel_to_pid","text":"Map sample identifiers (vial labels) participant IDs (PIDs). Vial labels unique per sample; PIDs unique per animal. Multiple vial labels correspond different aliquots tissue sample.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/viallabel_to_pid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map vial labels to PIDs — viallabel_to_pid","text":"","code":"viallabel_to_pid(viallabels)"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/viallabel_to_pid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map vial labels to PIDs — viallabel_to_pid","text":"viallabels vector, list vial labels","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/viallabel_to_pid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map vial labels to PIDs — viallabel_to_pid","text":"named list names vial labels values PIDs","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/reference/viallabel_to_pid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map vial labels to PIDs — viallabel_to_pid","text":"","code":"map = viallabel_to_pid(c(\"90416015402\", \"90416015403\", \"90416015302\")) map = viallabel_to_pid(c(90416015402, 90416015403, 90416015302)) map  #> <NA> <NA> <NA>  #>   NA   NA   NA"},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-164-2023-06-02","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.6.4 (2023-06-02)","title":"MotrpacRatTraining6mo 1.6.4 (2023-06-02)","text":"Bug fix transcript_timewise_da() run limited contrasts tissue=\"VENACV\".","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-163-2023-04-28","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.6.3 (2023-04-28)","title":"MotrpacRatTraining6mo 1.6.3 (2023-04-28)","text":"Create new tag associate Zenodo.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-162-2023-03-09","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.6.2 (2023-03-09)","title":"MotrpacRatTraining6mo 1.6.2 (2023-03-09)","text":"Bug fix atac_timewise_da() atac_training_da() n_features = Inf.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-161-2023-02-05","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.6.1 (2023-02-05)","title":"MotrpacRatTraining6mo 1.6.1 (2023-02-05)","text":"Accommodate RefMet IDs feature IDs plot_feature_normalized_data() plot_feature_logfc(). Pass user-supplied version feature identifier plot_feature_logfc() called within plot_feature_normalized_data().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-160-2023-01-26","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.6.0 (2023-01-26)","title":"MotrpacRatTraining6mo 1.6.0 (2023-01-26)","text":"Add functions GSEA PTM-SEA: ssGSEA2_wrapper(), prepare_gsea_input(), prepare_ptmsea_input(), find_flanks(), load_uniprot_human_fasta() Add extract_top_trajectories() function.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-152-2023-01-20","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.5.2 (2023-01-20)","title":"MotrpacRatTraining6mo 1.5.2 (2023-01-20)","text":"enrichment_network_vis() argument return_html=TRUE, don’t require GNU sed.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-151-2023-01-19","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.5.1 (2023-01-19)","title":"MotrpacRatTraining6mo 1.5.1 (2023-01-19)","text":"enrichment_network_vis(), include pathway names determination node labels. enrichment_network_vis(), use MotrpacRatTraining6moData::FEATURE_TO_GENE_FILT feature_to_gene default instead unfiltered version. Add details enrichment_network_vis() docs.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-150-2023-01-18","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.5.0 (2023-01-18)","title":"MotrpacRatTraining6mo 1.5.0 (2023-01-18)","text":"Add load_feature_annotation(). Add counts argument transcript_normalize_counts() atac_normalize_counts() allow user-supplied data. Add tissues, assays, cluster arguments enrichment_network_vis() provide alternate way users specify results MotrpacRatTraining6moData::GRAPH_PW_ENRICH. Add tests enrichment_network_vis(). Use signif() instead round() display values plot titles. Add note reproducibility issues documentation transcript_normalize_counts(). Move MotrpacRatTraining6moData Imports Depends. means MotrpacRatTraining6moData also attached (just loaded) MotrpacRatTraining6mo attached. Replace fetch_object(name_as_string) .get, internally uses get(name_as_string, envir=.environment(\"package:MotrpacRatTraining6moData\")). Change URLs load_methyl_feature_annotation() load_atac_feature_annotation(). Fix bug plot_feature_logfc() prevented epigenetic features plotted. Speed plot_feature_logfc() differential epigenetic features. get_rdata_from_url(), calculate log fold-change standard errors METHYL differential analysis results: logFC_se = logFC/zscore","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-143-2023-01-06","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.4.3 (2023-01-06)","title":"MotrpacRatTraining6mo 1.4.3 (2023-01-06)","text":"plot_feature_normalized_data() plot_feature_logfc(), handle input features don’t exist data.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-142-2023-01-06","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.4.2 (2023-01-06)","title":"MotrpacRatTraining6mo 1.4.2 (2023-01-06)","text":"Dodge points plot_feature_normalized_data() plot_feature_logfc() readability. Make plot_feature_normalized_data() plot_feature_logfc() accommodating features multiple measurements. Add add_adj_p parameter plot_feature_normalized_data(). Add return_data parameter plot_feature_logfc(). Return NULL instead error data doesn’t exist plotting plot_feature_normalized_data() loops.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-141-2023-01-05","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.4.1 (2023-01-05)","title":"MotrpacRatTraining6mo 1.4.1 (2023-01-05)","text":"Fix custom_cluster_pathway_enrichment() accept list lists input. Use filtered feature--gene map perform pathway enrichment. cluster_pathway_enrichment(), remove pathway enrichments driven single gene consistency landscape paper.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-140-2023-01-05","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.4.0 (2023-01-05)","title":"MotrpacRatTraining6mo 1.4.0 (2023-01-05)","text":"Add gene_pathway_enrichment() (wrapper gprofiler2::gost()). Add example “Get Started” vignette.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-130-2023-01-04","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.3.0 (2023-01-04)","title":"MotrpacRatTraining6mo 1.3.0 (2023-01-04)","text":"Add df_to_numeric() easily format data frames. Add plot_feature_normalized_data() plot normalized sample-level data single feature. Add plot_feature_logfc() plot differential analysis results single feature. Add examples screenshots “Get Started” vignette.","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-120-2022-12-27","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.2.0 (2022-12-27)","title":"MotrpacRatTraining6mo 1.2.0 (2022-12-27)","text":"Add functions perform meta-analysis meta-regression redundant metabolites. Add load_training_da() load training summary statistics GSC. Retain order input vial labels result viallabel_to_pid().","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-111-2022-11-09","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.1.1 (2022-11-09)","title":"MotrpacRatTraining6mo 1.1.1 (2022-11-09)","text":"Use MotrpacRatTraining6moData::TRAINING_REGULATED_NORM_DATA add training_regulated_only argument speed plot_feature_trajectories() Fix bugs get_tree_plot_for_tissue() get_trajectory_sizes_from_edge_sets() Add scale argument call_pca_outliers() (default TRUE) Set default values arguments plot verbose call_pca_outliers() (default TRUE)","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-110-2022-10-10","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.1.0 (2022-10-10)","title":"MotrpacRatTraining6mo 1.1.0 (2022-10-10)","text":"Add atac_call_outliers() Bug fix atac_prep_data()","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-102-2022-10-08","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.0.2 (2022-10-08)","title":"MotrpacRatTraining6mo 1.0.2 (2022-10-08)","text":"Use hashmap speed calculation similarity scores enrichment_network_viz() (thanks, Jay Yu) Improve visInteraction settings enrichment_network_viz(), .e., show edges zoom slow zoom Don’t run memory-intensive examples vignette code blocks prevent GitHub Actions OOM error","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-101-2022-09-21","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.0.1 (2022-09-21)","title":"MotrpacRatTraining6mo 1.0.1 (2022-09-21)","text":"Bug fixes transcript_timewise_da() transcript_prep_data() Keep examples printing much output Rename tutorial.Rmd MotrpacRatTraining6mo Add @keywords internal functions exported","code":""},{"path":"https://motrpac.github.io/MotrpacRatTraining6mo/news/index.html","id":"motrpacrattraining6mo-100-2022-09-20","dir":"Changelog","previous_headings":"","what":"MotrpacRatTraining6mo 1.0.0 (2022-09-20)","title":"MotrpacRatTraining6mo 1.0.0 (2022-09-20)","text":"First release","code":""}]
